Checking out Encounter license ...
Virtuoso_Digital_Implem 9.1 license checkout succeeded.
	Maximum number of instance allowed (1 x 50000).
**ERROR: (ENCOAX-148):	Could not open shared library libfeoax22.so : liboaDesign.so: cannot open shared object file: No such file or directory

**ERROR: (ENCOAX-148):	OA features will be disabled in this session.


*******************************************************************
*   Copyright (c)  Cadence Design Systems, Inc.  1996 - 2010.     *
*                     All rights reserved.                        *
*                                                                 *
*                                                                 *
*                                                                 *
* This program contains confidential and trade secret information *
* of Cadence Design Systems, Inc. and is protected by copyright   *
* law and international treaties.  Any reproduction, use,         *
* distribution or disclosure of this program or any portion of it,*
* or any attempt to obtain a human-readable version of this       *
* program, without the express, prior written consent of          *
* Cadence Design Systems, Inc., is strictly prohibited.           *
*                                                                 *
*                 Cadence Design Systems, Inc.                    *
*                    2655 Seely Avenue                            *
*                   San Jose, CA 95134,  USA                      *
*                                                                 *
*                                                                 *
*******************************************************************

@(#)CDS: Encounter v09.14-s273_1 (32bit) 02/17/2011 18:35 (Linux 2.6)
@(#)CDS: NanoRoute v09.14-s029 NR110207-1105/USR65-UB (database version 2.30, 112.2.1) {superthreading v1.15}
@(#)CDS: CeltIC v09.14-s097_1 (32bit) 02/08/2011 02:24:38 (Linux 2.6.9-89.0.19.ELsmp)
@(#)CDS: AAE 09.14-s001 (32bit) 02/17/2011 (Linux 2.6.9-89.0.19.ELsmp)
@(#)CDS: CTE 09.14-s140_1 (32bit) Feb  8 2011 01:13:15 (Linux 2.6.9-89.0.19.ELsmp)
@(#)CDS: CPE v09.14-s001
--- Starting "Encounter v09.14-s273_1" on Sun Nov 13 17:27:00 2016 (mem=50.6M) ---
--- Running on coe-ee-cad45.sjsuad.sjsu.edu (x86_64 w/Linux 4.8.4-200.fc24.x86_64) ---
This version was compiled on Thu Feb 17 18:35:02 PST 2011.
Set DBUPerIGU to 1000.
Set net toggle Scale Factor to 1.00
Set Shrink Factor to 1.00000
*** Memory pool thread-safe mode activated.
<CMD> encMessage warning 0
Suppress "**WARN ..." messages.
<CMD> encMessage debug 0
<CMD> encMessage info 0
Reading config file - ./encounter.conf
**ERROR: (ENCSYT-6300):	can't read "env(PDK_DIR)": no such variable
<CMD> setenv PDK_DIR /home/010123386@SJSUAD.SJSU.EDU/Documents/new_lib/FreePDK45
<CMD> encMessage warning 0
Suppress "**WARN ..." messages.
<CMD> encMessage debug 0
<CMD> encMessage info 0
Reading config file - ./encounter.conf
**WARN: (ENCEXT-1085):	Option 'rda_Input(ui_res_scale)' used in configuration file './encounter.conf' is obsolete. The name will be converted into new format automatically if design is saved and then restored. Alternatively, update the configuration file to use names 'rda_Input(ui_preRoute_res)' and/or 'rda_Input(ui_postRoute_res)' for resistance scale factors to be used at preRoute/postRoute stages of the design . The obsolete name works in this release. But to avoid this warning and to ensure compatibility with future releases, update this option name.
**WARN: (ENCLF-155):	ViaRule only supports routing/cut layer, but poly layer found for viaRule 'M1_POLY', 
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'A' of cell 'AND2X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'B' of cell 'AND2X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'max_fanout' on 'output/inout' pin 'Y' of cell 'AND2X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'A' of cell 'AND2X2' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'B' of cell 'AND2X2' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'max_fanout' on 'output/inout' pin 'Y' of cell 'AND2X2' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'A' of cell 'AOI21X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'B' of cell 'AOI21X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'C' of cell 'AOI21X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'max_fanout' on 'output/inout' pin 'Y' of cell 'AOI21X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'A' of cell 'AOI22X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'B' of cell 'AOI22X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'C' of cell 'AOI22X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'D' of cell 'AOI22X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'max_fanout' on 'output/inout' pin 'Y' of cell 'AOI22X1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'A' of cell 'BUFX2' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'max_fanout' on 'output/inout' pin 'Y' of cell 'BUFX2' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'A' of cell 'BUFX4' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'max_fanout' on 'output/inout' pin 'Y' of cell 'BUFX4' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
**WARN: (TECHLIB-436):	Attribute 'fanout_load' on 'input/inout' pin 'A' of cell 'CLKBUF1' is not defined in the library. Either define this value in the library or use set_default_timing_library to pick these values from a default library.
*** End library_loading (cpu=0.00min, mem=0.0M, fe_cpu=0.07min, fe_mem=283.3M) ***
**WARN: (ENCOPT-3465):	The buffer cells were automatically identified. The command setBufFootPrint is ignored. If you want to force the tool to honor this setting, you have to load a footprint file through the loadFootPrint command.
**WARN: (ENCOPT-3466):	The inverter cells were automatically identified. The command setInvFootPrint is ignored. If you want to force the tool to honor this setting, you have to load a footprint file through the loadFootPrint command.
**WARN: (ENCOPT-3467):	The delay cells were automatically identified. The command setDelayFootPrint is ignored. If you want to force the tool to honor this setting, you have to load a footprint file through the loadFootPrint command.
<CMD> setDrawView ameba
<CMD> setDrawView place
<CMD> loadConfig ./encounter.conf
**WARN: (ENCSYT-3033):	Cannot loadConfig after commitConfig.  This command is skipped.
<CMD> floorPlan -r 1.0 0.6 20 20 20 20
Adjusting Core to Left to: 20.1400. Core to Bottom to: 20.1400.
Horizontal Layer M1 offset = 190 (guessed)
Vertical Layer M2 offset = 190 (guessed)
Suggestion: specify LAYER OFFSET in LEF file
Reason: hard to extract LAYER OFFSET from standard cells
<CMD> addRing -spacing_bottom 5 -width_left 5 -width_bottom 5 -width_top 5 -spacing_top 5 -layer_bottom metal5 -width_right 5 -around core -center 1 -layer_top metal5 -spacing_right 5 -spacing_left 5 -layer_right metal6 -layer_left metal6 -nets { gnd vdd }

The power planner created 8 wires.
<CMD_INTERNAL> amoebaPlace
**WARN: (ENCSP-9007):	The command 'amoebaPlace' is obsolete. It has been replaced by 'placeDesign'.
Extracting standard cell pins and blockage ...... 
Pin and blockage extraction finished
Extracting macro/IO cell pins and blockage ...... 
Pin and blockage extraction finished
*** Starting "NanoPlace(TM) placement v0.892.2.20 (mem=302.6M)" ...
Options: ignoreScan ignoreSpare pinGuide gpeffort=medium 
**WARN: (ENCSP-9042):	Scan chains were not defined, -ignoreScan option will be ignored. 
Please first define the scan chains before using this option.
#std cell=31821 #block=0 (0 floating + 0 preplaced) #ioInst=0 #net=32443 #term=99559 #term/net=3.07, #fixedIo=0, #floatIo=0, #fixedPin=0, #floatPin=1153
stdCell: 31821 single + 0 double + 0 multi
Total standard cell length = 42.7739 (mm), area = 0.1057 (mm^2)
Design contains fractional 20 cells.
Average module density = 0.600.
Density for the design = 0.600.
       = stdcell_area 112563 (105652 um^2) / alloc_area 187590 (176072 um^2).
Pin Density = 0.884.
            = total # of pins 99559 / total Instance area 112563.
Iteration  1: Total net bbox = 2.136e+05 (2.14e+05 0.00e+00)
              Est.  stn bbox = 2.408e+05 (2.41e+05 0.00e+00)
              cpu = 0:00:00.4 real = 0:00:00.0 mem = 306.8M
Iteration  2: Total net bbox = 2.894e+05 (2.04e+05 8.54e+04)
              Est.  stn bbox = 3.434e+05 (2.30e+05 1.13e+05)
              cpu = 0:00:00.4 real = 0:00:00.0 mem = 306.8M
Iteration  3: Total net bbox = 2.958e+05 (2.06e+05 8.97e+04)
              Est.  stn bbox = 3.582e+05 (2.43e+05 1.15e+05)
              cpu = 0:00:00.8 real = 0:00:01.0 mem = 306.8M
Iteration  4: Total net bbox = 3.565e+05 (1.81e+05 1.76e+05)
              Est.  stn bbox = 4.276e+05 (2.09e+05 2.19e+05)
              cpu = 0:00:01.7 real = 0:00:02.0 mem = 306.8M
Iteration  5: Total net bbox = 3.699e+05 (1.94e+05 1.76e+05)
              Est.  stn bbox = 4.485e+05 (2.31e+05 2.18e+05)
              cpu = 0:00:01.6 real = 0:00:02.0 mem = 306.8M
Iteration  6: Total net bbox = 4.512e+05 (2.12e+05 2.39e+05)
              Est.  stn bbox = 5.423e+05 (2.51e+05 2.92e+05)
              cpu = 0:00:01.7 real = 0:00:01.0 mem = 306.8M
Iteration  7: Total net bbox = 5.005e+05 (2.44e+05 2.56e+05)
              Est.  stn bbox = 5.964e+05 (2.87e+05 3.09e+05)
              cpu = 0:00:01.5 real = 0:00:02.0 mem = 306.8M
Iteration  8: Total net bbox = 5.244e+05 (2.47e+05 2.78e+05)
              Est.  stn bbox = 6.236e+05 (2.90e+05 3.34e+05)
              cpu = 0:00:00.7 real = 0:00:01.0 mem = 306.8M
Iteration  9: Total net bbox = 5.371e+05 (2.58e+05 2.79e+05)
              Est.  stn bbox = 6.381e+05 (3.03e+05 3.35e+05)
              cpu = 0:00:00.7 real = 0:00:01.0 mem = 308.4M
Iteration 10: Total net bbox = 5.647e+05 (2.58e+05 3.06e+05)
              Est.  stn bbox = 6.682e+05 (3.03e+05 3.65e+05)
              cpu = 0:00:00.6 real = 0:00:00.0 mem = 308.4M
Iteration 11: Total net bbox = 5.764e+05 (2.69e+05 3.07e+05)
              Est.  stn bbox = 6.809e+05 (3.15e+05 3.66e+05)
              cpu = 0:00:00.7 real = 0:00:01.0 mem = 308.8M
Iteration 12: Total net bbox = 5.892e+05 (2.70e+05 3.20e+05)
              Est.  stn bbox = 6.937e+05 (3.15e+05 3.79e+05)
              cpu = 0:00:00.8 real = 0:00:01.0 mem = 309.0M
Iteration 13: Total net bbox = 6.058e+05 (2.86e+05 3.20e+05)
              Est.  stn bbox = 7.104e+05 (3.32e+05 3.79e+05)
              cpu = 0:00:01.0 real = 0:00:01.0 mem = 309.4M
Iteration 14: Total net bbox = 6.453e+05 (2.97e+05 3.48e+05)
              Est.  stn bbox = 7.511e+05 (3.43e+05 4.08e+05)
              cpu = 0:00:01.8 real = 0:00:02.0 mem = 311.0M
Iteration 15: Total net bbox = 6.470e+05 (2.95e+05 3.52e+05)
              Est.  stn bbox = 7.525e+05 (3.41e+05 4.11e+05)
              cpu = 0:00:03.0 real = 0:00:03.0 mem = 312.6M
Iteration 16: Total net bbox = 6.720e+05 (3.15e+05 3.57e+05)
              Est.  stn bbox = 7.779e+05 (3.62e+05 4.16e+05)
              cpu = 0:00:00.2 real = 0:00:00.0 mem = 312.6M
*** cost = 6.720e+05 (3.15e+05 3.57e+05) (cpu for global=0:00:18.2) real=0:00:18.0***
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:01.7, Real Time = 0:00:02.0
move report: preRPlace moves 7306 insts, mean move: 0.64 um, max move: 3.61 um
	max move on inst (tx_core/tx_crc/crcpkt0/crcin40_d_reg[30]): (91.58, 128.82) --> (92.72, 126.35)
Placement tweakage begins.
wire length = 6.733e+05 = 3.161e+05 H + 3.571e+05 V
wire length = 6.379e+05 = 2.914e+05 H + 3.465e+05 V
Placement tweakage ends.
move report: wireLenOpt moves 19436 insts, mean move: 4.14 um, max move: 77.14 um
	max move on inst (tx_core/tx_crc/crcpkt2/U3054): (389.12, 274.55) --> (416.86, 225.15)
move report: rPlace moves 6139 insts, mean move: 0.46 um, max move: 10.07 um
	max move on inst (tx_core/tx_crc/crcpkt0/U4156): (88.73, 185.63) --> (93.86, 180.69)
move report: overall moves 21937 insts, mean move: 3.78 um, max move: 77.14 um
	max move on inst (tx_core/tx_crc/crcpkt2/U3054): (389.12, 274.55) --> (416.86, 225.15)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =        77.14 um
  inst (tx_core/tx_crc/crcpkt2/U3054) with max move: (389.12, 274.55) -> (416.86, 225.15)
  mean    (X+Y) =         3.78 um
Total instances flipped for legalization: 4958
Total instances moved : 21937
*** cpu=0:00:02.9   mem=322.0M  mem(used)=9.5M***
Total net length = 6.400e+05 (2.923e+05 3.478e+05) (ext = 4.788e+04)
*** End of Placement (cpu=0:00:21.2, real=0:00:22.0, mem=322.0M) ***
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 19.9 % ( 61 / 306 )
Starting IO pin assignment...
Completed IO pin assignment.
<CMD> sroute -noBlockPins -noPadRings
**WARN: (ENCSR-4053):	SRoute option "-noBlockPins" is obsolete and has been replaced by "-connect". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-connect".
**WARN: (ENCSR-4053):	SRoute option "-noPadRings" is obsolete and has been replaced by "-connect". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-connect".
*** Begin SPECIAL ROUTE on Sun Nov 13 17:28:20 2016 ***
Sroute/fcroute version 8.1.46 promoted on 02/17/2009.
SPECIAL ROUTE ran on directory: /home/010123386@SJSUAD.SJSU.EDU/Documents/MS_PROJECT_MEM_SEP/rtl/syn_ibloc/PnR_ethcore
SPECIAL ROUTE ran on machine: coe-ee-cad45.sjsuad.sjsu.edu (Linux 4.8.4-200.fc24.x86_64 x86_64 3.90Ghz)

Begin option processing ...
(from .sroute_24199.conf) srouteConnectPowerBump set to false
(from .sroute_24199.conf) routeSpecial set to true
(from .sroute_24199.conf) srouteConnectBlockPin set to false
(from .sroute_24199.conf) srouteFollowCorePinEnd set to 3
(from .sroute_24199.conf) srouteJogControl set to "preferWithChanges differentLayer"
(from .sroute_24199.conf) sroutePadPinAllPorts set to true
(from .sroute_24199.conf) sroutePreserveExistingRoutes set to true
End option processing: cpu: 0:00:00, real: 0:00:00, peak: 523.00 megs.

Reading DB technology information...
Finished reading DB technology information.
Reading floorplan and netlist information...
Finished reading floorplan and netlist information.
Read in 22 layers, 10 routing layers, 1 overlap layer
Read in 33 macros, 24 used
Read in 31821 components
  31821 core components: 0 unplaced, 31821 placed, 0 fixed
Read in 1215 physical pins
  1215 physical pins: 0 unplaced, 1215 placed, 0 fixed
Read in 49 logical pins
Read in 1192 nets
Read in 2 special nets, 2 routed
Read in 64857 terminals
Begin power routing ...
**WARN: (ENCSR-1256):	Net vdd does not have CORE class pad pins to be routed.
	Please check net list or port class.
Net vdd does not have AREAIO class pad pins to be routed.
	Please check net list or port class.
**WARN: (ENCSR-1256):	Net gnd does not have CORE class pad pins to be routed.
	Please check net list or port class.
Net gnd does not have AREAIO class pad pins to be routed.
	Please check net list or port class.
CPU time for FollowPin 0 seconds
CPU time for FollowPin 0 seconds
  Number of IO ports routed: 0
  Number of Stripe ports routed: 0
  Number of Core ports routed: 340
  Number of Followpin connections: 170
End power routing: cpu: 0:00:00, real: 0:00:00, peak: 539.00 megs.



 Begin updating DB with routing results ...
 Updating DB with 1215 io pins ...
 Updating DB with 20 via definition ...

sroute post-processing starts at Sun Nov 13 17:28:21 2016
The viaGen is rebuilding shadow vias for net gnd.
sroute post-processing ends at Sun Nov 13 17:28:21 2016

sroute post-processing starts at Sun Nov 13 17:28:21 2016
The viaGen is rebuilding shadow vias for net vdd.
sroute post-processing ends at Sun Nov 13 17:28:21 2016
sroute: Total CPU time used = 0:0:0
sroute: Total Real time used = 0:0:1
sroute: Total Memory used = 0.02 megs
sroute: Total Peak Memory used = 322.01 megs
<CMD> trialRoute
*** Starting trialRoute (mem=322.0M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -noPinGuide

routingBox: (0 0) (923950 915140)
coreBox:    (40280 40280) (883950 875140)
Number of multi-gpin terms=1313, multi-gpins=3635, moved blk term=0/0

Phase 1a route (0:00:00.3 334.4M):
Est net length = 7.289e+05um = 3.441e+05H + 3.848e+05V
Usage: (18.2%H 20.6%V) = (3.802e+05um 6.010e+05um) = (394790 244563)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1b route (0:00:00.1 335.7M):
Usage: (18.2%H 20.6%V) = (3.795e+05um 6.010e+05um) = (394077 244562)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1c route (0:00:00.1 335.8M):
Usage: (18.1%H 20.6%V) = (3.788e+05um 6.008e+05um) = (393315 244481)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1d route (0:00:00.1 335.8M):
Usage: (18.1%H 20.6%V) = (3.788e+05um 6.008e+05um) = (393315 244481)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1e route (0:00:00.1 336.5M):
Usage: (18.1%H 20.6%V) = (3.788e+05um 6.008e+05um) = (393315 244481)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Usage: (18.1%H 20.6%V) = (3.788e+05um 6.008e+05um) = (393315 244481)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
--------------------------------------
  1:	0	 0.00%	4	 0.00%
  2:	0	 0.00%	10	 0.01%
  3:	0	 0.00%	249	 0.28%
  4:	0	 0.00%	1274	 1.44%
  5:	0	 0.00%	2057	 2.32%
  6:	0	 0.00%	3706	 4.18%
  7:	1	 0.00%	5895	 6.65%
  8:	7	 0.01%	8245	 9.30%
  9:	16	 0.02%	10788	12.17%
 10:	54	 0.06%	12845	14.49%
 11:	137	 0.15%	12208	13.78%
 12:	2561	 2.89%	12220	13.79%
 13:	2392	 2.70%	8635	 9.74%
 14:	1475	 1.66%	4408	 4.97%
 15:	2335	 2.63%	2772	 3.13%
 16:	3738	 4.22%	1528	 1.72%
 17:	5240	 5.91%	0	 0.00%
 18:	7083	 7.99%	0	 0.00%
 19:	9116	10.29%	0	 0.00%
 20:	54469	61.46%	1780	 2.01%

Global route (cpu=0.6s real=1.0s 335.2M)
Phase 1l route (0:00:00.8 335.2M):


*** After '-updateRemainTrks' operation: 

Usage: (18.5%H 21.3%V) = (3.864e+05um 6.208e+05um) = (401089 252655)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
--------------------------------------
  0:	0	 0.00%	1	 0.00%
  1:	0	 0.00%	10	 0.01%
  2:	0	 0.00%	68	 0.08%
  3:	0	 0.00%	471	 0.53%
  4:	0	 0.00%	1580	 1.78%
  5:	0	 0.00%	2476	 2.79%
  6:	0	 0.00%	3925	 4.43%
  7:	2	 0.00%	5977	 6.74%
  8:	9	 0.01%	8080	 9.12%
  9:	26	 0.03%	10566	11.92%
 10:	70	 0.08%	12559	14.17%
 11:	164	 0.19%	11965	13.50%
 12:	2622	 2.96%	12035	13.58%
 13:	2456	 2.77%	8489	 9.58%
 14:	1612	 1.82%	4379	 4.94%
 15:	2431	 2.74%	2754	 3.11%
 16:	3911	 4.41%	1509	 1.70%
 17:	5430	 6.13%	0	 0.00%
 18:	7233	 8.16%	0	 0.00%
 19:	9141	10.31%	0	 0.00%
 20:	53517	60.39%	1780	 2.01%



*** Completed Phase 1 route (0:00:01.5 334.5M) ***


Total length: 7.602e+05um, number of vias: 207719
M1(H) length: 6.125e+03um, number of vias: 97998
M2(V) length: 2.424e+05um, number of vias: 91914
M3(H) length: 3.189e+05um, number of vias: 14200
M4(V) length: 1.331e+05um, number of vias: 1918
M5(H) length: 2.387e+04um, number of vias: 1430
M6(V) length: 3.560e+04um, number of vias: 115
M7(H) length: 4.124e+01um, number of vias: 77
M8(V) length: 1.286e+02um, number of vias: 43
M9(H) length: 1.788e+01um, number of vias: 24
M10(V) length: 2.172e+01um
*** Completed Phase 2 route (0:00:01.1 346.3M) ***

*** Finished all Phases (cpu=0:00:02.7 mem=346.3M) ***
Peak Memory Usage was 341.5M 
*** Finished trialRoute (cpu=0:00:02.9 mem=346.3M) ***

<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.1.placed
Extraction called for design 'eth_core' of instances=31821 and nets=33237 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:00.0  MEM: 346.258M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 361.8M, InitMEM = 361.8M)
Number of Loop : 0
Start delay calculation (mem=361.789M)...
**WARN: (ENCEXT-2882):	Unable to find resistance for via 'M10_M9_via' in capacitance table or LEF files. Check the capacitance table and LEF files. Assigning default value of 4.0 ohms.
**WARN: (ENCEXT-2882):	Unable to find resistance for via 'M9_M8_via' in capacitance table or LEF files. Check the capacitance table and LEF files. Assigning default value of 4.0 ohms.
**WARN: (ENCEXT-2882):	Unable to find resistance for via 'M8_M7_via' in capacitance table or LEF files. Check the capacitance table and LEF files. Assigning default value of 4.0 ohms.
**WARN: (ENCEXT-2882):	Unable to find resistance for via 'M7_M6_via' in capacitance table or LEF files. Check the capacitance table and LEF files. Assigning default value of 4.0 ohms.
**WARN: (ENCEXT-2882):	Unable to find resistance for via 'M6_M5_via' in capacitance table or LEF files. Check the capacitance table and LEF files. Assigning default value of 4.0 ohms.
**WARN: (ENCEXT-2882):	Unable to find resistance for via 'M5_M4_via' in capacitance table or LEF files. Check the capacitance table and LEF files. Assigning default value of 4.0 ohms.
**WARN: (ENCEXT-2882):	Unable to find resistance for via 'M4_M3_via' in capacitance table or LEF files. Check the capacitance table and LEF files. Assigning default value of 4.0 ohms.
**WARN: (ENCEXT-2882):	Unable to find resistance for via 'M3_M2_via' in capacitance table or LEF files. Check the capacitance table and LEF files. Assigning default value of 4.0 ohms.
**WARN: (ENCEXT-2882):	Unable to find resistance for via 'M2_M1_via' in capacitance table or LEF files. Check the capacitance table and LEF files. Assigning default value of 4.0 ohms.
Delay calculation completed. (cpu=0:00:01.2 real=0:00:02.0 mem=367.914M 0)
*** CDM Built up (cpu=0:00:01.8  real=0:00:02.0  mem= 367.9M) ***
<CMD> setOptMode -mediumEffort -fixDRC -addPortAsNeeded
**WARN: (ENCTCM-70):	Option "-fixDRC" for command setOptMode is obsolete and has been replaced by "-fixDrc true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-fixDrc true".
**WARN: (ENCTCM-70):	Option "-addPortAsNeeded" for command setOptMode is obsolete and has been replaced by "-addPortAsNeeded true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-addPortAsNeeded true".
<CMD> optDesign -preCTS -drv
*info: Enabling Trial Route flow for DRV Fixing.
**optDesign ... cpu = 0:00:00, real = 0:00:00, mem = 369.4M **
*** Change effort level medium to high ***
Added -handlePreroute to trialRouteMode
*** optDesign -preCTS ***
DRC Margin: user margin 0.0; extra margin 0.2
Setup Target Slack: user slack 0.0; extra slack 0.1
Hold Target Slack: user slack 0.0
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath false -clockPropagation forcedIdeal
*info: Setting setup target slack to 0.100
*info: Hold target slack is 0.000
*** CTE mode ***
*** Starting trialRoute (mem=359.1M) ***

There are 0 pin guide points passed to trialRoute.
Start to check current routing status for nets...
All nets are already routed correctly.
*** Finishing trialRoute (mem=359.1M) ***


------------------------------------------------------------
             Initial Summary                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -3.021  |
|           TNS (ns):| -2385.3 |
|    Violating Paths:|  2730   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7886 (7886)    |   -0.082   |   7886 (7886)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.005%
------------------------------------------------------------
**optDesign ... cpu = 0:00:03, real = 0:00:03, mem = 368.9M **
*** Starting optimizing excluded clock nets MEM= 368.9M) ***
*info: No excluded clock nets to be optimized.
*** Completed optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 368.9M) ***
*info: Start fixing DRV (Mem = 368.90M) ...
*info: Options = -maxCap -maxTran -noMaxFanout -noSensitivity -backward -reduceBuffer -maxIter 2
*info: Start fixing DRV iteration 1 ...
*** Starting dpFixDRCViolation (369.0M)
*info: 1 clock net excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=369.0M) ***
*info: There are 2 candidate Buffer cells
*info: There are 4 candidate Inverter cells
Initializing placement sections/sites ...
Density before buffering = 0.600048
Start fixing design rules ... (0:00:00.3 372.7M)
Phase 1 (2) Starts......
Phase 2 Starts......
Done fixing design rule (0:00:02.9 377.7M)

Summary:
95 buffers added on 37 nets (with 42 drivers resized)

Density after buffering = 0.600957
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 19.9 % ( 61 / 306 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:01.2, Real Time = 0:00:02.0
move report: preRPlace moves 225 insts, mean move: 0.57 um, max move: 3.23 um
	max move on inst (FE_OFC38_clks_rst): (441.18, 244.91) --> (440.42, 242.44)
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 225 insts, mean move: 0.57 um, max move: 3.23 um
	max move on inst (FE_OFC38_clks_rst): (441.18, 244.91) --> (440.42, 242.44)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         3.23 um
  inst (FE_OFC38_clks_rst) with max move: (441.18, 244.91) -> (440.42, 242.44)
  mean    (X+Y) =         0.57 um
Total instances moved : 225
*** cpu=0:00:01.3   mem=377.8M  mem(used)=0.1M***
*** Completed dpFixDRCViolation (0:00:04.7 377.8M)

*** Starting trialRoute (mem=377.8M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 0
routingBox: (0 0) (923950 915140)
coreBox:    (40280 40280) (883950 875140)
Number of multi-gpin terms=1314, multi-gpins=3638, moved blk term=0/0

Phase 1a route (0:00:00.3 380.1M):
Est net length = 7.338e+05um = 3.463e+05H + 3.875e+05V
Usage: (18.3%H 20.7%V) = (3.824e+05um 6.042e+05um) = (397191 245849)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1b route (0:00:00.1 380.1M):
Usage: (18.3%H 20.7%V) = (3.818e+05um 6.042e+05um) = (396478 245848)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1c route (0:00:00.1 380.1M):
Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395893 245777)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1d route (0:00:00.1 380.1M):
Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395893 245777)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1e route (0:00:00.1 380.1M):
Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395893 245777)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395893 245777)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
--------------------------------------
  1:	0	 0.00%	5	 0.01%
  2:	0	 0.00%	11	 0.01%
  3:	0	 0.00%	251	 0.28%
  4:	0	 0.00%	1298	 1.46%
  5:	0	 0.00%	2051	 2.31%
  6:	0	 0.00%	3748	 4.23%
  7:	0	 0.00%	5904	 6.66%
  8:	8	 0.01%	8315	 9.38%
  9:	11	 0.01%	10907	12.31%
 10:	57	 0.06%	12769	14.41%
 11:	144	 0.16%	12224	13.79%
 12:	2577	 2.91%	12190	13.75%
 13:	2382	 2.69%	8557	 9.66%
 14:	1502	 1.69%	4356	 4.92%
 15:	2367	 2.67%	2731	 3.08%
 16:	3765	 4.25%	1527	 1.72%
 17:	5263	 5.94%	0	 0.00%
 18:	7245	 8.17%	0	 0.00%
 19:	9224	10.41%	0	 0.00%
 20:	54079	61.02%	1780	 2.01%

Global route (cpu=0.8s real=1.0s 380.1M)
Phase 1l route (0:00:01.1 377.8M):


*** After '-updateRemainTrks' operation: 

Usage: (18.6%H 21.4%V) = (3.890e+05um 6.243e+05um) = (403802 254092)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
--------------------------------------
  0:	0	 0.00%	2	 0.00%
  1:	0	 0.00%	16	 0.02%
  2:	0	 0.00%	75	 0.08%
  3:	0	 0.00%	488	 0.55%
  4:	0	 0.00%	1577	 1.78%
  5:	0	 0.00%	2475	 2.79%
  6:	0	 0.00%	3981	 4.49%
  7:	1	 0.00%	6013	 6.78%
  8:	10	 0.01%	8122	 9.16%
  9:	21	 0.02%	10667	12.04%
 10:	77	 0.09%	12449	14.05%
 11:	173	 0.20%	12042	13.59%
 12:	2625	 2.96%	11983	13.52%
 13:	2458	 2.77%	8410	 9.49%
 14:	1627	 1.84%	4326	 4.88%
 15:	2490	 2.81%	2711	 3.06%
 16:	3930	 4.43%	1507	 1.70%
 17:	5445	 6.14%	0	 0.00%
 18:	7437	 8.39%	0	 0.00%
 19:	9230	10.41%	0	 0.00%
 20:	53100	59.92%	1780	 2.01%



*** Completed Phase 1 route (0:00:02.1 377.8M) ***


Total length: 7.653e+05um, number of vias: 208444
M1(H) length: 6.137e+03um, number of vias: 98188
M2(V) length: 2.429e+05um, number of vias: 92113
M3(H) length: 3.220e+05um, number of vias: 14487
M4(V) length: 1.354e+05um, number of vias: 1931
M5(H) length: 2.274e+04um, number of vias: 1450
M6(V) length: 3.547e+04um, number of vias: 121
M7(H) length: 3.506e+02um, number of vias: 83
M8(V) length: 1.024e+02um, number of vias: 45
M9(H) length: 1.788e+01um, number of vias: 26
M10(V) length: 4.566e+01um
*** Completed Phase 2 route (0:00:01.3 377.8M) ***

*** Finished all Phases (cpu=0:00:03.5 mem=377.8M) ***
Peak Memory Usage was 384.1M 
*** Finished trialRoute (cpu=0:00:03.7 mem=377.8M) ***

Extraction called for design 'eth_core' of instances=31916 and nets=33332 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:00.0  MEM: 377.773M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.0, MEM = 372.9M, InitMEM = 372.9M)
Number of Loop : 0
Start delay calculation (mem=372.949M)...
Delay calculation completed. (cpu=0:00:01.2 real=0:00:02.0 mem=372.949M 0)
*** CDM Built up (cpu=0:00:01.7  real=0:00:02.0  mem= 372.9M) ***
*info: DRV Fixing Iteration 1.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7886
*info:   Prev Max tran violations:   0
*info: Start fixing DRV iteration 2 ...
*** Starting dpFixDRCViolation (372.9M)
*info: 1 clock net excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=372.9M) ***
Start fixing design rules ... (0:00:00.3 372.9M)
Done fixing design rule (0:00:00.4 372.9M)

Summary:
1 buffer added on 1 net (with 0 driver resized)

Density after buffering = 0.600968
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 19.9 % ( 61 / 306 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:01.3, Real Time = 0:00:01.0
move report: preRPlace moves 2 insts, mean move: 0.38 um, max move: 0.38 um
	max move on inst (tx_core/tx_crc/crcpkt1/FE_OFC95_n4431): (209.38, 430.16) --> (209.76, 430.16)
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 2 insts, mean move: 0.38 um, max move: 0.38 um
	max move on inst (tx_core/tx_crc/crcpkt1/FE_OFC95_n4431): (209.38, 430.16) --> (209.76, 430.16)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.38 um
  inst (tx_core/tx_crc/crcpkt1/FE_OFC95_n4431) with max move: (209.38, 430.16) -> (209.76, 430.16)
  mean    (X+Y) =         0.38 um
Total instances moved : 2
*** cpu=0:00:01.3   mem=372.9M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:02.2 372.9M)

*** Starting trialRoute (mem=372.9M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 0
routingBox: (0 0) (923950 915140)
coreBox:    (40280 40280) (883950 875140)
Number of multi-gpin terms=1314, multi-gpins=3638, moved blk term=0/0

Phase 1a route (0:00:00.3 377.0M):
Est net length = 7.338e+05um = 3.463e+05H + 3.875e+05V
Usage: (18.3%H 20.7%V) = (3.824e+05um 6.042e+05um) = (397195 245851)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1b route (0:00:00.1 377.0M):
Usage: (18.3%H 20.7%V) = (3.818e+05um 6.042e+05um) = (396482 245850)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1c route (0:00:00.1 377.0M):
Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395897 245779)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1d route (0:00:00.1 377.0M):
Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395897 245779)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1e route (0:00:00.1 377.5M):
Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395897 245779)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395897 245779)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
--------------------------------------
  1:	0	 0.00%	5	 0.01%
  2:	0	 0.00%	11	 0.01%
  3:	0	 0.00%	251	 0.28%
  4:	0	 0.00%	1298	 1.46%
  5:	0	 0.00%	2051	 2.31%
  6:	0	 0.00%	3748	 4.23%
  7:	0	 0.00%	5904	 6.66%
  8:	8	 0.01%	8316	 9.38%
  9:	11	 0.01%	10906	12.31%
 10:	57	 0.06%	12770	14.41%
 11:	144	 0.16%	12224	13.79%
 12:	2577	 2.91%	12188	13.75%
 13:	2382	 2.69%	8558	 9.66%
 14:	1502	 1.69%	4356	 4.92%
 15:	2367	 2.67%	2731	 3.08%
 16:	3765	 4.25%	1527	 1.72%
 17:	5263	 5.94%	0	 0.00%
 18:	7245	 8.17%	0	 0.00%
 19:	9224	10.41%	0	 0.00%
 20:	54079	61.02%	1780	 2.01%

Global route (cpu=0.8s real=1.0s 377.5M)
Phase 1l route (0:00:01.2 375.1M):


*** After '-updateRemainTrks' operation: 

Usage: (18.6%H 21.4%V) = (3.890e+05um 6.243e+05um) = (403806 254094)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
--------------------------------------
  0:	0	 0.00%	2	 0.00%
  1:	0	 0.00%	16	 0.02%
  2:	0	 0.00%	75	 0.08%
  3:	0	 0.00%	488	 0.55%
  4:	0	 0.00%	1577	 1.78%
  5:	0	 0.00%	2474	 2.79%
  6:	0	 0.00%	3984	 4.50%
  7:	1	 0.00%	6010	 6.78%
  8:	10	 0.01%	8122	 9.16%
  9:	21	 0.02%	10669	12.04%
 10:	77	 0.09%	12449	14.05%
 11:	173	 0.20%	12042	13.59%
 12:	2625	 2.96%	11982	13.52%
 13:	2458	 2.77%	8410	 9.49%
 14:	1627	 1.84%	4326	 4.88%
 15:	2490	 2.81%	2711	 3.06%
 16:	3930	 4.43%	1507	 1.70%
 17:	5444	 6.14%	0	 0.00%
 18:	7439	 8.39%	0	 0.00%
 19:	9229	10.41%	0	 0.00%
 20:	53100	59.92%	1780	 2.01%



*** Completed Phase 1 route (0:00:02.3 374.6M) ***


Total length: 7.653e+05um, number of vias: 208448
M1(H) length: 6.137e+03um, number of vias: 98190
M2(V) length: 2.429e+05um, number of vias: 92115
M3(H) length: 3.220e+05um, number of vias: 14487
M4(V) length: 1.354e+05um, number of vias: 1931
M5(H) length: 2.274e+04um, number of vias: 1450
M6(V) length: 3.553e+04um, number of vias: 121
M7(H) length: 3.506e+02um, number of vias: 83
M8(V) length: 1.024e+02um, number of vias: 45
M9(H) length: 1.788e+01um, number of vias: 26
M10(V) length: 4.566e+01um
*** Completed Phase 2 route (0:00:01.3 372.9M) ***

*** Finished all Phases (cpu=0:00:03.8 mem=372.9M) ***
Peak Memory Usage was 381.5M 
*** Finished trialRoute (cpu=0:00:04.0 mem=372.9M) ***

Extraction called for design 'eth_core' of instances=31917 and nets=33333 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:00.0  MEM: 372.949M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 372.9M, InitMEM = 372.9M)
Number of Loop : 0
Start delay calculation (mem=372.949M)...
Delay calculation completed. (cpu=0:00:01.3 real=0:00:01.0 mem=372.949M 0)
*** CDM Built up (cpu=0:00:01.8  real=0:00:02.0  mem= 372.9M) ***
*info: DRV Fixing Iteration 2.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info: Start fixing DRV while maintaining existing placement ...
*** Starting dpFixDRCViolation (372.9M)
*info: 1 clock net excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=372.9M) ***
Start fixing design rules ... (0:00:00.3 372.9M)
Done fixing design rule (0:00:00.6 373.1M)

Summary:
2 buffers added on 2 nets (with 0 driver resized)

Density after buffering = 0.601000
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 19.9 % ( 61 / 306 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:00.6, Real Time = 0:00:01.0
move report: preRPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 0 insts, mean move: 0.00 um, max move: 0.00 um
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.00 um
  mean    (X+Y) =         0.00 um
Total instances moved : 0
*** cpu=0:00:00.7   mem=373.0M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:01.8 373.0M)

*** Starting trialRoute (mem=373.0M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 0
routingBox: (0 0) (923950 915140)
coreBox:    (40280 40280) (883950 875140)
Number of multi-gpin terms=1314, multi-gpins=3638, moved blk term=0/0

Phase 1a route (0:00:00.3 377.1M):
Est net length = 7.338e+05um = 3.463e+05H + 3.875e+05V
Usage: (18.3%H 20.7%V) = (3.824e+05um 6.042e+05um) = (397197 245855)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1b route (0:00:00.2 377.1M):
Usage: (18.3%H 20.7%V) = (3.818e+05um 6.042e+05um) = (396484 245854)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1c route (0:00:00.1 377.1M):
Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395899 245783)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1d route (0:00:00.1 377.1M):
Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395899 245783)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Phase 1e route (0:00:00.1 377.6M):
Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395899 245783)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Usage: (18.2%H 20.7%V) = (3.812e+05um 6.040e+05um) = (395899 245783)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
--------------------------------------
  1:	0	 0.00%	5	 0.01%
  2:	0	 0.00%	11	 0.01%
  3:	0	 0.00%	251	 0.28%
  4:	0	 0.00%	1304	 1.47%
  5:	0	 0.00%	2050	 2.31%
  6:	0	 0.00%	3757	 4.24%
  7:	0	 0.00%	5896	 6.65%
  8:	8	 0.01%	8320	 9.39%
  9:	11	 0.01%	10902	12.30%
 10:	57	 0.06%	12765	14.40%
 11:	144	 0.16%	12213	13.78%
 12:	2577	 2.91%	12178	13.74%
 13:	2382	 2.69%	8570	 9.67%
 14:	1507	 1.70%	4359	 4.92%
 15:	2366	 2.67%	2735	 3.09%
 16:	3764	 4.25%	1528	 1.72%
 17:	5259	 5.93%	0	 0.00%
 18:	7238	 8.17%	0	 0.00%
 19:	9225	10.41%	0	 0.00%
 20:	54086	61.03%	1780	 2.01%

Global route (cpu=0.8s real=0.0s 377.6M)
Phase 1l route (0:00:01.3 375.2M):


*** After '-updateRemainTrks' operation: 

Usage: (18.6%H 21.4%V) = (3.890e+05um 6.244e+05um) = (403818 254108)
Overflow: 0 = 0 (0.00% H) + 0 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
--------------------------------------
  0:	0	 0.00%	2	 0.00%
  1:	0	 0.00%	16	 0.02%
  2:	0	 0.00%	75	 0.08%
  3:	0	 0.00%	485	 0.55%
  4:	0	 0.00%	1589	 1.79%
  5:	0	 0.00%	2471	 2.79%
  6:	0	 0.00%	3991	 4.50%
  7:	1	 0.00%	6008	 6.78%
  8:	10	 0.01%	8126	 9.17%
  9:	21	 0.02%	10661	12.03%
 10:	77	 0.09%	12442	14.04%
 11:	173	 0.20%	12031	13.58%
 12:	2625	 2.96%	11974	13.51%
 13:	2458	 2.77%	8420	 9.50%
 14:	1630	 1.84%	4331	 4.89%
 15:	2497	 2.82%	2714	 3.06%
 16:	3924	 4.43%	1508	 1.70%
 17:	5434	 6.13%	0	 0.00%
 18:	7442	 8.40%	0	 0.00%
 19:	9229	10.41%	0	 0.00%
 20:	53103	59.92%	1780	 2.01%



*** Completed Phase 1 route (0:00:02.4 374.7M) ***


Total length: 7.653e+05um, number of vias: 208476
M1(H) length: 6.137e+03um, number of vias: 98194
M2(V) length: 2.429e+05um, number of vias: 92116
M3(H) length: 3.221e+05um, number of vias: 14490
M4(V) length: 1.353e+05um, number of vias: 1942
M5(H) length: 2.267e+04um, number of vias: 1459
M6(V) length: 3.572e+04um, number of vias: 121
M7(H) length: 3.506e+02um, number of vias: 83
M8(V) length: 1.024e+02um, number of vias: 45
M9(H) length: 1.788e+01um, number of vias: 26
M10(V) length: 4.566e+01um
*** Completed Phase 2 route (0:00:01.4 373.0M) ***

*** Finished all Phases (cpu=0:00:04.0 mem=373.0M) ***
Peak Memory Usage was 381.6M 
*** Finished trialRoute (cpu=0:00:04.2 mem=373.0M) ***

Extraction called for design 'eth_core' of instances=31919 and nets=33335 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:00.0  MEM: 373.023M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.0, MEM = 373.0M, InitMEM = 373.0M)
Number of Loop : 0
Start delay calculation (mem=373.000M)...
Delay calculation completed. (cpu=0:00:01.2 real=0:00:01.0 mem=373.000M 0)
*** CDM Built up (cpu=0:00:01.7  real=0:00:02.0  mem= 373.0M) ***
*info: DRV Fixing Iteration 3.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info:
*info: Completed fixing DRV (CPU Time = 0:00:28, Mem = 373.00M).

------------------------------------------------------------
     Summary (cpu=0.46min real=0.47min mem=373.0M)                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -3.039  |
|           TNS (ns):| -2703.5 |
|    Violating Paths:|  3641   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.029   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.100%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:31, real = 0:00:32, mem = 373.0M **
Reported timing to dir ./timingReports
**optDesign ... cpu = 0:00:31, real = 0:00:32, mem = 373.9M **

------------------------------------------------------------
     optDesign Final Summary                             
------------------------------------------------------------

+--------------------+---------+---------+---------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | in2reg  | reg2out | in2out  | clkgate |
+--------------------+---------+---------+---------+---------+---------+---------+
|           WNS (ns):| -3.039  | -2.500  | -3.039  |  0.200  | -0.340  |   N/A   |
|           TNS (ns):| -2703.5 | -1034.0 | -2702.4 |  0.000  | -1.115  |   N/A   |
|    Violating Paths:|  3641   |  2192   |  3631   |    0    |   10    |   N/A   |
|          All Paths:|  7370   |  3566   |  6377   |   522   |   341   |   N/A   |
+--------------------+---------+---------+---------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.029   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.100%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:33, real = 0:00:36, mem = 377.4M **
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath false -clockPropagation forcedIdeal
*** Finished optDesign ***
<CMD_INTERNAL> initECO ./ipo1.txt
**ERROR: (ENCOPT-513):	'fixSetupViolation' is obsolete. Use the 'optDesign' command instead
<CMD_INTERNAL> endECO
<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.2.ipo1
<CMD> createClockTreeSpec -output encounter.cts -bufFootprint buf -invFootprint inv
Checking spec file integrity...

******* createClockTreeSpec begin *******
Options:  -output encounter.cts -bufFootprint buf -invFootprint inv 
**WARN: (ENCCK-7001):	Option '-bufFootprint' for command 'createClockTreeSpec' is obsolete. Use '-bufferList' option as an alternative. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future release, update your script to use '-bufferList'.
**WARN: (ENCCK-412):	-bufFootprint is ignored in createClockTreeSpec since in this release the buffer footprint name is automatically generated and provided to this command. If you want to specify a specific list of cells to be used by CTS, please use -bufferList option.
**WARN: (ENCCK-7001):	Option '-invFootprint' for command 'createClockTreeSpec' is obsolete. Use '-bufferList' option as an alternative. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future release, update your script to use '-bufferList'.
**WARN: (ENCCK-415):	-invFootprint is ignored in createClockTreeSpec while dbgGPSAutoCellFunction is set.
CTE Mode
New Clock Spec Generation is ON.
New CTE tracing is ON.
Handle Multi Mode on mixed active views: default_view_hold default_view_setup.
Total 1 clock roots are extracted.
createClockTreeSpec invoking cleanupSpecifyClockTree
Checking spec file integrity...

Reading clock tree spec file 'encounter.cts' ...

RouteType               : FE_CTS_DEFAULT
PreferredExtraSpace     : 1
Shield                  : NONE
PreferLayer             : M3 M4 
Est. Cap                : 0.208861(V=0.194667 H=0.223055) (ff/um) [0.00010443]
Est. Res                : 2.67857(V=1.78571 H=3.57143)(ohm/um) [0.00133929]
Est. Via Res            : 4(ohm) [8]
Est. Via Cap            : 0.0684459(ff)
M1(H) w=0.065(um) s=0.065(um) p=0.19(um) es=0.315(um) cap=0.219(ff/um) res=5.85(ohm/um) viaRes=0(ohm) viaCap=0(ff)
M2(V) w=0.07(um) s=0.075(um) p=0.19(um) es=0.31(um) cap=0.222(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0790658(ff)
M3(H) w=0.07(um) s=0.07(um) p=0.19(um) es=0.31(um) cap=0.223(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0797668(ff)
M4(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0684459(ff)
M5(H) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M6(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M7(H) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.0921863(ff)
M8(V) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.129341(ff)
M9(H) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.181(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.210491(ff)
M10(V) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.151(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.268112(ff)

RouteType               : FE_CTS_DEFAULT_LEAF
PreferredExtraSpace     : 1
Shield                  : NONE
PreferLayer             : M3 M4 
Est. Cap                : 0.208861(V=0.194667 H=0.223055) (ff/um) [0.00010443]
Est. Res                : 2.67857(V=1.78571 H=3.57143)(ohm/um) [0.00133929]
Est. Via Res            : 4(ohm) [8]
Est. Via Cap            : 0.0684459(ff)
M1(H) w=0.065(um) s=0.065(um) p=0.19(um) es=0.315(um) cap=0.219(ff/um) res=5.85(ohm/um) viaRes=0(ohm) viaCap=0(ff)
M2(V) w=0.07(um) s=0.075(um) p=0.19(um) es=0.31(um) cap=0.222(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0790658(ff)
M3(H) w=0.07(um) s=0.07(um) p=0.19(um) es=0.31(um) cap=0.223(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0797668(ff)
M4(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0684459(ff)
M5(H) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M6(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M7(H) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.0921863(ff)
M8(V) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.129341(ff)
M9(H) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.181(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.210491(ff)
M10(V) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.151(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.268112(ff)


****** AutoClockRootPin ******
AutoClockRootPin 1: clks.clk
# NoGating         NO
# SetDPinAsSync    NO
# SetIoPinAsSync   NO
# SetAsyncSRPinAsSync   NO
# SetTriStEnPinAsSync   NO
# SetBBoxPinAsSync   NO
# RouteClkNet      YES
# PostOpt          YES
# RouteType        FE_CTS_DEFAULT
# LeafRouteType    FE_CTS_DEFAULT_LEAF

***** !! NOTE !! *****

CTS treats D-pins and I/O pins as non-synchronous pins by default.
If you want to change the behavior, you need to use the SetDPinAsSync
or SetIoPinAsSync statement in the clock tree specification file,
or use the setCTSMode -traceDPinAsLeaf {true|false} command,
or use the setCTSMode -traceIoPinAsLeaf {true|false} command
before specifyClockTree command.

*** End specifyClockTree (cpu=0:00:00.0, real=0:00:00.0, mem=382.8M) ***
*** End createClockTreeSpec (cpu=0:00:00.1, real=0:00:00.0, mem=382.8M) ***
<CMD> specifyClockTree -clkfile encounter.cts
Redoing specifyClockTree ...
Checking spec file integrity...
**WARN: (ENCCK-3217):	'specifyClockTree -clkfile' is obsolete. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use 'specifyClockTree -file'.

Reading clock tree spec file 'encounter.cts' ...

**WARN: (ENCCK-661):	Clock clks.clk has multiple definitions in the clock tree specification file.

****** AutoClockRootPin ******
AutoClockRootPin 1: clks.clk
# NoGating         NO
# SetDPinAsSync    NO
# SetIoPinAsSync   NO
# SetAsyncSRPinAsSync   NO
# SetTriStEnPinAsSync   NO
# SetBBoxPinAsSync   NO
# RouteClkNet      YES
# PostOpt          YES
# RouteType        FE_CTS_DEFAULT
# LeafRouteType    FE_CTS_DEFAULT_LEAF

***** !! NOTE !! *****

CTS treats D-pins and I/O pins as non-synchronous pins by default.
If you want to change the behavior, you need to use the SetDPinAsSync
or SetIoPinAsSync statement in the clock tree specification file,
or use the setCTSMode -traceDPinAsLeaf {true|false} command,
or use the setCTSMode -traceIoPinAsLeaf {true|false} command
before specifyClockTree command.

*** End specifyClockTree (cpu=0:00:00.0, real=0:00:01.0, mem=382.9M) ***
<CMD> ckSynthesis -rguide cts.rguide -report report.ctsrpt -macromodel report.ctsmdl -fix_added_buffers
Redoing specifyClockTree ...
Checking spec file integrity...


ckSynthesis Option :  -rguide cts.rguide -report report.ctsrpt -macromodel report.ctsmdl -fix_added_buffers 
***** Allocate Placement Memory Finished (MEM: 383.527M)

Start to trace clock trees ...
*** Begin Tracer (mem=383.5M) ***
Tracing Clock clks.clk ...
*** End Tracer (mem=383.5M) ***
***** Allocate Obstruction Memory  Finished (MEM: 383.527M)

#############################################################################
#
# Pre-Synthesis Checks and Parameters
#
#############################################################################


Types of Check                                    :          Enabled|Disabled
----------------------------------------------------------------------------

Check cell drive strength                         :          disabled
Check root input transition                       :          disabled
Check pin capacitance                             :          disabled
Check multiple path through MUX                   :          disabled
Check gating depth                                :          disabled
Check placement near clock pins                   :          disabled
Check route blockages over clock pins             :          disabled
Report FIXED, DontUse and DontTouch               :          disabled
clock gating checks                               :          disabled
MacroModel checks                                 :          disabled

Parameters of checking :
CTS uses following values to determine if diagnostic checks are successful.
Use setCTSMode to change default values.
----------------------------------------------------------------------------

1) Pin capacitance check
   Threshold for MaxCap check                     :          90% of constraint (default)
2) Gating depth check
   Maximum gating depth                           :          10 levels (default)
3) Clock gating location check
   Allowed clock gate detour                      :          275.5(um) (default)
   Allowed clock gate sinks' BBOx overlap ratio   :          0.5 (default)
4) Macromodel check
   MacroModel max delay threshold                 :          0.9 (default)
   MacroModel max skew threshold                  :          0.9 (default)
   MacroModel variance step size                  :          100ps  (default)


****** Clock (clks.clk) Diagnostic check Parameters
Assumed driver input transition                   :          26.1(ps) (derived from INVX8)
Threshold for MaxBufTran check                    :          180(ps) derived from 90% (default) MaxBufTran constraint
Threshold for MaxSinkTran check                   :          180(ps) derived from 90% (default) MaxSinkTran constraint
Root Input Transition                             :          [120(ps) 120(ps)]



#############################################################################
#
# Summary of Pre-Synthesis Checks
#
#############################################################################


Types of Check                                    :          Number of warnings
----------------------------------------------------------------------------

Check cell drive strength                         :          0(disabled)
Check root input transition                       :          0(disabled)
Check pin capacitance                             :          0(disabled)
Check multiple path through MUX                   :          0(disabled)
Check gating depth                                :          0(disabled)
Check placement near clock pins                   :          0(disabled)
Check route blockages over clock pins             :          0(disabled)
Report FIXED, DontUse and DontTouch               :          0(disabled)
clock gating checks                               :          0(disabled)
MacroModel checks                                 :          0(disabled)


#############################################################################
#
# During-Synthesis Checks and Parameters
#
#############################################################################


Types of Check                                    :          Enabled|Disabled
----------------------------------------------------------------------------

Check RefinePlacement move distance               :          disabled
Check route layer follows preference              :          disabled
Check route follows guide                         :          disabled
clock gating checks                               :          disabled

Parameters of checking :
CTS uses following values to determine if diagnostic checks are successful.
Use setCTSMode to change default values.
----------------------------------------------------------------------------

1) Route layer follows preference check
   Minimum preferred layer utilization            :          80% (default)
   Minimum length to check threshold              :          11.4(um) (default)
2) Route follows guide check
   Deviation in length from route guide           :          25% (default)
   Minimum length to check threshold              :          11.4(um) (default)
   Delay threshold                                :          10(ps) (default)
3) Saving intermediate database
   Save long-running subtrees time                :          0(min) (default)
   Maximum number of saved databases              :          1 (default)
4) Clock gating location check
   Allowed clock gate detour                      :          275.5(um) (default)


****** Clock (clks.clk) Diagnostic check Parameters
Assumed driver input transition                   :          26.1(ps) (derived from INVX8)
Threshold for MaxBufTran check                    :          180(ps) derived from 90% (default) MaxBufTran constraint
Threshold for MaxSinkTran check                   :          180(ps) derived from 90% (default) MaxSinkTran constraint
Movement threshold                                :          11.439250(um) (derived 5% of MaxBuf strength)
Root Input Transition                             :          [120(ps) 120(ps)]



****** Clock Tree (clks.clk) Structure
Max. Skew           : 108(ps)
Max. Sink Transition: 200(ps)
Max. Buf Transition : 200(ps)
Max. Delay          : 10(ps)
Min. Delay          : 0(ps)
Buffer              : (INVX4) (INVX8) 
Nr. Subtrees                    : 1
Nr. Sinks                       : 3566
Nr.          Rising  Sync Pins  : 3566
Nr. Inverter Rising  Sync Pins  : 0
Nr.          Falling Sync Pins  : 0
Nr. Inverter Falling Sync Pins  : 0
***********************************************************
SubTree No: 0

Input_Pin:  (NULL)
Output_Pin: (clks.clk)
Output_Net: (clks.clk)   
**** CK_START: TopDown Tree Construction for clks.clk (3566-leaf) (mem=383.5M)

Find 0 route_obs, 0 place_obs, 0 cut_obs  1 fence channel(s), 
 1 channel(s).
Phase 1 (2) Starts......
Phase 2 Starts......
Total 4 topdown clustering. 
Trig. Edge Skew=64[309,374*] N3566 B84 G1 A147(147.0) L[5,5] C1/2 score=55056 cpu=0:00:31.0 mem=384M 

**** CK_END: TopDown Tree Construction for clks.clk (cpu=0:00:31.3, real=0:00:31.0, mem=383.5M)



**** CK_START: Update Database (mem=383.5M)
84 Clock Buffers/Inverters inserted.
**** CK_END: Update Database (cpu=0:00:00.0, real=0:00:00.0, mem=383.5M)
***** Start Refine Placement.....
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:01.2, Real Time = 0:00:02.0
move report: preRPlace moves 322 insts, mean move: 0.60 um, max move: 2.85 um
	max move on inst (FECTS_clks_clk___L4_I43): (207.10, 410.40) --> (207.48, 407.93)
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 322 insts, mean move: 0.60 um, max move: 2.85 um
	max move on inst (FECTS_clks_clk___L4_I43): (207.10, 410.40) --> (207.48, 407.93)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         2.85 um
  inst (FECTS_clks_clk___L4_I43) with max move: (207.1, 410.4) -> (207.48, 407.93)
  mean    (X+Y) =         0.60 um
Total instances moved : 322
*** cpu=0:00:01.3   mem=379.8M  mem(used)=0.0M***
***** Refine Placement Finished (CPU Time: 0:00:01.3  MEM: 379.770M)

#
# Mode                : Setup
# Library Name        : gscl45nm
# Operating Condition : typical
# Process             : 1
# Voltage             : 1.1
# Temperature         : 27
#
********** Clock clks.clk Pre-Route Timing Analysis **********
Nr. of Subtrees                : 1
Nr. of Sinks                   : 3566
Nr. of Buffer                  : 84
Nr. of Level (including gates) : 4
Root Rise Input Tran           : 120(ps)
Root Fall Input Tran           : 120(ps)
Max trig. edge delay at sink(R): tx_core/tx_crc/crcpkt1/data48_d_reg[42]/CLK 375.2(ps)
Min trig. edge delay at sink(R): tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][5]/CLK 310.5(ps)


                                 (Actual)               (Required)          
Rise Phase Delay               : 310.5~375.2(ps)        0~10(ps)            
Fall Phase Delay               : 321.5~391.6(ps)        0~10(ps)            
Trig. Edge Skew                : 64.7(ps)               108(ps)             
Rise Skew                      : 64.7(ps)               
Fall Skew                      : 70.1(ps)               
Max. Rise Buffer Tran.         : 129.2(ps)              200(ps)             
Max. Fall Buffer Tran.         : 88(ps)                 200(ps)             
Max. Rise Sink Tran.           : 137.4(ps)              200(ps)             
Max. Fall Sink Tran.           : 103(ps)                200(ps)             
Min. Rise Buffer Tran.         : 48.8(ps)               0(ps)               
Min. Fall Buffer Tran.         : 48.3(ps)               0(ps)               
Min. Rise Sink Tran.           : 101.4(ps)              0(ps)               
Min. Fall Sink Tran.           : 77.3(ps)               0(ps)               


Clock Analysis (CPU Time 0:00:00.1)



globalDetailRoute

#Start globalDetailRoute on Sun Nov 13 17:29:36 2016
#
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 379.00 (Mb)
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARID[3] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARID[2] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARLEN[3] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARLEN[2] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARLEN[1] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARLEN[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARSIZE[2] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARSIZE[1] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARSIZE[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARBURST[1] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARLOCK[1] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARLOCK[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARPROT[2] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARPROT[1] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARPROT[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo0.f0_wdata[7] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo0.f0_wdata[6] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo0.f0_wdata[5] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo0.f0_wdata[4] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39 Repeated 20 times. Will be suppressed.)  NanoRoute cannot route to pin memif_pcfifo0.f0_wdata[3] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (EMS-27) Message (NRIG-39) has exceeded the current message display limit of 20.
#To increase the message display limit, refer to the product command reference manual.
#WARNING (NRDB-976) The step 0.280000 for preferred direction tracks is smaller than the pitch 0.285000 for LAYER metal4. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 0.280000 for preferred direction tracks is smaller than the pitch 0.285000 for LAYER metal6. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 0.840000 for preferred direction tracks is smaller than the pitch 0.855000 for LAYER metal8. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 1.680000 for preferred direction tracks is smaller than the pitch 1.710000 for LAYER metal10. This will cause routability problems for NanoRoute.
#NanoRoute Version v09.14-s029 NR110207-1105/USR65-UB
#WARNING (NREX-28) The height of the first routing layer metal1 is 0.000000. It should be larger than 0.000000
#WARNING (NREX-29) The metal thickness of routing layer metal1 is 0.000000. It should be larger than 0.0. Add this to the technology information for better accuracy.
#WARNING (NREX-30) Please also check the height and metal thickness values for the routing layers heigher than routing layer metal1
#WARNING (NREX-4) No Extended Cap Table was imported. Not enough process information was provided either and default Extended Cap Table database will be used.
#Merging special wires...
#reading routing guides ......
#Number of eco nets is 0
#
#Start data preparation...
#Auto generating G-grids with size=15 tracks, using layer metal2's pitch = 0.145.
#Using automatically generated G-grids.
#
#Data preparation is done on Sun Nov 13 17:29:37 2016
#
#Analyzing routing resource...
#Routing resource analysis is done on Sun Nov 13 17:29:37 2016
#
#  Resource Analysis:
#
#               Routing  #Total     %Gcell
#  Layer      Direction   Gcell     Blocked
#  ------------------------------------------
#  Metal 1        H       44520      71.15%
#  Metal 2        V       44520       1.21%
#  Metal 3        H       44520       0.00%
#  Metal 4        V       44520       1.21%
#  Metal 5        H       44520       3.26%
#  Metal 6        V       44520       2.76%
#  Metal 7        H       44520       0.00%
#  Metal 8        V       44520       0.00%
#  Metal 9        H       44520       0.02%
#  Metal 10       V       44520       0.05%
#  ------------------------------------------
#  Total                 445200       7.96%
#
#  85 nets (0.25%) with 1 preferred extra spacing.
#
#
#Routing guide is on.
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 384.00 (Mb)
#
#start global routing iteration 1...
#cpu time = 00:00:00, elapsed time = 00:00:01, memory = 386.00 (Mb)
#
#start global routing iteration 2...
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 386.00 (Mb)
#
#start global routing iteration 3...
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 386.00 (Mb)
#
#
#  Congestion Analysis: (blocked Gcells are excluded)
#
#                 OverCon          
#                  #Gcell    %Gcell
#     Layer           (1)   OverCon
#  --------------------------------
#   Metal 1      0(0.00%)   (0.00%)
#   Metal 2      0(0.00%)   (0.00%)
#   Metal 3      0(0.00%)   (0.00%)
#   Metal 4      0(0.00%)   (0.00%)
#   Metal 5      0(0.00%)   (0.00%)
#   Metal 6      0(0.00%)   (0.00%)
#   Metal 7      0(0.00%)   (0.00%)
#   Metal 8      0(0.00%)   (0.00%)
#   Metal 9      0(0.00%)   (0.00%)
#  Metal 10      0(0.00%)   (0.00%)
#  --------------------------------
#     Total      0(0.00%)   (0.00%)
#
#  The worst congested Gcell overcon (routing demand over resource in number of tracks) = 1
#
#Complete Global Routing.
#Total number of nets with non-default rule or having extra spacing = 85
#Total wire length = 24119 um.
#Total half perimeter of net bounding box = 10205 um.
#Total wire length on LAYER metal1 = 0 um.
#Total wire length on LAYER metal2 = 48 um.
#Total wire length on LAYER metal3 = 13194 um.
#Total wire length on LAYER metal4 = 10877 um.
#Total wire length on LAYER metal5 = 0 um.
#Total wire length on LAYER metal6 = 0 um.
#Total wire length on LAYER metal7 = 0 um.
#Total wire length on LAYER metal8 = 0 um.
#Total wire length on LAYER metal9 = 0 um.
#Total wire length on LAYER metal10 = 0 um.
#Total number of vias = 10538
#Up-Via Summary (total 10538):
#           
#-----------------------
#  Metal 1         3334
#  Metal 2         3655
#  Metal 3         3549
#-----------------------
#                 10538 
#
#Max overcon = 0 track.
#Total overcon = 0.00%.
#Worst layer Gcell overcon rate = 0.00%.
#Cpu time = 00:00:02
#Elapsed time = 00:00:02
#Increased memory = 4.00 (Mb)
#Total memory = 383.00 (Mb)
#Peak memory = 421.00 (Mb)
#
#Start Detail Routing.
#start initial detail routing ...
# ECO: 0.7% of the total area was rechecked for DRC, and 78.7% required routing.
#    number of violations = 0
#cpu time = 00:00:11, elapsed time = 00:00:11, memory = 388.00 (Mb)
#start 1st optimization iteration ...
#    number of violations = 0
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 388.00 (Mb)
#Complete Detail Routing.
#Total number of nets with non-default rule or having extra spacing = 85
#Total wire length = 24841 um.
#Total half perimeter of net bounding box = 10205 um.
#Total wire length on LAYER metal1 = 0 um.
#Total wire length on LAYER metal2 = 1327 um.
#Total wire length on LAYER metal3 = 12141 um.
#Total wire length on LAYER metal4 = 11373 um.
#Total wire length on LAYER metal5 = 0 um.
#Total wire length on LAYER metal6 = 0 um.
#Total wire length on LAYER metal7 = 0 um.
#Total wire length on LAYER metal8 = 0 um.
#Total wire length on LAYER metal9 = 0 um.
#Total wire length on LAYER metal10 = 0 um.
#Total number of vias = 11582
#Up-Via Summary (total 11582):
#           
#-----------------------
#  Metal 1         3817
#  Metal 2         3707
#  Metal 3         4058
#-----------------------
#                 11582 
#
#Total number of DRC violations = 0
#Total number of violations on LAYER metal1 = 0
#Total number of violations on LAYER metal2 = 0
#Total number of violations on LAYER metal3 = 0
#Total number of violations on LAYER metal4 = 0
#Total number of violations on LAYER metal5 = 0
#Total number of violations on LAYER metal6 = 0
#Total number of violations on LAYER metal7 = 0
#Total number of violations on LAYER metal8 = 0
#Total number of violations on LAYER metal9 = 0
#Total number of violations on LAYER metal10 = 0
#detailRoute Statistics:
#Cpu time = 00:00:11
#Elapsed time = 00:00:11
#Increased memory = 0.00 (Mb)
#Total memory = 383.00 (Mb)
#Peak memory = 421.00 (Mb)
#
#globalDetailRoute statistics:
#Cpu time = 00:00:13
#Elapsed time = 00:00:14
#Increased memory = 4.00 (Mb)
#Total memory = 383.00 (Mb)
#Peak memory = 421.00 (Mb)
#Number of warnings = 29
#Total number of warnings = 29
#Number of fails = 0
#Total number of fails = 0
#Complete globalDetailRoute on Sun Nov 13 17:29:50 2016
#
*** Look For Un-Routed Clock Tree Net ***

#
# Mode                : Setup
# Library Name        : gscl45nm
# Operating Condition : typical
# Process             : 1
# Voltage             : 1.1
# Temperature         : 27
#
********** Clock clks.clk Clk-Route-Only Timing Analysis **********
Nr. of Subtrees                : 1
Nr. of Sinks                   : 3566
Nr. of Buffer                  : 84
Nr. of Level (including gates) : 4
Root Rise Input Tran           : 120(ps)
Root Fall Input Tran           : 120(ps)
Max trig. edge delay at sink(R): tx_core/axi_master/haddr2_d_reg[12]/CLK 386.3(ps)
Min trig. edge delay at sink(R): tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][4]/CLK 319.9(ps)


                                 (Actual)               (Required)          
Rise Phase Delay               : 319.9~386.3(ps)        0~10(ps)            
Fall Phase Delay               : 329.5~401.8(ps)        0~10(ps)            
Trig. Edge Skew                : 66.4(ps)               108(ps)             
Rise Skew                      : 66.4(ps)               
Fall Skew                      : 72.3(ps)               
Max. Rise Buffer Tran.         : 125.3(ps)              200(ps)             
Max. Fall Buffer Tran.         : 88.2(ps)               200(ps)             
Max. Rise Sink Tran.           : 140.2(ps)              200(ps)             
Max. Fall Sink Tran.           : 104.2(ps)              200(ps)             
Min. Rise Buffer Tran.         : 48.9(ps)               0(ps)               
Min. Fall Buffer Tran.         : 47.2(ps)               0(ps)               
Min. Rise Sink Tran.           : 104.2(ps)              0(ps)               
Min. Fall Sink Tran.           : 79.3(ps)               0(ps)               


Clock Analysis (CPU Time 0:00:00.0)


Optimizing clock tree 'clks.clk' ...

Calculating clk-route-only downstream delay for clock tree 'clks.clk' ...
*** Look For Reconvergent Clock Component ***
The clock tree clks.clk has no reconvergent cell.
*** Look For PreservePin And Optimized CrossOver Root Pin ***
resized 0 standard cell(s).
inserted 0 standard cell(s).
*** Non-Gated Clock Tree Optimization (cpu=0:00:00.2 real=0:00:00.0 mem=383.4M) ***
*** Finished Clock Tree Skew Optimization (cpu=0:00:00.2 real=0:00:00.0 mem=383.4M) ***

None of the clock tree buffers/gates are modified by the skew optimization.


*** None of the buffer chains at roots are modified by the fine-tune process.


#
# Mode                : Setup
# Library Name        : gscl45nm
# Operating Condition : typical
# Process             : 1
# Voltage             : 1.1
# Temperature         : 27
#
********** Clock clks.clk Clk-Route-Only Timing Analysis **********
Nr. of Subtrees                : 1
Nr. of Sinks                   : 3566
Nr. of Buffer                  : 84
Nr. of Level (including gates) : 4
Root Rise Input Tran           : 120(ps)
Root Fall Input Tran           : 120(ps)
Max trig. edge delay at sink(R): tx_core/axi_master/haddr2_d_reg[12]/CLK 386.3(ps)
Min trig. edge delay at sink(R): tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][4]/CLK 319.9(ps)


                                 (Actual)               (Required)          
Rise Phase Delay               : 319.9~386.3(ps)        0~10(ps)            
Fall Phase Delay               : 329.5~401.8(ps)        0~10(ps)            
Trig. Edge Skew                : 66.4(ps)               108(ps)             
Rise Skew                      : 66.4(ps)               
Fall Skew                      : 72.3(ps)               
Max. Rise Buffer Tran.         : 125.3(ps)              200(ps)             
Max. Fall Buffer Tran.         : 88.2(ps)               200(ps)             
Max. Rise Sink Tran.           : 140.2(ps)              200(ps)             
Max. Fall Sink Tran.           : 104.2(ps)              200(ps)             
Min. Rise Buffer Tran.         : 48.9(ps)               0(ps)               
Min. Fall Buffer Tran.         : 47.2(ps)               0(ps)               
Min. Rise Sink Tran.           : 104.2(ps)              0(ps)               
Min. Fall Sink Tran.           : 79.3(ps)               0(ps)               


Clock clks.clk has been routed. Routing guide will not be generated.
Generating Clock Analysis Report report.ctsrpt ....
Generating Clock Routing Guide cts.rguide ....
Clock Analysis (CPU Time 0:00:00.1)



#############################################################################
#
# Summary of During-Synthesis Checks
#
#############################################################################


Types of Check                                    :          Number of warnings
----------------------------------------------------------------------------

Check RefinePlacement move distance               :          0(disabled)
Check route layer follows preference              :          0(disabled)
Check route follows guide                         :          0(disabled)
clock gating checks                               :          0(disabled)

*** End ckSynthesis (cpu=0:00:47.1, real=0:00:47.0, mem=383.0M) ***
<CMD> trialRoute -highEffort -guide cts.rguide
*** Starting trialRoute (mem=383.0M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -highEffort -handlePreroute -keepMarkedOptRoutes -guide cts.rguide -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (923950 915140)
coreBox:    (40280 40280) (883950 875140)
There are 85 prerouted nets with extraSpace.

Phase 0 route (using Routing Guide) (0:00:00.0 383.0M):
Number of multi-gpin terms=1315, multi-gpins=3642, moved blk term=0/0

Phase 1a route (0:00:00.2 383.0M):
Est net length = 7.155e+05um = 3.368e+05H + 3.788e+05V
Usage: (19.9%H 23.3%V) = (4.164e+05um 6.790e+05um) = (432959 276180)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 7 = 0 (0.00% H) + 7 (0.01% V)

Phase 1b route (0:00:00.1 383.0M):
Usage: (19.9%H 23.3%V) = (4.156e+05um 6.791e+05um) = (432107 276180)
Overflow: 6 = 0 (0.00% H) + 6 (0.01% V)

Phase 1c route (0:00:00.1 383.0M):
Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431792 276170)
Overflow: 6 = 0 (0.00% H) + 6 (0.01% V)

Phase 1d route (0:00:00.1 383.0M):
Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431792 276170)
Overflow: 6 = 0 (0.00% H) + 6 (0.01% V)

Phase 1e route (0:00:00.1 383.0M):
Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431792 276171)
Overflow: 4 = 0 (0.00% H) + 4 (0.00% V)

Phase 1f route (0:00:00.1 383.0M):
Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431794 276171)
Overflow: 3 = 0 (0.00% H) + 3 (0.00% V)

Phase 1g route (0:00:00.1 383.0M):
Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431794 276171)
Overflow: 3 = 0 (0.00% H) + 3 (0.00% V)

Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431794 276171)
Overflow: 3 = 0 (0.00% H) + 3 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	25	 0.03%
  1:	0	 0.00%	45	 0.05%
  2:	0	 0.00%	129	 0.15%
  3:	0	 0.00%	506	 0.57%
  4:	0	 0.00%	2010	 2.27%
  5:	0	 0.00%	2938	 3.32%
  6:	2	 0.00%	4720	 5.33%
  7:	7	 0.01%	6818	 7.69%
  8:	13	 0.01%	8927	10.07%
  9:	39	 0.04%	10892	12.29%
 10:	95	 0.11%	12276	13.85%
 11:	252	 0.28%	11146	12.58%
 12:	2803	 3.16%	10978	12.39%
 13:	2709	 3.06%	7702	 8.69%
 14:	2043	 2.31%	3801	 4.29%
 15:	2978	 3.36%	2460	 2.78%
 16:	4608	 5.20%	1469	 1.66%
 17:	6074	 6.85%	0	 0.00%
 18:	8060	 9.09%	0	 0.00%
 19:	9625	10.86%	0	 0.00%
 20:	49316	55.65%	1780	 2.01%

Global route (cpu=0.7s real=1.0s 383.0M)
Phase 1l route (0:00:00.9 383.0M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (20.2%H 23.9%V) = (4.225e+05um 6.978e+05um) = (439118 283847)
Overflow: 8 = 0 (0.00% H) + 8 (0.01% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	2	 0.00%
 -1:	0	 0.00%	3	 0.00%
--------------------------------------
  0:	0	 0.00%	32	 0.04%
  1:	0	 0.00%	69	 0.08%
  2:	0	 0.00%	207	 0.23%
  3:	0	 0.00%	735	 0.83%
  4:	0	 0.00%	2320	 2.62%
  5:	1	 0.00%	3217	 3.63%
  6:	2	 0.00%	4922	 5.55%
  7:	8	 0.01%	6903	 7.79%
  8:	20	 0.02%	8772	 9.90%
  9:	52	 0.06%	10594	11.95%
 10:	120	 0.14%	12040	13.59%
 11:	298	 0.34%	10967	12.37%
 12:	2858	 3.22%	10812	12.20%
 13:	2778	 3.13%	7585	 8.56%
 14:	2146	 2.42%	3770	 4.25%
 15:	3095	 3.49%	2443	 2.76%
 16:	4756	 5.37%	1450	 1.64%
 17:	6237	 7.04%	0	 0.00%
 18:	8174	 9.22%	0	 0.00%
 19:	9668	10.91%	0	 0.00%
 20:	48411	54.63%	1780	 2.01%



*** Completed Phase 1 route (0:00:01.7 383.0M) ***


Total length: 7.727e+05um, number of vias: 211594
M1(H) length: 5.833e+03um, number of vias: 98805
M2(V) length: 2.426e+05um, number of vias: 91987
M3(H) length: 3.253e+05um, number of vias: 17319
M4(V) length: 1.426e+05um, number of vias: 1842
M5(H) length: 2.272e+04um, number of vias: 1354
M6(V) length: 3.340e+04um, number of vias: 127
M7(H) length: 4.292e+01um, number of vias: 89
M8(V) length: 1.446e+02um, number of vias: 45
M9(H) length: 1.788e+01um, number of vias: 26
M10(V) length: 3.711e+01um
*** Completed Phase 2 route (0:00:01.1 383.0M) ***

*** Finished all Phases (cpu=0:00:02.9 mem=383.0M) ***
Peak Memory Usage was 387.0M 
*** Finished trialRoute (cpu=0:00:03.1 mem=383.0M) ***

<CMD> extractRC
Extraction called for design 'eth_core' of instances=32003 and nets=33419 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:00.0  MEM: 383.012M)
<CMD> reportClockTree -postRoute -localSkew -report skew.post_troute_local.ctsrpt
Redoing specifyClockTree ...
Checking spec file integrity...


reportClockTree Option :  -postRoute -localSkew -report skew.post_troute_local.ctsrpt 
*** Look For Reconvergent Clock Component ***
The clock tree clks.clk has no reconvergent cell.

Searching for sequentially adjacent registers for clock tree 'clks.clk' ...
..........|..........|..........|........
Total number of adjacent register pair is 383144.

#
# Mode                : Setup
# Library Name        : gscl45nm
# Operating Condition : typical
# Process             : 1
# Voltage             : 1.1
# Temperature         : 27
#
********** Clock clks.clk Post-Route Timing Analysis **********
Nr. of Subtrees                : 1
Nr. of Sinks                   : 3566
Nr. of Buffer                  : 84
Nr. of Level (including gates) : 4
Root Rise Input Tran           : 120(ps)
Root Fall Input Tran           : 120(ps)
Max trig. edge delay at sink(R): tx_core/tx_crc/crcpkt0/crcin40_d_reg[5]/CLK 336.3(ps)
Min trig. edge delay at sink(R): tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][4]/CLK 270.7(ps)


                                 (Actual)               (Required)          
Rise Phase Delay               : 270.7~336.3(ps)        0~10(ps)            
Fall Phase Delay               : 275.1~340.4(ps)        0~10(ps)            
Trig. Edge Skew                : 65.6(ps)               108(ps)             
Rise Skew                      : 65.6(ps)               
Fall Skew                      : 65.3(ps)               
Max. Rise Buffer Tran.         : 156(ps)                200(ps)             
Max. Fall Buffer Tran.         : 134.2(ps)              200(ps)             
Max. Rise Sink Tran.           : 185.9(ps)              200(ps)             
Max. Fall Sink Tran.           : 161.4(ps)              200(ps)             
Min. Rise Buffer Tran.         : 56.2(ps)               0(ps)               
Min. Fall Buffer Tran.         : 54.1(ps)               0(ps)               
Min. Rise Sink Tran.           : 114.9(ps)              0(ps)               
Min. Fall Sink Tran.           : 95.9(ps)               0(ps)               


**** Local Skew Report ****
Total number of adjacent register pair : 383144                 

Max. Local Skew                : 56.9(ps)               
  tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][7]/CLK(R)->
  tx_core/axi_master/haddr0_d_reg[7]/CLK(R)


Generating Clock Analysis Report skew.post_troute_local.ctsrpt ....
Clock Analysis (CPU Time 0:00:01.2)


*** End reportClockTree (cpu=0:00:01.2, real=0:00:01.0, mem=417.2M) ***
<CMD> reportClockTree -postRoute -report report.post_troute.ctsrpt
Redoing specifyClockTree ...
Checking spec file integrity...


reportClockTree Option :  -postRoute -report report.post_troute.ctsrpt 
*** Look For Reconvergent Clock Component ***
The clock tree clks.clk has no reconvergent cell.

#
# Mode                : Setup
# Library Name        : gscl45nm
# Operating Condition : typical
# Process             : 1
# Voltage             : 1.1
# Temperature         : 27
#
********** Clock clks.clk Post-Route Timing Analysis **********
Nr. of Subtrees                : 1
Nr. of Sinks                   : 3566
Nr. of Buffer                  : 84
Nr. of Level (including gates) : 4
Root Rise Input Tran           : 120(ps)
Root Fall Input Tran           : 120(ps)
Max trig. edge delay at sink(R): tx_core/tx_crc/crcpkt0/crcin40_d_reg[5]/CLK 336.3(ps)
Min trig. edge delay at sink(R): tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][4]/CLK 270.7(ps)


                                 (Actual)               (Required)          
Rise Phase Delay               : 270.7~336.3(ps)        0~10(ps)            
Fall Phase Delay               : 275.1~340.4(ps)        0~10(ps)            
Trig. Edge Skew                : 65.6(ps)               108(ps)             
Rise Skew                      : 65.6(ps)               
Fall Skew                      : 65.3(ps)               
Max. Rise Buffer Tran.         : 156(ps)                200(ps)             
Max. Fall Buffer Tran.         : 134.2(ps)              200(ps)             
Max. Rise Sink Tran.           : 185.9(ps)              200(ps)             
Max. Fall Sink Tran.           : 161.4(ps)              200(ps)             
Min. Rise Buffer Tran.         : 56.2(ps)               0(ps)               
Min. Fall Buffer Tran.         : 54.1(ps)               0(ps)               
Min. Rise Sink Tran.           : 114.9(ps)              0(ps)               
Min. Fall Sink Tran.           : 95.9(ps)               0(ps)               


Generating Clock Analysis Report report.post_troute.ctsrpt ....
Clock Analysis (CPU Time 0:00:00.1)


*** End reportClockTree (cpu=0:00:00.1, real=0:00:00.0, mem=393.8M) ***
<CMD> setAnalysisMode -setup -async -skew -autoDetectClockTree
**WARN: (ENCTCM-70):	Option "-setup" for command setAnalysisMode is obsolete and has been replaced by "-checkType setup". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-checkType setup".
**WARN: (ENCTCM-70):	Option "-async" for command setAnalysisMode is obsolete and has been replaced by "-asyncChecks async". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-asyncChecks async".
**WARN: (ENCTCM-70):	Option "-skew" for command setAnalysisMode is obsolete and has been replaced by "-skew true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-skew true".
**WARN: (ENCTCM-70):	Option "-autoDetectClockTree" for command setAnalysisMode is obsolete and has been replaced by "-clockPropagation autoDetectClockTree". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-clockPropagation autoDetectClockTree".
**WARN: (ENCSYC-1870):	setAnalysisMode -clockPropagation autoDetectClockTree not supported in CTE timing mode, mapping it to setAnalysisMode -clockPropagation sdcControl
{DETAILMESSAGE}<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.3.cts
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.0, MEM = 391.8M, InitMEM = 391.8M)
Number of Loop : 0
Start delay calculation (mem=391.781M)...
Delay calculation completed. (cpu=0:00:01.3 real=0:00:02.0 mem=391.781M 0)
*** CDM Built up (cpu=0:00:01.4  real=0:00:02.0  mem= 391.8M) ***
<CMD> setOptMode -highEffort -fixDrc -addPortAsNeeded -incrTrialRoute -restruct -topomap
**WARN: (ENCTCM-70):	Option "-fixDrc" for command setOptMode is obsolete and has been replaced by "-fixDrc true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-fixDrc true".
**WARN: (ENCTCM-70):	Option "-addPortAsNeeded" for command setOptMode is obsolete and has been replaced by "-addPortAsNeeded true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-addPortAsNeeded true".
**WARN: (ENCTCM-70):	Option "-restruct" for command setOptMode is obsolete and has been replaced by "-restruct true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-restruct true".
**WARN: (ENCTCM-70):	Option "-topomap" for command setOptMode is obsolete and has been replaced by "-topoMap true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-topoMap true".
**WARN: (ENCTCM-70):	Option "-highEffort" for command setOptMode is obsolete and has been replaced by "-effort high". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-effort high".
<CMD> optDesign -postCTS -drv
*info: Enabling Trial Route flow for DRV Fixing.
**optDesign ... cpu = 0:00:00, real = 0:00:00, mem = 391.8M **
*** optDesign -postCTS ***
DRC Margin: user margin 0.0; extra margin 0.2
Hold Target Slack: user slack 0.0
Setup Target Slack: user slack 0.0; extra slack 0.1
*info: Setting setup target slack to 0.100
*info: Hold target slack is 0.000
*** CTE mode ***
*** Starting trialRoute (mem=391.8M) ***

There are 0 pin guide points passed to trialRoute.
Start to check current routing status for nets...
All nets are already routed correctly.
*** Finishing trialRoute (mem=391.8M) ***


------------------------------------------------------------
             Initial Summary                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -3.877  |
|           TNS (ns):| -2314.5 |
|    Violating Paths:|  3870   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.029   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.270%
------------------------------------------------------------
**optDesign ... cpu = 0:00:01, real = 0:00:01, mem = 391.8M **
*** Starting optimizing excluded clock nets MEM= 391.8M) ***
*info: No excluded clock nets to be optimized.
*** Completed optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 391.8M) ***
*** Starting optimizing excluded clock nets MEM= 391.8M) ***
*info: No excluded clock nets to be optimized.
*** Completed optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 391.8M) ***
*info: Start fixing DRV (Mem = 391.78M) ...
*info: Options = -maxCap -maxTran -noMaxFanout -noSensitivity -backward -reduceBuffer -maxIter 2
*info: Start fixing DRV iteration 1 ...
*** Starting dpFixDRCViolation (391.8M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=391.8M) ***
*info: There are 2 candidate Buffer cells
*info: There are 4 candidate Inverter cells
Initializing placement sections/sites ...
Density before buffering = 0.602702
Start fixing design rules ... (0:00:00.3 391.9M)
Done fixing design rule (0:00:00.4 392.1M)

Summary:
0 buffer added on 0 net (with 0 driver resized)

Density after buffering = 0.602702
*** Completed dpFixDRCViolation (0:00:00.5 392.1M)

*info: DRV Fixing Iteration 1.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info: early stop due to unchanged DRVs
*info: Start fixing DRV while maintaining existing placement ...
*** Starting dpFixDRCViolation (392.1M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=392.1M) ***
Start fixing design rules ... (0:00:00.2 392.1M)
Done fixing design rule (0:00:00.6 392.9M)

Summary:
1 buffer added on 1 net (with 0 driver resized)

Density after buffering = 0.602718
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 12.1 % ( 37 / 306 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:00.8, Real Time = 0:00:00.0
move report: preRPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 0 insts, mean move: 0.00 um, max move: 0.00 um
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.00 um
  mean    (X+Y) =         0.00 um
Total instances moved : 0
*** cpu=0:00:00.9   mem=393.2M  mem(used)=0.4M***
*** Completed dpFixDRCViolation (0:00:01.8 393.2M)

*** Starting trialRoute (mem=393.2M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (923950 915140)
coreBox:    (40280 40280) (883950 875140)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1315, multi-gpins=3642, moved blk term=0/0

Phase 1a route (0:00:00.2 397.3M):
Est net length = 7.155e+05um = 3.368e+05H + 3.788e+05V
Usage: (19.9%H 23.3%V) = (4.164e+05um 6.790e+05um) = (432954 276181)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 7 = 0 (0.00% H) + 7 (0.01% V)

Phase 1b route (0:00:00.1 397.3M):
Usage: (19.9%H 23.3%V) = (4.156e+05um 6.791e+05um) = (432102 276181)
Overflow: 6 = 0 (0.00% H) + 6 (0.01% V)

Phase 1c route (0:00:00.1 397.3M):
Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431787 276171)
Overflow: 6 = 0 (0.00% H) + 6 (0.01% V)

Phase 1d route (0:00:00.1 397.3M):
Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431787 276171)
Overflow: 6 = 0 (0.00% H) + 6 (0.01% V)

Phase 1e route (0:00:00.1 397.8M):
Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431787 276172)
Overflow: 4 = 0 (0.00% H) + 4 (0.00% V)

Phase 1f route (0:00:00.1 397.8M):
Usage: (19.9%H 23.3%V) = (4.153e+05um 6.790e+05um) = (431789 276172)
Overflow: 3 = 0 (0.00% H) + 3 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	25	 0.03%
  1:	0	 0.00%	45	 0.05%
  2:	0	 0.00%	129	 0.15%
  3:	0	 0.00%	506	 0.57%
  4:	0	 0.00%	2011	 2.27%
  5:	0	 0.00%	2938	 3.32%
  6:	2	 0.00%	4722	 5.33%
  7:	7	 0.01%	6811	 7.69%
  8:	13	 0.01%	8929	10.08%
  9:	39	 0.04%	10896	12.29%
 10:	93	 0.10%	12276	13.85%
 11:	251	 0.28%	11143	12.57%
 12:	2799	 3.16%	10980	12.39%
 13:	2724	 3.07%	7697	 8.69%
 14:	2036	 2.30%	3806	 4.29%
 15:	2977	 3.36%	2460	 2.78%
 16:	4612	 5.20%	1468	 1.66%
 17:	6072	 6.85%	0	 0.00%
 18:	8051	 9.08%	0	 0.00%
 19:	9636	10.87%	0	 0.00%
 20:	49312	55.64%	1780	 2.01%


Global route (cpu=0.8s real=1.0s 397.8M)
Phase 1l route (0:00:01.1 395.4M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (20.2%H 23.9%V) = (4.225e+05um 6.978e+05um) = (439111 283850)
Overflow: 8 = 0 (0.00% H) + 8 (0.01% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	2	 0.00%
 -1:	0	 0.00%	3	 0.00%
--------------------------------------
  0:	0	 0.00%	32	 0.04%
  1:	0	 0.00%	69	 0.08%
  2:	0	 0.00%	207	 0.23%
  3:	0	 0.00%	735	 0.83%
  4:	0	 0.00%	2320	 2.62%
  5:	1	 0.00%	3220	 3.63%
  6:	2	 0.00%	4920	 5.55%
  7:	8	 0.01%	6897	 7.78%
  8:	20	 0.02%	8777	 9.90%
  9:	52	 0.06%	10598	11.96%
 10:	118	 0.13%	12037	13.58%
 11:	296	 0.33%	10965	12.37%
 12:	2857	 3.22%	10815	12.20%
 13:	2789	 3.15%	7579	 8.55%
 14:	2143	 2.42%	3775	 4.26%
 15:	3093	 3.49%	2443	 2.76%
 16:	4758	 5.37%	1449	 1.63%
 17:	6237	 7.04%	0	 0.00%
 18:	8162	 9.21%	0	 0.00%
 19:	9682	10.92%	0	 0.00%
 20:	48406	54.62%	1780	 2.01%



*** Completed Phase 1 route (0:00:02.1 394.9M) ***


Total length: 7.726e+05um, number of vias: 211595
M1(H) length: 5.833e+03um, number of vias: 98807
M2(V) length: 2.425e+05um, number of vias: 91988
M3(H) length: 3.253e+05um, number of vias: 17317
M4(V) length: 1.426e+05um, number of vias: 1842
M5(H) length: 2.267e+04um, number of vias: 1354
M6(V) length: 3.341e+04um, number of vias: 127
M7(H) length: 4.292e+01um, number of vias: 89
M8(V) length: 1.446e+02um, number of vias: 45
M9(H) length: 1.788e+01um, number of vias: 26
M10(V) length: 3.711e+01um
*** Completed Phase 2 route (0:00:01.2 393.2M) ***

*** Finished all Phases (cpu=0:00:03.5 mem=393.2M) ***
Peak Memory Usage was 401.8M 
*** Finished trialRoute (cpu=0:00:03.8 mem=393.2M) ***

Extraction called for design 'eth_core' of instances=32004 and nets=33420 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:00.0  MEM: 393.227M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.0, MEM = 393.2M, InitMEM = 393.2M)
Number of Loop : 0
Start delay calculation (mem=393.227M)...
Delay calculation completed. (cpu=0:00:01.3 real=0:00:01.0 mem=393.227M 0)
*** CDM Built up (cpu=0:00:01.8  real=0:00:02.0  mem= 393.2M) ***
*info: DRV Fixing Iteration 2.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info:
*info: Completed fixing DRV (CPU Time = 0:00:09, Mem = 393.23M).

------------------------------------------------------------
     Summary (cpu=0.15min real=0.15min mem=393.2M)                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -3.877  |
|           TNS (ns):| -2312.5 |
|    Violating Paths:|  3873   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.029   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.272%
Routing Overflow: 0.00% H and 0.01% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:10, real = 0:00:12, mem = 393.2M **
Reported timing to dir ./timingReports
**optDesign ... cpu = 0:00:11, real = 0:00:12, mem = 393.2M **

------------------------------------------------------------
     optDesign Final Summary                             
------------------------------------------------------------

+--------------------+---------+---------+---------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | in2reg  | reg2out | in2out  | clkgate |
+--------------------+---------+---------+---------+---------+---------+---------+
|           WNS (ns):| -3.877  | -3.575  | -3.877  | -0.119  | -0.342  |   N/A   |
|           TNS (ns):| -2312.5 | -1327.4 | -2311.3 | -0.198  | -1.165  |   N/A   |
|    Violating Paths:|  3873   |  2243   |  3859   |    2    |   14    |   N/A   |
|          All Paths:|  7370   |  3566   |  6377   |   522   |   341   |   N/A   |
+--------------------+---------+---------+---------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.029   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.272%
Routing Overflow: 0.00% H and 0.01% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:12, real = 0:00:14, mem = 393.2M **
*** Finished optDesign ***
<CMD_INTERNAL> initECO ipo2.txt
<CMD> setExtractRCMode -default -assumeMetFill
**WARN: (ENCEXT-1086):	Option '-default' is obsolete. Use '-engine preRoute' to set extraction engine. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script and configuration file to use recommended convention.
**WARN: (ENCEXT-3493):	Extraction mode changed by calling extraction setup command 'setExtractRCMode'. Therefore, parasitic data in the tool generated as per previous mode is deleted. Call of extractRC/spefIn will generate/bring parasitic data in the tool as per current mode.
<CMD> extractRC
Extraction called for design 'eth_core' of instances=32004 and nets=33420 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:00.0  MEM: 394.230M)
**ERROR: (ENCOPT-513):	'fixSetupViolation' is obsolete. Use the 'optDesign' command instead
<CMD> setExtractRCMode -detail -assumeMetFill
**WARN: (ENCEXT-1082):	Option '-detail' is obsolete. Use '-engine postRoute [-effortLevel low]' to set extraction engine, which is based on recommended convention '-engine postRoute [-effortLevel <low|medium|high|signoff>]'. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script and configuration file to use recommended convention.
**WARN: (ENCEXT-3493):	Extraction mode changed by calling extraction setup command 'setExtractRCMode'. Therefore, parasitic data in the tool generated as per previous mode is deleted. Call of extractRC/spefIn will generate/bring parasitic data in the tool as per current mode.
**WARN: (ENCEXT-3410):	Option -assumeMetalFill is recommended only in default extraction mode. It will use the basic cap table instead of extnded cap table in detail or TQRC/IQRC mode.
<CMD> extractRC
Extraction called for design 'eth_core' of instances=32004 and nets=33420 using extraction engine 'postRoute' at effort level 'low' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Detail RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
**WARN: (ENCEXT-3032):	Since cap. table file was not provided, it will be created internally with the following process info:
* Layer Id             : 1 - M1
      Thickness        : 0.6
      Min Width        : 0.065
      Layer Dielectric : 4.1
* Layer Id             : 2 - M2
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 3 - M3
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 4 - M4
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 5 - M5
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 6 - M6
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 7 - M7
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 8 - M8
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 9 - M9
      Thickness        : 0.6
      Min Width        : 0.8
      Layer Dielectric : 4.1
* Layer Id             : 10 - M10
      Thickness        : 1
      Min Width        : 0.8
      Layer Dielectric : 4.1
extractDetailRC Option : -outfile ./eth_core_xWcbHR_24199.rcdb.d  -basic -newAssumeMetFill
Assumed metal fill uses the following parameters:
              Active Spacing      Min. Width
                [microns]         [microns]
**WARN: (ENCEXT-3087):	Fill active spacing for layer M1 is not specified, it will use  0.600 microns.
  Layer M1        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M2 is not specified, it will use  0.600 microns.
  Layer M2        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M3 is not specified, it will use  0.600 microns.
  Layer M3        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M4 is not specified, it will use  0.600 microns.
  Layer M4        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M5 is not specified, it will use  0.600 microns.
  Layer M5        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M6 is not specified, it will use  0.600 microns.
  Layer M6        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M7 is not specified, it will use  0.600 microns.
  Layer M7        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M8 is not specified, it will use  0.600 microns.
  Layer M8        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M9 is not specified, it will use  0.600 microns.
  Layer M9        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M10 is not specified, it will use  0.600 microns.
  Layer M10        0.600             0.400 
RC Mode: Detail [Assume Metal Fill, LEF Resistances]
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Coupling Cap. Scaling Factor : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res. Scaling Factor    : 1.00000
Shrink Factor                : 1.00000
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 385.5M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for storing RC.
Extracted 10.0006% (CPU Time= 0:00:00.6  MEM= 401.1M)
Extracted 20.0006% (CPU Time= 0:00:00.7  MEM= 402.2M)
Extracted 30.0005% (CPU Time= 0:00:00.7  MEM= 402.6M)
Extracted 40.0004% (CPU Time= 0:00:00.9  MEM= 405.5M)
Extracted 50.0007% (CPU Time= 0:00:01.1  MEM= 409.3M)
Extracted 60.0006% (CPU Time= 0:00:01.4  MEM= 413.3M)
Extracted 70.0006% (CPU Time= 0:00:01.8  MEM= 415.2M)
Extracted 80.0005% (CPU Time= 0:00:02.2  MEM= 415.2M)
Extracted 90.0004% (CPU Time= 0:00:03.0  MEM= 415.3M)
Extracted 100% (CPU Time= 0:00:03.5  MEM= 415.3M)
Nr. Extracted Resistors     : 494639
Nr. Extracted Ground Cap.   : 527147
Nr. Extracted Coupling Cap. : 1177476
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Filtering XCap in 'relativeOnly' mode using values relative_c_threshold=0.03 and total_c_threshold=5fF.
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 387.5M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb_Filter.rcdb.d/header.seq' for storing RC.
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 32626 times net's RC data read were performed.
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Detail RC Extraction DONE (CPU Time: 0:00:04.6  Real Time: 0:00:08.0  MEM: 385.461M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 394.2M, InitMEM = 394.2M)
Number of Loop : 0
Start delay calculation (mem=394.230M)...
delayCal using detail RC...
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
RC Database In Completed (CPU Time= 0:00:00.2  MEM= 421.0M)
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 32626 times net's RC data read were performed.
Delay calculation completed. (cpu=0:00:01.4 real=0:00:01.0 mem=420.137M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 420.1M) ***
<CMD_INTERNAL> endECO
<CMD_INTERNAL> cleanupECO
<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.4.ipo2
<CMD> addFiller -cell FILL -prefix FILL -fillBoundary
Design contains fractional 20 cells.
*INFO: Adding fillers to top-module.
*INFO:   Added 68732 filler insts (cell FILL / prefix FILL).
*INFO: Total 68732 filler insts added - prefix FILL (CPU: 0:00:00.3).
*** Applied 2 GNC rules (cpu = 0:00:00.0)
*INFO: Checking for DRC violations on added fillers.
*INFO: Iteration 0-#1, Found 0 DRC violation  (real: 0:00:03.0).
*INFO: Adding fillers to top-module.
*INFO:   Added 0 filler inst of any cell-type.
*** Applied 2 GNC rules (cpu = 0:00:00.0)
*INFO: End DRC Checks. (real: 0:00:03.0 ).
<CMD> globalNetConnect vdd -type tiehi
<CMD> globalNetConnect vdd -type net -net 1'b1
**ERROR: (ENCDB-1225):	Cannot find net '1'b1' in the design.
<CMD> globalNetConnect vdd -type pgpin -pin vdd -override
<CMD> globalNetConnect gnd -type tielo
<CMD> globalNetConnect gnd -type net -net 1'b0
**ERROR: (ENCDB-1225):	Cannot find net '1'b0' in the design.
<CMD> globalNetConnect gnd -type pgpin -pin gnd -override
<CMD> globalDetailRoute

globalDetailRoute

#Start globalDetailRoute on Sun Nov 13 17:30:25 2016
#
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo2.f0_wdata[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo2.f0_wdata[3] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo1.f0_wdata[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo1.f0_wdata[3] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo0.f0_wdata[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_pcfifo0.f0_wdata[3] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARSIZE[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARSIZE[1] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin m_r_ach.ARLEN[1] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchrsp.f0_wdata[4] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchrsp.f0_wdata[5] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchdata.f0_raddr[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchdata.f0_raddr[1] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchdata.f0_raddr[2] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchdata.f0_raddr[3] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchdata.f0_raddr[4] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchdata.f0_write because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchdata.f0_waddr[0] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39)  NanoRoute cannot route to pin memif_swchdata.f0_waddr[1] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRIG-39 Repeated 20 times. Will be suppressed.)  NanoRoute cannot route to pin memif_swchdata.f0_waddr[2] because it might be a logical pin and does not have physical shapes. To fix the problem, check the pin connection in the netlist and ensure the pin shapes exist in the floorplan.
#WARNING (NRDB-976) The step 0.280000 for preferred direction tracks is smaller than the pitch 0.285000 for LAYER metal4. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 0.280000 for preferred direction tracks is smaller than the pitch 0.285000 for LAYER metal6. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 0.840000 for preferred direction tracks is smaller than the pitch 0.855000 for LAYER metal8. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 1.680000 for preferred direction tracks is smaller than the pitch 1.710000 for LAYER metal10. This will cause routability problems for NanoRoute.
#ERROR (NRDB-631) NET gnd has more than one top-level logical pin
#Cpu time = 00:00:01
#Elapsed time = 00:00:01
#Increased memory = -9.00 (Mb)
#Total memory = 482.00 (Mb)
#Peak memory = 491.00 (Mb)
#WARNING (NRIF-19) Fail to complete globalDetailRoute on Sun Nov 13 17:30:25 2016
#
<CMD> setDrawView ameba
<CMD> setDrawView fplan
<CMD> setDrawView ameba
<CMD> setDrawView place
<CMD> clearGlobalNets
<CMD> globalNetConnect vdd -type pgpin -pin vdd -inst {}
<CMD> globalNetConnect gnd -type pgpin -pin gnd -inst {}
<CMD> globalNetConnect vdd -type tiehi
<CMD> globalNetConnect vdd -type pgpin -pin vdd -inst {} -override
<CMD> globalNetConnect gnd -type tielo
<CMD> globalNetConnect gnd -type pgpin -pin gnd -inst {} -override
<CMD> globalNetConnect vdd -type net -net 1'b1 -override
**ERROR: (ENCDB-1225):	Cannot find net '1'b1' in the design.
<CMD> globalNetConnect gnd -type net -net 1'b0 -override
**ERROR: (ENCDB-1225):	Cannot find net '1'b0' in the design.
<CMD> loadConfig ./encounter.conf
**WARN: (ENCSYT-3033):	Cannot loadConfig after commitConfig.  This command is skipped.
<CMD> floorPlan -r 1.0 0.6 20 20 20 20
Adjusting Core to Left to: 20.1400. Core to Bottom to: 20.1400.
Horizontal Layer M1 offset = 190 (guessed)
Vertical Layer M2 offset = 190 (guessed)
Suggestion: specify LAYER OFFSET in LEF file
Reason: hard to extract LAYER OFFSET from standard cells
Flip instance FECTS_clks_clk___L4_I66 to match row orient.
Flip instance FECTS_clks_clk___L4_I65 to match row orient.
Flip instance FECTS_clks_clk___L4_I64 to match row orient.
Flip instance FECTS_clks_clk___L4_I63 to match row orient.
Flip instance FECTS_clks_clk___L4_I59 to match row orient.
Flip instance FECTS_clks_clk___L4_I57 to match row orient.
Flip instance FECTS_clks_clk___L4_I54 to match row orient.
Flip instance FECTS_clks_clk___L4_I53 to match row orient.
Flip instance FECTS_clks_clk___L4_I51 to match row orient.
Flip instance FECTS_clks_clk___L4_I50 to match row orient.
Flip instance FECTS_clks_clk___L4_I48 to match row orient.
Flip instance FECTS_clks_clk___L4_I43 to match row orient.
Flip instance FECTS_clks_clk___L4_I41 to match row orient.
Flip instance FECTS_clks_clk___L4_I40 to match row orient.
Flip instance FECTS_clks_clk___L4_I39 to match row orient.
Flip instance FECTS_clks_clk___L4_I37 to match row orient.
Flip instance FECTS_clks_clk___L4_I36 to match row orient.
Flip instance FECTS_clks_clk___L4_I35 to match row orient.
Flip instance FECTS_clks_clk___L4_I34 to match row orient.
Flip instance FECTS_clks_clk___L4_I31 to match row orient.
Flip instance FECTS_clks_clk___L4_I29 to match row orient.
Flip instance FECTS_clks_clk___L4_I27 to match row orient.
Flip instance FECTS_clks_clk___L4_I26 to match row orient.
Flip instance FECTS_clks_clk___L4_I24 to match row orient.
Flip instance FECTS_clks_clk___L4_I23 to match row orient.
Flip instance FECTS_clks_clk___L4_I16 to match row orient.
Flip instance FECTS_clks_clk___L4_I15 to match row orient.
Flip instance FECTS_clks_clk___L4_I14 to match row orient.
Flip instance FECTS_clks_clk___L4_I13 to match row orient.
Flip instance FECTS_clks_clk___L4_I12 to match row orient.
Flip instance FECTS_clks_clk___L4_I8 to match row orient.
Flip instance FECTS_clks_clk___L4_I7 to match row orient.
Flip instance FECTS_clks_clk___L4_I6 to match row orient.
Flip instance FECTS_clks_clk___L4_I3 to match row orient.
Flip instance FECTS_clks_clk___L4_I2 to match row orient.
Flip instance FECTS_clks_clk___L4_I1 to match row orient.
Flip instance FECTS_clks_clk___L4_I0 to match row orient.
Flip instance FECTS_clks_clk___L3_I7 to match row orient.
Flip instance FECTS_clks_clk___L3_I6 to match row orient.
Flip instance FECTS_clks_clk___L3_I5 to match row orient.
Flip instance FECTS_clks_clk___L3_I4 to match row orient.
Flip instance FECTS_clks_clk___L3_I1 to match row orient.
Flip instance FECTS_clks_clk___L2_I3 to match row orient.
Flip instance FECTS_clks_clk___L2_I2 to match row orient.
Flip instance FECTS_clks_clk___L2_I1 to match row orient.
Flip instance FECTS_clks_clk___L2_I0 to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[20] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[17] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[10] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[28] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[23] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[13] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[10] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[24] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[23] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[20] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[17] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[15] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/cur_chstate_2_reg[0] to match row orient.
Flip instance tx_core/axi_master/cur_chstate_0_reg[1] to match row orient.
Flip instance tx_core/axi_master/cur_chstate_0_reg[0] to match row orient.
Flip instance tx_core/axi_master/cur_state_reg[0] to match row orient.
Flip instance tx_core/axi_master/arvalid_d_reg to match row orient.
Flip instance tx_core/axi_master/ch_gnt_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/ch_gnt_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/ch_gnt_2d_reg[0] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr1_d_reg[last_bvalid][0] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr1_d_reg[last_bvalid][1] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr1_d_reg[last_bvalid][2] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr1_d_reg[last_bvalid][6] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[8] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[13] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[17] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[23] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[24] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr0_d_reg[last_bvalid][0] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr0_d_reg[last_bvalid][2] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr0_d_reg[last_bvalid][5] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr0_d_reg[last_bvalid][7] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[13] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[14] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[20] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[24] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr2_d_reg[last_bvalid][0] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr2_d_reg[last_bvalid][1] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr2_d_reg[last_bvalid][4] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr2_d_reg[last_bvalid][6] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[10] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[14] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[15] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[20] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[24] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[28] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/depth_left_reg[2] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/depth_left_reg[4] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/depth_left_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/w_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/w_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/w_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/r_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_2_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_2_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_2_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_2_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_1_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_1_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_1_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_1_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_1_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_1_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_0_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_0_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_0_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_0_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_0_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_0_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/depth_left_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/depth_left_reg[4] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/depth_left_reg[5] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/w_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/depth_left_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/depth_left_reg[4] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/w_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[8] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[14] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[20] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[23] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[32] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[33] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[34] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[36] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[39] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[42] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[44] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[45] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[46] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[47] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[48] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[49] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[50] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[51] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[58] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[59] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[62] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[63] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl0_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[8] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[13] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[15] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[32] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[37] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[38] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[39] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[40] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[41] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[44] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[47] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[50] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[52] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[55] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[58] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[59] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[60] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[61] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[63] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[8] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[15] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[17] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[20] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[23] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[28] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[32] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[34] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[35] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[38] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[39] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[41] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[43] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[44] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[53] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[54] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[55] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[56] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[59] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[61] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[62] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl1_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl1_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl1_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/w_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/r_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/r_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/depth_left_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/w_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/w_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/r_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/depth_left_reg[4] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/w_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/w_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/depth_left_reg[6] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/depth_left_reg[6] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][1] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][2] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][5] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][9] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][11] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][18] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][19] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][21] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][23] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][24] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][26] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][28] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][29] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][31] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][1] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][5] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][6] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][8] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][11] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][14] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][15] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][17] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][18] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][21] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][23] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][27] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][28] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][30] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][31] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][1] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][3] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][5] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][6] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][7] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][9] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][10] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][11] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][12] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][13] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][15] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][20] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][21] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][22] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][24] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][26] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][28] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][0] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][1] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][5] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][6] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][7] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][8] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][9] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][10] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][11] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][14] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][18] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][21] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][22] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][23] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][25] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][26] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][27] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][29] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][30] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][31] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][0] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][2] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][4] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][5] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][6] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][7] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][8] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][9] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][13] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][14] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][15] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][17] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][18] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][25] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][27] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][28] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][29] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][30] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][31] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][4] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][6] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][7] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][8] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][11] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][13] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][14] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][15] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][18] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][19] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][21] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][24] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][26] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][27] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][28] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][29] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][30] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/r_ptr_reg[0] to match row orient.
Flip instance tx_core/dma_reg_tx/r_ptr_reg[1] to match row orient.
Flip instance tx_core/dma_reg_tx/r_ptr_reg[2] to match row orient.
Flip instance tx_core/dma_reg_tx/depth_left_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_vld_2d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[63] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[62] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[60] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[59] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[58] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[55] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[52] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[47] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[46] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[45] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[42] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[41] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[40] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[40] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[39] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[37] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[53] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[49] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[48] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[47] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[43] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[41] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/load8_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/load32_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/load48_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/load64_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data8_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data8_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data8_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data8_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[63] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[62] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[60] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[57] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[56] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[55] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[53] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[52] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[49] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[48] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[46] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[43] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[42] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[47] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[45] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[41] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[37] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[53] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[52] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[51] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[50] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[49] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[48] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[42] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[39] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[37] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/load8_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/load32_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/load40_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/load56_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[63] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[58] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[57] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[56] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[53] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[49] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[47] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[46] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[45] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[40] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[39] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[37] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[45] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[42] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[41] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[40] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[39] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[37] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[54] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[52] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[51] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[50] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[48] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[42] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[39] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/load32_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/load48_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[31] to match row orient.
Flip instance tx_core/axi_slave/w_rspch_cur_state_reg[0] to match row orient.
Flip instance tx_core/axi_slave/w_ach_cur_state_reg[0] to match row orient.
Flip instance tx_core/tx_rs/div2_d_reg to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_slave/w_dch_cur_state_reg[0] to match row orient.
Flip instance tx_core/axi_slave/w_dch_cur_state_reg[1] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[4] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[5] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[7] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[8] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[11] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[12] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[13] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[14] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[15] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[17] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[18] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[20] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[23] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[24] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[27] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[29] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/depth_left_reg[2] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/w_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/r_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/w_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/w_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/r_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/tx_rs/cur_state_clk_reg[1] to match row orient.
Flip instance tx_core/tx_rs/cnt128_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/cnt128_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/cnt128_d_reg[4] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[2] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[3] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[5] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[6] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[7] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[8] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[9] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[10] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[11] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[12] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[13] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[14] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[19] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[20] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[21] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[22] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[23] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[25] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[26] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[27] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[30] to match row orient.
Flip instance tx_core/tx_rs/cur_state_reg[0] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt2_d_reg[0] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt2_d_reg[1] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt2_d_reg[4] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt2_d_reg[5] to match row orient.
Flip instance tx_core/QOS_selector/qos/queue_gnt_d_reg[1] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt1_d_reg[3] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt1_d_reg[4] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt1_d_reg[5] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[7] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[6] to match row orient.
Flip instance tx_core/tx_rs/crc_bvalid_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[0] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[1] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[2] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[3] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[5] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/depth_left_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/depth_left_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/depth_left_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/w_ptr_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/w_ptr_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/w_ptr_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/w_ptr_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/r_ptr_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/depth_left_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/depth_left_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/w_ptr_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/w_ptr_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/r_ptr_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/r_ptr_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/r_ptr_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/depth_left_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/depth_left_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/r_ptr_reg[3] to match row orient.
Flip instance tx_core/tx_rs/IDC_cnt_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/IDC_cnt_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[2] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[3] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[5] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[10] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[11] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[12] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[14] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[19] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[21] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[22] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[25] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[26] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[28] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[29] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[30] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[3] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[4] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[5] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[0] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[2] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[3] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[5] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[6] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[10] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[11] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[13] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[14] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[15] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[16] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[17] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[18] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[19] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[20] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[22] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[23] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[24] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[26] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[27] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[28] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[30] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[31] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[34] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[36] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[28] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[37] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[38] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[30] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[39] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[40] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[41] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[44] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[20] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[22] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[47] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[48] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[51] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[52] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[53] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[14] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[15] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[56] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[59] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[60] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[62] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[63] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[7] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt0_d_reg[0] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt0_d_reg[7] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/depth_left_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/depth_left_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/depth_left_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/depth_left_reg[4] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txc_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[25] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[26] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[16] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[17] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[9] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[10] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[2] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[4] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[6] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[7] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[9] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[10] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[11] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[12] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[14] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[15] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[16] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[17] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[18] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[20] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[22] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[23] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[27] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[28] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[29] to match row orient.
Flip instance FECTS_clks_clk___L4_I69 to match row orient.
**WARN: (ENCFP-317):	After resize, ROUTED pre-routed wires will be removed and FIXED pre-routed wires will be retained.
<CMD> addRing -spacing_bottom 5 -width_left 5 -width_bottom 5 -width_top 5 -spacing_top 5 -layer_bottom metal5 -width_right 5 -around core -center 1 -layer_top metal5 -spacing_right 5 -spacing_left 5 -layer_right metal6 -layer_left metal6 -nets { gnd vdd }

The power planner created 8 wires.
<CMD_INTERNAL> amoebaPlace
**WARN: (ENCSP-9007):	The command 'amoebaPlace' is obsolete. It has been replaced by 'placeDesign'.
*** Starting "NanoPlace(TM) placement v0.892.2.20 (mem=482.9M)" ...
Options: ignoreScan ignoreSpare pinGuide gpeffort=medium 
**WARN: (ENCSP-9042):	Scan chains were not defined, -ignoreScan option will be ignored. 
Please first define the scan chains before using this option.
#std cell=100736 #block=0 (0 floating + 0 preplaced) #ioInst=0 #net=32626 #term=99925 #term/net=3.06, #fixedIo=0, #floatIo=0, #fixedPin=0, #floatPin=1153
stdCell: 100736 single + 0 double + 0 multi
Total standard cell length = 69.0728 (mm), area = 0.1706 (mm^2)
Design contains fractional 20 cells.
Average module density = 0.615.
Density for the design = 0.615.
       = stdcell_area 181770 (170610 um^2) / alloc_area 295508 (277364 um^2).
Pin Density = 0.550.
            = total # of pins 99925 / total Instance area 181770.
Identified 68732 spare or floating instances, with no clusters.
Iteration  1: Total net bbox = 1.722e+06 (6.31e+05 1.09e+06)
              Est.  stn bbox = 1.793e+06 (6.74e+05 1.12e+06)
              cpu = 0:00:00.4 real = 0:00:00.0 mem = 482.9M
Iteration  2: Total net bbox = 1.272e+06 (6.31e+05 6.42e+05)
              Est.  stn bbox = 1.364e+06 (6.74e+05 6.91e+05)
              cpu = 0:00:00.4 real = 0:00:01.0 mem = 482.9M
Iteration  3: Total net bbox = 1.143e+06 (5.09e+05 6.34e+05)
              Est.  stn bbox = 1.247e+06 (5.66e+05 6.81e+05)
              cpu = 0:00:01.2 real = 0:00:01.0 mem = 482.9M
Iteration  4: Total net bbox = 1.006e+06 (4.86e+05 5.20e+05)
              Est.  stn bbox = 1.128e+06 (5.39e+05 5.90e+05)
              cpu = 0:00:01.9 real = 0:00:02.0 mem = 482.9M
Iteration  5: Total net bbox = 9.308e+05 (4.17e+05 5.14e+05)
              Est.  stn bbox = 1.060e+06 (4.77e+05 5.83e+05)
              cpu = 0:00:02.1 real = 0:00:02.0 mem = 482.9M
Iteration  6: Total net bbox = 9.084e+05 (4.42e+05 4.66e+05)
              Est.  stn bbox = 1.053e+06 (5.06e+05 5.47e+05)
              cpu = 0:00:02.3 real = 0:00:02.0 mem = 482.9M
Iteration  7: Total net bbox = 9.004e+05 (4.33e+05 4.67e+05)
              Est.  stn bbox = 1.050e+06 (5.03e+05 5.48e+05)
              cpu = 0:00:02.2 real = 0:00:02.0 mem = 482.9M
Iteration  8: Total net bbox = 8.986e+05 (4.35e+05 4.63e+05)
              Est.  stn bbox = 1.052e+06 (5.04e+05 5.48e+05)
              cpu = 0:00:01.3 real = 0:00:02.0 mem = 482.9M
Iteration  9: Total net bbox = 8.885e+05 (4.26e+05 4.63e+05)
              Est.  stn bbox = 1.043e+06 (4.96e+05 5.47e+05)
              cpu = 0:00:02.3 real = 0:00:02.0 mem = 482.9M
Iteration 10: Total net bbox = 9.034e+05 (4.26e+05 4.78e+05)
              Est.  stn bbox = 1.059e+06 (4.96e+05 5.64e+05)
              cpu = 0:00:01.3 real = 0:00:01.0 mem = 482.9M
Iteration 11: Total net bbox = 9.177e+05 (4.40e+05 4.78e+05)
              Est.  stn bbox = 1.074e+06 (5.11e+05 5.64e+05)
              cpu = 0:00:01.3 real = 0:00:02.0 mem = 482.9M
Iteration 12: Total net bbox = 9.296e+05 (4.40e+05 4.89e+05)
              Est.  stn bbox = 1.087e+06 (5.11e+05 5.76e+05)
              cpu = 0:00:01.4 real = 0:00:01.0 mem = 482.9M
Iteration 13: Total net bbox = 9.395e+05 (4.50e+05 4.89e+05)
              Est.  stn bbox = 1.098e+06 (5.21e+05 5.76e+05)
              cpu = 0:00:01.5 real = 0:00:02.0 mem = 482.9M
Iteration 14: Total net bbox = 9.486e+05 (4.50e+05 4.99e+05)
              Est.  stn bbox = 1.108e+06 (5.21e+05 5.86e+05)
              cpu = 0:00:01.7 real = 0:00:01.0 mem = 482.9M
Iteration 15: Total net bbox = 9.521e+05 (4.54e+05 4.99e+05)
              Est.  stn bbox = 1.111e+06 (5.25e+05 5.86e+05)
              cpu = 0:00:01.9 real = 0:00:02.0 mem = 482.9M
Iteration 16: Total net bbox = 9.541e+05 (4.54e+05 5.01e+05)
              Est.  stn bbox = 1.114e+06 (5.25e+05 5.88e+05)
              cpu = 0:00:00.5 real = 0:00:01.0 mem = 482.9M
Iteration 17: Total net bbox = 9.403e+05 (4.48e+05 4.92e+05)
              Est.  stn bbox = 1.097e+06 (5.18e+05 5.79e+05)
              cpu = 0:00:00.9 real = 0:00:00.0 mem = 482.9M
*** cost = 9.403e+05 (4.48e+05 4.92e+05) (cpu for global=0:00:25.6) real=0:00:25.0***
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, post-route mode.
Finished Phase I. CPU Time = 0:00:03.4, Real Time = 0:00:03.0
move report: preRPlace moves 6562 insts, mean move: 0.78 um, max move: 3.61 um
	max move on inst (tx_core/tx_crc/crcpkt2/U4129): (406.22, 114.00) --> (405.08, 116.47)
Placement tweakage begins.
wire length = 9.409e+05 = 4.480e+05 H + 4.929e+05 V
wire length = 8.989e+05 = 4.155e+05 H + 4.834e+05 V
Placement tweakage ends.
move report: wireLenOpt moves 41444 insts, mean move: 3.26 um, max move: 101.46 um
	max move on inst (tx_core/axi_master/U3014): (371.64, 422.75) --> (408.88, 486.97)
move report: rPlace moves 14863 insts, mean move: 0.22 um, max move: 4.75 um
	max move on inst (FILL_21250): (70.30, 173.28) --> (72.58, 175.75)
move report: overall moves 44605 insts, mean move: 3.10 um, max move: 101.46 um
	max move on inst (tx_core/axi_master/U3014): (371.64, 422.75) --> (408.88, 486.97)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =       101.46 um
  inst (tx_core/axi_master/U3014) with max move: (371.64, 422.75) -> (408.88, 486.97)
  mean    (X+Y) =         3.99 um
Total instances flipped for legalization: 3809
Total instances moved : 19598
*** cpu=0:00:09.5   mem=482.9M  mem(used)=0.0M***
Total net length = 9.080e+05 (4.201e+05 4.879e+05) (ext = 5.954e+04)
*** End of Placement (cpu=0:00:35.6, real=0:00:36.0, mem=482.9M) ***
Design contains fractional 20 cells.
default core: bins with density >  0.75 =    0 % ( 0 / 484 )
Starting IO pin assignment...
INFO: Assigning 49 floating pins in partition eth_core.
Completed IO pin assignment.
<CMD> sroute -noBlockPins -noPadRings
**WARN: (ENCSR-4053):	SRoute option "-noBlockPins" is obsolete and has been replaced by "-connect". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-connect".
**WARN: (ENCSR-4053):	SRoute option "-noPadRings" is obsolete and has been replaced by "-connect". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-connect".
*** Begin SPECIAL ROUTE on Sun Nov 13 17:35:49 2016 ***
Sroute/fcroute version 8.1.46 promoted on 02/17/2009.
SPECIAL ROUTE ran on directory: /home/010123386@SJSUAD.SJSU.EDU/Documents/MS_PROJECT_MEM_SEP/rtl/syn_ibloc/PnR_ethcore
SPECIAL ROUTE ran on machine: coe-ee-cad45.sjsuad.sjsu.edu (Linux 4.8.4-200.fc24.x86_64 x86_64 3.53Ghz)

Begin option processing ...
(from .sroute_24199.conf) srouteConnectPowerBump set to false
(from .sroute_24199.conf) routeSpecial set to true
(from .sroute_24199.conf) srouteConnectBlockPin set to false
(from .sroute_24199.conf) srouteFollowCorePinEnd set to 3
(from .sroute_24199.conf) srouteJogControl set to "preferWithChanges differentLayer"
(from .sroute_24199.conf) sroutePadPinAllPorts set to true
(from .sroute_24199.conf) sroutePreserveExistingRoutes set to true
End option processing: cpu: 0:00:00, real: 0:00:00, peak: 684.00 megs.

Reading DB technology information...
Finished reading DB technology information.
Reading floorplan and netlist information...
Finished reading floorplan and netlist information.
Read in 22 layers, 10 routing layers, 1 overlap layer
Read in 33 macros, 25 used
Read in 100736 components
  100736 core components: 0 unplaced, 97086 placed, 3650 fixed
Read in 1264 physical pins
  1264 physical pins: 0 unplaced, 1264 placed, 0 fixed
Read in 1145 nets
Read in 2 special nets, 2 routed
Read in 202736 terminals
Begin power routing ...
**WARN: (ENCSR-1256):	Net vdd does not have CORE class pad pins to be routed.
	Please check net list or port class.
Net vdd does not have AREAIO class pad pins to be routed.
	Please check net list or port class.
**WARN: (ENCSR-1256):	Net gnd does not have CORE class pad pins to be routed.
	Please check net list or port class.
Net gnd does not have AREAIO class pad pins to be routed.
	Please check net list or port class.
CPU time for FollowPin 0 seconds
CPU time for FollowPin 0 seconds
  Number of IO ports routed: 0
  Number of Stripe ports routed: 0
  Number of Core ports routed: 432
  Number of Followpin connections: 216
End power routing: cpu: 0:00:01, real: 0:00:01, peak: 684.00 megs.



 Begin updating DB with routing results ...
 Updating DB with 1264 io pins ...
 Updating DB with 20 via definition ...

sroute post-processing starts at Sun Nov 13 17:35:50 2016
The viaGen is rebuilding shadow vias for net gnd.
sroute post-processing ends at Sun Nov 13 17:35:50 2016

sroute post-processing starts at Sun Nov 13 17:35:50 2016
The viaGen is rebuilding shadow vias for net vdd.
sroute post-processing ends at Sun Nov 13 17:35:50 2016
sroute: Total CPU time used = 0:0:1
sroute: Total Real time used = 0:0:2
sroute: Total Memory used = 0.00 megs
sroute: Total Peak Memory used = 482.87 megs
<CMD> trialRoute
*** Starting trialRoute (mem=482.9M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1151175 1142380)
coreBox:    (40280 40280) (1111175 1102380)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1283, multi-gpins=3522, moved blk term=0/0

Phase 1a route (0:00:00.2 482.9M):
Est net length = 9.744e+05um = 4.620e+05H + 5.124e+05V
Usage: (16.5%H 17.7%V) = (5.411e+05um 8.100e+05um) = (563259 329103)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1b route (0:00:00.2 482.9M):
Usage: (16.5%H 17.7%V) = (5.401e+05um 8.100e+05um) = (562226 329102)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1c route (0:00:00.1 482.9M):
Usage: (16.4%H 17.7%V) = (5.398e+05um 8.101e+05um) = (561827 329111)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1d route (0:00:00.2 482.9M):
Usage: (16.4%H 17.7%V) = (5.398e+05um 8.101e+05um) = (561827 329111)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1e route (0:00:00.1 482.9M):
Usage: (16.4%H 17.7%V) = (5.398e+05um 8.101e+05um) = (561829 329117)
Overflow: 7 = 0 (0.00% H) + 7 (0.01% V)

Phase 1f route (0:00:00.1 482.9M):
Usage: (16.4%H 17.7%V) = (5.398e+05um 8.101e+05um) = (561831 329119)
Overflow: 7 = 0 (0.00% H) + 7 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	5	 0.00%
--------------------------------------
  0:	0	 0.00%	22	 0.02%
  1:	0	 0.00%	33	 0.02%
  2:	0	 0.00%	74	 0.05%
  3:	0	 0.00%	614	 0.44%
  4:	1	 0.00%	1353	 0.98%
  5:	0	 0.00%	1940	 1.40%
  6:	2	 0.00%	3865	 2.80%
  7:	14	 0.01%	6567	 4.75%
  8:	25	 0.02%	10010	 7.24%
  9:	58	 0.04%	14366	10.40%
 10:	96	 0.07%	18705	13.54%
 11:	788	 0.57%	21102	15.27%
 12:	2131	 1.54%	22787	16.49%
 13:	3650	 2.64%	16323	11.81%
 14:	1861	 1.35%	9183	 6.65%
 15:	3397	 2.46%	5804	 4.20%
 16:	4036	 2.92%	3190	 2.31%
 17:	6461	 4.68%	79	 0.06%
 18:	9713	 7.03%	0	 0.00%
 19:	11290	 8.17%	0	 0.00%
 20:	94648	68.50%	2148	 1.55%


Global route (cpu=0.9s real=1.0s 482.9M)
Phase 1l route (0:00:01.3 482.9M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (16.6%H 18.1%V) = (5.459e+05um 8.258e+05um) = (568100 335541)
Overflow: 8 = 0 (0.00% H) + 8 (0.01% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	6	 0.00%
--------------------------------------
  0:	0	 0.00%	26	 0.02%
  1:	0	 0.00%	40	 0.03%
  2:	0	 0.00%	123	 0.09%
  3:	0	 0.00%	771	 0.56%
  4:	1	 0.00%	1498	 1.08%
  5:	0	 0.00%	2215	 1.60%
  6:	4	 0.00%	4113	 2.98%
  7:	18	 0.01%	6685	 4.84%
  8:	30	 0.02%	9985	 7.23%
  9:	54	 0.04%	14181	10.26%
 10:	111	 0.08%	18442	13.35%
 11:	813	 0.59%	20940	15.16%
 12:	2165	 1.57%	22639	16.38%
 13:	3687	 2.67%	16174	11.71%
 14:	1955	 1.41%	9139	 6.61%
 15:	3518	 2.55%	5794	 4.19%
 16:	4138	 2.99%	3173	 2.30%
 17:	6598	 4.78%	78	 0.06%
 18:	9720	 7.03%	0	 0.00%
 19:	11459	 8.29%	0	 0.00%
 20:	93900	67.96%	2148	 1.55%



*** Completed Phase 1 route (0:00:02.4 482.9M) ***


Total length: 1.028e+06um, number of vias: 207360
M1(H) length: 5.834e+03um, number of vias: 98807
M2(V) length: 3.573e+05um, number of vias: 90384
M3(H) length: 4.557e+05um, number of vias: 15944
M4(V) length: 1.641e+05um, number of vias: 1231
M5(H) length: 1.688e+04um, number of vias: 788
M6(V) length: 2.825e+04um, number of vias: 92
M7(H) length: 3.628e+01um, number of vias: 60
M8(V) length: 8.822e+01um, number of vias: 34
M9(H) length: 3.815e+00um, number of vias: 20
M10(V) length: 3.330e+01um
*** Completed Phase 2 route (0:00:01.4 482.9M) ***

*** Finished all Phases (cpu=0:00:04.0 mem=482.9M) ***
Peak Memory Usage was 482.9M 
*** Finished trialRoute (cpu=0:00:04.2 mem=482.9M) ***

<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.1.placed
Extraction called for design 'eth_core' of instances=100736 and nets=33420 using extraction engine 'postRoute' at effort level 'low' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Detail RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
**WARN: (ENCEXT-3032):	Since cap. table file was not provided, it will be created internally with the following process info:
* Layer Id             : 1 - M1
      Thickness        : 0.6
      Min Width        : 0.065
      Layer Dielectric : 4.1
* Layer Id             : 2 - M2
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 3 - M3
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 4 - M4
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 5 - M5
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 6 - M6
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 7 - M7
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 8 - M8
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 9 - M9
      Thickness        : 0.6
      Min Width        : 0.8
      Layer Dielectric : 4.1
* Layer Id             : 10 - M10
      Thickness        : 1
      Min Width        : 0.8
      Layer Dielectric : 4.1
extractDetailRC Option : -outfile ./eth_core_xWcbHR_24199.rcdb.d -maxResLength 200  -basic -newAssumeMetFill
Assumed metal fill uses the following parameters:
              Active Spacing      Min. Width
                [microns]         [microns]
**WARN: (ENCEXT-3087):	Fill active spacing for layer M1 is not specified, it will use  0.600 microns.
  Layer M1        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M2 is not specified, it will use  0.600 microns.
  Layer M2        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M3 is not specified, it will use  0.600 microns.
  Layer M3        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M4 is not specified, it will use  0.600 microns.
  Layer M4        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M5 is not specified, it will use  0.600 microns.
  Layer M5        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M6 is not specified, it will use  0.600 microns.
  Layer M6        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M7 is not specified, it will use  0.600 microns.
  Layer M7        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M8 is not specified, it will use  0.600 microns.
  Layer M8        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M9 is not specified, it will use  0.600 microns.
  Layer M9        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M10 is not specified, it will use  0.600 microns.
  Layer M10        0.600             0.400 
RC Mode: Detail [Assume Metal Fill, LEF Resistances]
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Coupling Cap. Scaling Factor : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res. Scaling Factor    : 1.00000
Shrink Factor                : 1.00000
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 482.9M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for storing RC.
Extracted 10.0006% (CPU Time= 0:00:00.6  MEM= 482.9M)
Extracted 20.0006% (CPU Time= 0:00:00.7  MEM= 482.9M)
Extracted 30.0005% (CPU Time= 0:00:00.7  MEM= 482.9M)
Extracted 40.0004% (CPU Time= 0:00:01.0  MEM= 482.9M)
Extracted 50.0007% (CPU Time= 0:00:01.2  MEM= 482.9M)
Extracted 60.0006% (CPU Time= 0:00:01.6  MEM= 482.9M)
Extracted 70.0006% (CPU Time= 0:00:02.0  MEM= 482.9M)
Extracted 80.0005% (CPU Time= 0:00:02.5  MEM= 482.9M)
Extracted 90.0004% (CPU Time= 0:00:02.7  MEM= 482.9M)
Extracted 100% (CPU Time= 0:00:03.4  MEM= 482.9M)
Nr. Extracted Resistors     : 487181
Nr. Extracted Ground Cap.   : 519693
Nr. Extracted Coupling Cap. : 1270440
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Filtering XCap in 'relativeOnly' mode using values relative_c_threshold=0.03 and total_c_threshold=5fF.
Checking LVS Completed (CPU Time= 0:00:00.2  MEM= 482.9M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb_Filter.rcdb.d/header.seq' for storing RC.
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 32626 times net's RC data read were performed.
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Detail RC Extraction DONE (CPU Time: 0:00:04.6  Real Time: 0:00:08.0  MEM: 482.871M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.0, MEM = 482.9M, InitMEM = 482.9M)
Number of Loop : 0
Start delay calculation (mem=482.871M)...
delayCal using detail RC...
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
RC Database In Completed (CPU Time= 0:00:00.2  MEM= 482.9M)
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 32626 times net's RC data read were performed.
Delay calculation completed. (cpu=0:00:01.6 real=0:00:02.0 mem=482.871M 0)
*** CDM Built up (cpu=0:00:06.7  real=0:00:10.0  mem= 482.9M) ***
<CMD> setOptMode -mediumEffort -fixDRC -addPortAsNeeded
**WARN: (ENCTCM-70):	Option "-fixDRC" for command setOptMode is obsolete and has been replaced by "-fixDrc true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-fixDrc true".
**WARN: (ENCTCM-70):	Option "-addPortAsNeeded" for command setOptMode is obsolete and has been replaced by "-addPortAsNeeded true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-addPortAsNeeded true".
<CMD> optDesign -preCTS -drv
*info: Enabling Trial Route flow for DRV Fixing.
**optDesign ... cpu = 0:00:00, real = 0:00:00, mem = 482.9M **
*** Change effort level medium to high ***
setExtractRCMode -engine preRoute
**WARN: (ENCEXT-3493):	Extraction mode changed by calling extraction setup command 'setExtractRCMode'. Therefore, parasitic data in the tool generated as per previous mode is deleted. Call of extractRC/spefIn will generate/bring parasitic data in the tool as per current mode.
*** optDesign -preCTS ***
DRC Margin: user margin 0.0; extra margin 0.2
Setup Target Slack: user slack 0.0; extra slack 0.1
Hold Target Slack: user slack 0.0
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath false -clockPropagation forcedIdeal
*info: Setting setup target slack to 0.100
*info: Hold target slack is 0.000
*** CTE mode ***
*** Starting trialRoute (mem=482.9M) ***

There are 0 pin guide points passed to trialRoute.
Start to check current routing status for nets...
All nets are already routed correctly.
*** Finishing trialRoute (mem=482.9M) ***

Extraction called for design 'eth_core' of instances=100736 and nets=33420 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 482.871M)

------------------------------------------------------------
             Initial Summary                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -8.509  |
|           TNS (ns):|-22490.6 |
|    Violating Paths:|  6866   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   8743 (8743)    |   -0.495   |   8745 (8745)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.011%
------------------------------------------------------------
**optDesign ... cpu = 0:00:03, real = 0:00:03, mem = 482.9M **
*** Starting optimizing excluded clock nets MEM= 482.9M) ***
*info: No excluded clock nets to be optimized.
*** Completed optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 482.9M) ***
*info: Start fixing DRV (Mem = 482.87M) ...
*info: Options = -maxCap -maxTran -noMaxFanout -noSensitivity -backward -reduceBuffer -maxIter 2
*info: Start fixing DRV iteration 1 ...
*** Starting dpFixDRCViolation (482.9M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=482.9M) ***
*info: There are 2 candidate Buffer cells
*info: There are 4 candidate Inverter cells
Initializing placement sections/sites ...
Density before buffering = 0.600115
Start fixing design rules ... (0:00:00.4 482.9M)
Done fixing design rule (0:00:04.0 482.9M)

Summary:
750 buffers added on 749 nets (with 564 drivers resized)

Density after buffering = 0.605220
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 0.826 % ( 4 / 484 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:04.7, Real Time = 0:00:05.0
move report: preRPlace moves 2386 insts, mean move: 0.42 um, max move: 2.47 um
	max move on inst (tx_core/axi_master/FE_OFC109_memif_pdfifo2_f0_wdata_34_): (481.84, 393.11) --> (481.84, 395.58)
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 2386 insts, mean move: 0.42 um, max move: 2.47 um
	max move on inst (tx_core/axi_master/FE_OFC109_memif_pdfifo2_f0_wdata_34_): (481.84, 393.11) --> (481.84, 395.58)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         2.47 um
  inst (tx_core/axi_master/FE_OFC109_memif_pdfifo2_f0_wdata_34_) with max move: (481.84, 393.11) -> (481.84, 395.58)
  mean    (X+Y) =         0.42 um
Total instances moved : 1722
*** cpu=0:00:04.8   mem=482.9M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:09.5 482.9M)

*** Starting trialRoute (mem=482.9M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1151175 1142380)
coreBox:    (40280 40280) (1111175 1102380)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1282, multi-gpins=3525, moved blk term=0/0

Phase 1a route (0:00:00.3 482.9M):
Est net length = 9.758e+05um = 4.632e+05H + 5.127e+05V
Usage: (16.5%H 17.8%V) = (5.431e+05um 8.142e+05um) = (565349 330804)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1b route (0:00:00.2 482.9M):
Usage: (16.5%H 17.8%V) = (5.421e+05um 8.142e+05um) = (564319 330803)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1c route (0:00:00.1 482.9M):
Usage: (16.5%H 17.8%V) = (5.417e+05um 8.143e+05um) = (563908 330810)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1d route (0:00:00.2 482.9M):
Usage: (16.5%H 17.8%V) = (5.417e+05um 8.143e+05um) = (563908 330810)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1e route (0:00:00.1 482.9M):
Usage: (16.5%H 17.8%V) = (5.417e+05um 8.143e+05um) = (563910 330816)
Overflow: 7 = 0 (0.00% H) + 7 (0.01% V)

Phase 1f route (0:00:00.1 482.9M):
Usage: (16.5%H 17.8%V) = (5.417e+05um 8.143e+05um) = (563912 330818)
Overflow: 7 = 0 (0.00% H) + 7 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	5	 0.00%
--------------------------------------
  0:	0	 0.00%	21	 0.02%
  1:	0	 0.00%	39	 0.03%
  2:	0	 0.00%	83	 0.06%
  3:	0	 0.00%	617	 0.45%
  4:	0	 0.00%	1383	 1.00%
  5:	1	 0.00%	2000	 1.45%
  6:	2	 0.00%	3912	 2.83%
  7:	12	 0.01%	6626	 4.80%
  8:	36	 0.03%	10198	 7.38%
  9:	33	 0.02%	14399	10.42%
 10:	123	 0.09%	18523	13.41%
 11:	785	 0.57%	20981	15.18%
 12:	2130	 1.54%	22633	16.38%
 13:	3664	 2.65%	16260	11.77%
 14:	1809	 1.31%	9316	 6.74%
 15:	3426	 2.48%	5744	 4.16%
 16:	4091	 2.96%	3203	 2.32%
 17:	6563	 4.75%	79	 0.06%
 18:	9787	 7.08%	0	 0.00%
 19:	11267	 8.15%	0	 0.00%
 20:	94442	68.35%	2148	 1.55%


Global route (cpu=1.0s real=1.0s 482.9M)
Phase 1l route (0:00:01.4 482.9M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (16.7%H 18.1%V) = (5.479e+05um 8.299e+05um) = (570123 337212)
Overflow: 10 = 0 (0.00% H) + 10 (0.01% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	8	 0.01%
--------------------------------------
  0:	0	 0.00%	24	 0.02%
  1:	0	 0.00%	52	 0.04%
  2:	0	 0.00%	127	 0.09%
  3:	0	 0.00%	745	 0.54%
  4:	0	 0.00%	1550	 1.12%
  5:	1	 0.00%	2255	 1.63%
  6:	3	 0.00%	4183	 3.03%
  7:	15	 0.01%	6776	 4.90%
  8:	37	 0.03%	10113	 7.32%
  9:	39	 0.03%	14260	10.32%
 10:	135	 0.10%	18243	13.20%
 11:	811	 0.59%	20815	15.06%
 12:	2164	 1.57%	22490	16.28%
 13:	3697	 2.68%	16118	11.67%
 14:	1885	 1.36%	9268	 6.71%
 15:	3580	 2.59%	5732	 4.15%
 16:	4175	 3.02%	3185	 2.31%
 17:	6707	 4.85%	78	 0.06%
 18:	9815	 7.10%	0	 0.00%
 19:	11425	 8.27%	0	 0.00%
 20:	93682	67.80%	2148	 1.55%



*** Completed Phase 1 route (0:00:02.7 482.9M) ***


Total length: 1.031e+06um, number of vias: 210453
M1(H) length: 5.890e+03um, number of vias: 100307
M2(V) length: 3.571e+05um, number of vias: 92003
M3(H) length: 4.582e+05um, number of vias: 15905
M4(V) length: 1.656e+05um, number of vias: 1215
M5(H) length: 1.565e+04um, number of vias: 809
M6(V) length: 2.804e+04um, number of vias: 96
M7(H) length: 4.020e+01um, number of vias: 64
M8(V) length: 1.300e+02um, number of vias: 34
M9(H) length: 3.815e+00um, number of vias: 20
M10(V) length: 3.330e+01um
*** Completed Phase 2 route (0:00:01.5 482.9M) ***

*** Finished all Phases (cpu=0:00:04.3 mem=482.9M) ***
Peak Memory Usage was 482.9M 
*** Finished trialRoute (cpu=0:00:04.6 mem=482.9M) ***

Extraction called for design 'eth_core' of instances=101486 and nets=34170 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 482.871M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.0, MEM = 482.9M, InitMEM = 482.9M)
Number of Loop : 0
Start delay calculation (mem=482.871M)...
Delay calculation completed. (cpu=0:00:01.4 real=0:00:01.0 mem=482.871M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 482.9M) ***
*info: DRV Fixing Iteration 1.
*info: Remaining violations:
*info:   Max cap violations:    7864
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    8743
*info:   Prev Max tran violations:   0
*info: Start fixing DRV iteration 2 ...
*** Starting dpFixDRCViolation (482.9M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=482.9M) ***
Start fixing design rules ... (0:00:00.4 482.9M)
Done fixing design rule (0:00:00.7 482.9M)

Summary:
23 buffers added on 23 nets (with 9 drivers resized)

Density after buffering = 0.605367
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 1.03 % ( 5 / 484 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:03.7, Real Time = 0:00:04.0
move report: preRPlace moves 72 insts, mean move: 0.43 um, max move: 0.76 um
	max move on inst (tx_core/tx_crc/crcpkt1/FE_OFC863_n3475): (53.58, 444.98) --> (54.34, 444.98)
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 72 insts, mean move: 0.43 um, max move: 0.76 um
	max move on inst (tx_core/tx_crc/crcpkt1/FE_OFC863_n3475): (53.58, 444.98) --> (54.34, 444.98)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.76 um
  inst (tx_core/tx_crc/crcpkt1/FE_OFC863_n3475) with max move: (53.58, 444.98) -> (54.34, 444.98)
  mean    (X+Y) =         0.41 um
Total instances moved : 49
*** cpu=0:00:03.8   mem=482.9M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:05.2 482.9M)

*** Starting trialRoute (mem=482.9M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1151175 1142380)
coreBox:    (40280 40280) (1111175 1102380)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1282, multi-gpins=3526, moved blk term=0/0

Phase 1a route (0:00:00.2 482.9M):
Est net length = 9.759e+05um = 4.632e+05H + 5.127e+05V
Usage: (16.6%H 17.8%V) = (5.432e+05um 8.143e+05um) = (565404 330846)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1b route (0:00:00.2 482.9M):
Usage: (16.5%H 17.8%V) = (5.422e+05um 8.143e+05um) = (564375 330845)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1c route (0:00:00.2 482.9M):
Usage: (16.5%H 17.8%V) = (5.418e+05um 8.144e+05um) = (563962 330853)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1d route (0:00:00.2 482.9M):
Usage: (16.5%H 17.8%V) = (5.418e+05um 8.144e+05um) = (563962 330853)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1e route (0:00:00.1 482.9M):
Usage: (16.5%H 17.8%V) = (5.418e+05um 8.144e+05um) = (563964 330859)
Overflow: 7 = 0 (0.00% H) + 7 (0.01% V)

Phase 1f route (0:00:00.1 482.9M):
Usage: (16.5%H 17.8%V) = (5.418e+05um 8.144e+05um) = (563966 330861)
Overflow: 7 = 0 (0.00% H) + 7 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	5	 0.00%
--------------------------------------
  0:	0	 0.00%	21	 0.02%
  1:	0	 0.00%	39	 0.03%
  2:	0	 0.00%	82	 0.06%
  3:	0	 0.00%	619	 0.45%
  4:	0	 0.00%	1382	 1.00%
  5:	1	 0.00%	2007	 1.45%
  6:	2	 0.00%	3920	 2.84%
  7:	12	 0.01%	6621	 4.79%
  8:	36	 0.03%	10207	 7.39%
  9:	34	 0.02%	14401	10.42%
 10:	123	 0.09%	18496	13.39%
 11:	783	 0.57%	20995	15.19%
 12:	2130	 1.54%	22604	16.36%
 13:	3655	 2.65%	16276	11.78%
 14:	1817	 1.32%	9317	 6.74%
 15:	3429	 2.48%	5747	 4.16%
 16:	4085	 2.96%	3204	 2.32%
 17:	6561	 4.75%	79	 0.06%
 18:	9790	 7.09%	0	 0.00%
 19:	11269	 8.16%	0	 0.00%
 20:	94444	68.35%	2148	 1.55%


Global route (cpu=0.9s real=1.0s 482.9M)
Phase 1l route (0:00:01.4 482.9M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (16.7%H 18.2%V) = (5.479e+05um 8.300e+05um) = (570180 337263)
Overflow: 10 = 0 (0.00% H) + 10 (0.01% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	8	 0.01%
--------------------------------------
  0:	0	 0.00%	24	 0.02%
  1:	0	 0.00%	53	 0.04%
  2:	0	 0.00%	125	 0.09%
  3:	0	 0.00%	748	 0.54%
  4:	0	 0.00%	1548	 1.12%
  5:	1	 0.00%	2271	 1.64%
  6:	3	 0.00%	4185	 3.03%
  7:	15	 0.01%	6766	 4.90%
  8:	37	 0.03%	10121	 7.32%
  9:	42	 0.03%	14268	10.33%
 10:	134	 0.10%	18212	13.18%
 11:	808	 0.58%	20828	15.07%
 12:	2164	 1.57%	22461	16.26%
 13:	3690	 2.67%	16137	11.68%
 14:	1896	 1.37%	9268	 6.71%
 15:	3579	 2.59%	5735	 4.15%
 16:	4166	 3.02%	3186	 2.31%
 17:	6707	 4.85%	78	 0.06%
 18:	9818	 7.11%	0	 0.00%
 19:	11428	 8.27%	0	 0.00%
 20:	93683	67.80%	2148	 1.55%



*** Completed Phase 1 route (0:00:02.6 482.9M) ***


Total length: 1.031e+06um, number of vias: 210547
M1(H) length: 5.892e+03um, number of vias: 100353
M2(V) length: 3.568e+05um, number of vias: 92031
M3(H) length: 4.582e+05um, number of vias: 15916
M4(V) length: 1.657e+05um, number of vias: 1220
M5(H) length: 1.563e+04um, number of vias: 813
M6(V) length: 2.812e+04um, number of vias: 96
M7(H) length: 4.020e+01um, number of vias: 64
M8(V) length: 1.300e+02um, number of vias: 34
M9(H) length: 3.815e+00um, number of vias: 20
M10(V) length: 3.330e+01um
*** Completed Phase 2 route (0:00:01.4 482.9M) ***

*** Finished all Phases (cpu=0:00:04.2 mem=482.9M) ***
Peak Memory Usage was 482.9M 
*** Finished trialRoute (cpu=0:00:04.5 mem=482.9M) ***

Extraction called for design 'eth_core' of instances=101509 and nets=34193 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:01.0  MEM: 482.871M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 482.9M, InitMEM = 482.9M)
Number of Loop : 0
Start delay calculation (mem=482.871M)...
Delay calculation completed. (cpu=0:00:01.4 real=0:00:02.0 mem=482.871M 0)
*** CDM Built up (cpu=0:00:01.9  real=0:00:02.0  mem= 482.9M) ***
*info: DRV Fixing Iteration 2.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7864
*info:   Prev Max tran violations:   0
*info: Start fixing DRV while maintaining existing placement ...
*** Starting dpFixDRCViolation (482.9M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=482.9M) ***
Start fixing design rules ... (0:00:00.4 482.9M)
Done fixing design rule (0:00:00.9 482.9M)

Summary:
66 buffers added on 66 nets (with 0 driver resized)

Density after buffering = 0.606018
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 1.03 % ( 5 / 484 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:03.5, Real Time = 0:00:04.0
move report: preRPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 0 insts, mean move: 0.00 um, max move: 0.00 um
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.00 um
  mean    (X+Y) =         0.00 um
Total instances moved : 0
*** cpu=0:00:03.6   mem=482.9M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:05.2 482.9M)

*** Starting trialRoute (mem=482.9M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1151175 1142380)
coreBox:    (40280 40280) (1111175 1102380)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1282, multi-gpins=3526, moved blk term=0/0

Phase 1a route (0:00:00.2 482.9M):
Est net length = 9.760e+05um = 4.633e+05H + 5.127e+05V
Usage: (16.6%H 17.8%V) = (5.433e+05um 8.147e+05um) = (565554 330994)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1b route (0:00:00.2 482.9M):
Usage: (16.5%H 17.8%V) = (5.423e+05um 8.147e+05um) = (564524 330993)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1c route (0:00:00.2 482.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.147e+05um) = (564113 331005)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1d route (0:00:00.2 482.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.147e+05um) = (564113 331005)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1e route (0:00:00.1 482.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.147e+05um) = (564115 331011)
Overflow: 7 = 0 (0.00% H) + 7 (0.01% V)

Phase 1f route (0:00:00.1 482.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.148e+05um) = (564117 331013)
Overflow: 7 = 0 (0.00% H) + 7 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	5	 0.00%
--------------------------------------
  0:	0	 0.00%	21	 0.02%
  1:	0	 0.00%	39	 0.03%
  2:	0	 0.00%	74	 0.05%
  3:	0	 0.00%	621	 0.45%
  4:	0	 0.00%	1383	 1.00%
  5:	1	 0.00%	2018	 1.46%
  6:	2	 0.00%	3916	 2.83%
  7:	14	 0.01%	6614	 4.79%
  8:	38	 0.03%	10188	 7.37%
  9:	35	 0.03%	14429	10.44%
 10:	119	 0.09%	18554	13.43%
 11:	784	 0.57%	20980	15.18%
 12:	2135	 1.55%	22580	16.34%
 13:	3664	 2.65%	16302	11.80%
 14:	1810	 1.31%	9275	 6.71%
 15:	3425	 2.48%	5740	 4.15%
 16:	4109	 2.97%	3204	 2.32%
 17:	6585	 4.77%	79	 0.06%
 18:	9753	 7.06%	0	 0.00%
 19:	11239	 8.13%	0	 0.00%
 20:	94458	68.36%	2148	 1.55%


Global route (cpu=0.9s real=1.0s 482.9M)
Phase 1l route (0:00:01.4 482.9M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (16.7%H 18.2%V) = (5.481e+05um 8.304e+05um) = (570346 337429)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	7	 0.01%
--------------------------------------
  0:	0	 0.00%	24	 0.02%
  1:	0	 0.00%	53	 0.04%
  2:	0	 0.00%	117	 0.08%
  3:	0	 0.00%	749	 0.54%
  4:	0	 0.00%	1566	 1.13%
  5:	1	 0.00%	2258	 1.63%
  6:	3	 0.00%	4183	 3.03%
  7:	17	 0.01%	6763	 4.89%
  8:	42	 0.03%	10119	 7.32%
  9:	39	 0.03%	14279	10.33%
 10:	132	 0.10%	18282	13.23%
 11:	808	 0.58%	20805	15.06%
 12:	2170	 1.57%	22438	16.24%
 13:	3697	 2.68%	16163	11.70%
 14:	1888	 1.37%	9223	 6.68%
 15:	3577	 2.59%	5729	 4.15%
 16:	4198	 3.04%	3186	 2.31%
 17:	6722	 4.86%	78	 0.06%
 18:	9774	 7.07%	0	 0.00%
 19:	11409	 8.26%	0	 0.00%
 20:	93694	67.81%	2148	 1.55%



*** Completed Phase 1 route (0:00:02.6 482.9M) ***


Total length: 1.031e+06um, number of vias: 210826
M1(H) length: 5.906e+03um, number of vias: 100485
M2(V) length: 3.567e+05um, number of vias: 92131
M3(H) length: 4.579e+05um, number of vias: 15955
M4(V) length: 1.661e+05um, number of vias: 1231
M5(H) length: 1.601e+04um, number of vias: 814
M6(V) length: 2.797e+04um, number of vias: 94
M7(H) length: 3.992e+01um, number of vias: 62
M8(V) length: 1.044e+02um, number of vias: 34
M9(H) length: 3.815e+00um, number of vias: 20
M10(V) length: 3.330e+01um
*** Completed Phase 2 route (0:00:01.5 482.9M) ***

*** Finished all Phases (cpu=0:00:04.3 mem=482.9M) ***
Peak Memory Usage was 482.9M 
*** Finished trialRoute (cpu=0:00:04.6 mem=482.9M) ***

Extraction called for design 'eth_core' of instances=101575 and nets=34259 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 482.871M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 482.9M, InitMEM = 482.9M)
Number of Loop : 0
Start delay calculation (mem=482.871M)...
Delay calculation completed. (cpu=0:00:01.4 real=0:00:01.0 mem=482.871M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 482.9M) ***
*info: DRV Fixing Iteration 3.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info:
*info: Completed fixing DRV (CPU Time = 0:00:42, Mem = 482.87M).

------------------------------------------------------------
     Summary (cpu=0.69min real=0.72min mem=482.9M)                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -7.022  |
|           TNS (ns):|-11492.9 |
|    Violating Paths:|  5753   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.156   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.602%
Routing Overflow: 0.00% H and 0.01% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:46, real = 0:00:47, mem = 482.9M **
Reported timing to dir ./timingReports
**optDesign ... cpu = 0:00:46, real = 0:00:48, mem = 482.9M **

------------------------------------------------------------
     optDesign Final Summary                             
------------------------------------------------------------

+--------------------+---------+---------+---------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | in2reg  | reg2out | in2out  | clkgate |
+--------------------+---------+---------+---------+---------+---------+---------+
|           WNS (ns):| -7.022  | -5.796  | -7.022  | -1.561  | -2.357  |   N/A   |
|           TNS (ns):|-11492.9 | -6667.5 |-10951.5 |-147.262 |-220.544 |   N/A   |
|    Violating Paths:|  5753   |  3224   |  5057   |   234   |   249   |   N/A   |
|          All Paths:|  7370   |  3566   |  6377   |   522   |   341   |   N/A   |
+--------------------+---------+---------+---------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.156   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.602%
Routing Overflow: 0.00% H and 0.01% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:48, real = 0:00:51, mem = 482.9M **
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath false -clockPropagation forcedIdeal
*** Finished optDesign ***
<CMD_INTERNAL> initECO ./ipo1.txt
**ERROR: (ENCOPT-513):	'fixSetupViolation' is obsolete. Use the 'optDesign' command instead
<CMD_INTERNAL> endECO
<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.2.ipo1
<CMD> createClockTreeSpec -output encounter.cts -bufFootprint buf -invFootprint inv
Checking spec file integrity...

******* createClockTreeSpec begin *******
Options:  -output encounter.cts -bufFootprint buf -invFootprint inv 
**WARN: (ENCCK-7001):	Option '-bufFootprint' for command 'createClockTreeSpec' is obsolete. Use '-bufferList' option as an alternative. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future release, update your script to use '-bufferList'.
**WARN: (ENCCK-412):	-bufFootprint is ignored in createClockTreeSpec since in this release the buffer footprint name is automatically generated and provided to this command. If you want to specify a specific list of cells to be used by CTS, please use -bufferList option.
**WARN: (ENCCK-7001):	Option '-invFootprint' for command 'createClockTreeSpec' is obsolete. Use '-bufferList' option as an alternative. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future release, update your script to use '-bufferList'.
**WARN: (ENCCK-415):	-invFootprint is ignored in createClockTreeSpec while dbgGPSAutoCellFunction is set.
CTE Mode
New Clock Spec Generation is ON.
New CTE tracing is ON.
Handle Multi Mode on mixed active views: default_view_hold default_view_setup.
Total 1 clock roots are extracted.
createClockTreeSpec invoking cleanupSpecifyClockTree
Checking spec file integrity...

Reading clock tree spec file 'encounter.cts' ...

RouteType               : FE_CTS_DEFAULT
PreferredExtraSpace     : 1
Shield                  : NONE
PreferLayer             : M3 M4 
Est. Cap                : 0.208861(V=0.194667 H=0.223055) (ff/um) [0.00010443]
Est. Res                : 2.67857(V=1.78571 H=3.57143)(ohm/um) [0.00133929]
Est. Via Res            : 4(ohm) [8]
Est. Via Cap            : 0.0684459(ff)
M1(H) w=0.065(um) s=0.065(um) p=0.19(um) es=0.315(um) cap=0.219(ff/um) res=5.85(ohm/um) viaRes=0(ohm) viaCap=0(ff)
M2(V) w=0.07(um) s=0.075(um) p=0.19(um) es=0.31(um) cap=0.222(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0790658(ff)
M3(H) w=0.07(um) s=0.07(um) p=0.19(um) es=0.31(um) cap=0.223(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0797668(ff)
M4(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0684459(ff)
M5(H) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M6(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M7(H) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.0921863(ff)
M8(V) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.129341(ff)
M9(H) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.181(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.210491(ff)
M10(V) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.151(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.268112(ff)

RouteType               : FE_CTS_DEFAULT_LEAF
PreferredExtraSpace     : 1
Shield                  : NONE
PreferLayer             : M3 M4 
Est. Cap                : 0.208861(V=0.194667 H=0.223055) (ff/um) [0.00010443]
Est. Res                : 2.67857(V=1.78571 H=3.57143)(ohm/um) [0.00133929]
Est. Via Res            : 4(ohm) [8]
Est. Via Cap            : 0.0684459(ff)
M1(H) w=0.065(um) s=0.065(um) p=0.19(um) es=0.315(um) cap=0.219(ff/um) res=5.85(ohm/um) viaRes=0(ohm) viaCap=0(ff)
M2(V) w=0.07(um) s=0.075(um) p=0.19(um) es=0.31(um) cap=0.222(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0790658(ff)
M3(H) w=0.07(um) s=0.07(um) p=0.19(um) es=0.31(um) cap=0.223(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0797668(ff)
M4(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0684459(ff)
M5(H) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M6(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M7(H) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.0921863(ff)
M8(V) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.129341(ff)
M9(H) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.181(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.210491(ff)
M10(V) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.151(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.268112(ff)


****** AutoClockRootPin ******
AutoClockRootPin 1: clks.clk
# NoGating         NO
# SetDPinAsSync    NO
# SetIoPinAsSync   NO
# SetAsyncSRPinAsSync   NO
# SetTriStEnPinAsSync   NO
# SetBBoxPinAsSync   NO
# RouteClkNet      YES
# PostOpt          YES
# RouteType        FE_CTS_DEFAULT
# LeafRouteType    FE_CTS_DEFAULT_LEAF

***** !! NOTE !! *****

CTS treats D-pins and I/O pins as non-synchronous pins by default.
If you want to change the behavior, you need to use the SetDPinAsSync
or SetIoPinAsSync statement in the clock tree specification file,
or use the setCTSMode -traceDPinAsLeaf {true|false} command,
or use the setCTSMode -traceIoPinAsLeaf {true|false} command
before specifyClockTree command.

*** End specifyClockTree (cpu=0:00:00.0, real=0:00:00.0, mem=477.9M) ***
*** End createClockTreeSpec (cpu=0:00:00.1, real=0:00:00.0, mem=477.9M) ***
<CMD> specifyClockTree -clkfile encounter.cts
Redoing specifyClockTree ...
Checking spec file integrity...
**WARN: (ENCCK-3217):	'specifyClockTree -clkfile' is obsolete. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use 'specifyClockTree -file'.

Reading clock tree spec file 'encounter.cts' ...

**WARN: (ENCCK-661):	Clock clks.clk has multiple definitions in the clock tree specification file.

****** AutoClockRootPin ******
AutoClockRootPin 1: clks.clk
# NoGating         NO
# SetDPinAsSync    NO
# SetIoPinAsSync   NO
# SetAsyncSRPinAsSync   NO
# SetTriStEnPinAsSync   NO
# SetBBoxPinAsSync   NO
# RouteClkNet      YES
# PostOpt          YES
# RouteType        FE_CTS_DEFAULT
# LeafRouteType    FE_CTS_DEFAULT_LEAF

***** !! NOTE !! *****

CTS treats D-pins and I/O pins as non-synchronous pins by default.
If you want to change the behavior, you need to use the SetDPinAsSync
or SetIoPinAsSync statement in the clock tree specification file,
or use the setCTSMode -traceDPinAsLeaf {true|false} command,
or use the setCTSMode -traceIoPinAsLeaf {true|false} command
before specifyClockTree command.

*** End specifyClockTree (cpu=0:00:00.0, real=0:00:01.0, mem=477.9M) ***
<CMD> ckSynthesis -rguide cts.rguide -report report.ctsrpt -macromodel report.ctsmdl -fix_added_buffers
Redoing specifyClockTree ...
Checking spec file integrity...


ckSynthesis Option :  -rguide cts.rguide -report report.ctsrpt -macromodel report.ctsmdl -fix_added_buffers 
***** Allocate Placement Memory Finished (MEM: 477.867M)

Start to trace clock trees ...
*** Begin Tracer (mem=477.9M) ***
**WARN: (ENCCK-767):	Find clock buffer FECTS_clks_clk___L1_I0 in the clock tree.
**WARN: (ENCCK-209):	Clock clks.clk has been synthesized.
*** End Tracer (mem=477.9M) ***
**WARN: (ENCCK-719):	No clock tree has been synthesized.
*** End ckSynthesis (cpu=0:00:00.3, real=0:00:01.0, mem=477.9M) ***
<CMD> trialRoute -highEffort -guide cts.rguide
*** Starting trialRoute (mem=477.9M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -highEffort -handlePreroute -keepMarkedOptRoutes -guide cts.rguide -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1151175 1142380)
coreBox:    (40280 40280) (1111175 1102380)
There are 85 prerouted nets with extraSpace.

Phase 0 route (using Routing Guide) (0:00:00.0 477.9M):
Number of multi-gpin terms=1282, multi-gpins=3526, moved blk term=0/0

Phase 1a route (0:00:00.2 477.9M):
Est net length = 9.760e+05um = 4.633e+05H + 5.127e+05V
Usage: (16.6%H 17.8%V) = (5.433e+05um 8.147e+05um) = (565554 330994)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1b route (0:00:00.2 477.9M):
Usage: (16.5%H 17.8%V) = (5.423e+05um 8.147e+05um) = (564524 330993)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1c route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.147e+05um) = (564113 331005)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1d route (0:00:00.2 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.147e+05um) = (564113 331005)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1e route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.147e+05um) = (564115 331011)
Overflow: 7 = 0 (0.00% H) + 7 (0.01% V)

Phase 1f route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.148e+05um) = (564117 331013)
Overflow: 7 = 0 (0.00% H) + 7 (0.00% V)

Phase 1g route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.148e+05um) = (564119 331015)
Overflow: 6 = 0 (0.00% H) + 6 (0.00% V)

Phase 1h route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.148e+05um) = (564119 331015)
Overflow: 6 = 0 (0.00% H) + 6 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	4	 0.00%
--------------------------------------
  0:	0	 0.00%	22	 0.02%
  1:	0	 0.00%	39	 0.03%
  2:	0	 0.00%	74	 0.05%
  3:	0	 0.00%	621	 0.45%
  4:	0	 0.00%	1383	 1.00%
  5:	1	 0.00%	2018	 1.46%
  6:	2	 0.00%	3916	 2.83%
  7:	14	 0.01%	6614	 4.79%
  8:	38	 0.03%	10186	 7.37%
  9:	35	 0.03%	14432	10.45%
 10:	119	 0.09%	18557	13.43%
 11:	784	 0.57%	20976	15.18%
 12:	2135	 1.55%	22580	16.34%
 13:	3664	 2.65%	16302	11.80%
 14:	1810	 1.31%	9275	 6.71%
 15:	3425	 2.48%	5740	 4.15%
 16:	4109	 2.97%	3204	 2.32%
 17:	6585	 4.77%	79	 0.06%
 18:	9754	 7.06%	0	 0.00%
 19:	11238	 8.13%	0	 0.00%
 20:	94458	68.36%	2148	 1.55%


Global route (cpu=1.1s real=2.0s 477.9M)
Phase 1l route (0:00:01.4 477.9M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (16.7%H 18.2%V) = (5.481e+05um 8.305e+05um) = (570348 337431)
Overflow: 8 = 0 (0.00% H) + 8 (0.01% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	6	 0.00%
--------------------------------------
  0:	0	 0.00%	25	 0.02%
  1:	0	 0.00%	53	 0.04%
  2:	0	 0.00%	117	 0.08%
  3:	0	 0.00%	749	 0.54%
  4:	0	 0.00%	1566	 1.13%
  5:	1	 0.00%	2258	 1.63%
  6:	3	 0.00%	4183	 3.03%
  7:	17	 0.01%	6763	 4.89%
  8:	42	 0.03%	10117	 7.32%
  9:	39	 0.03%	14282	10.34%
 10:	132	 0.10%	18285	13.23%
 11:	808	 0.58%	20801	15.05%
 12:	2170	 1.57%	22438	16.24%
 13:	3697	 2.68%	16163	11.70%
 14:	1888	 1.37%	9223	 6.68%
 15:	3577	 2.59%	5729	 4.15%
 16:	4198	 3.04%	3186	 2.31%
 17:	6722	 4.86%	78	 0.06%
 18:	9775	 7.07%	0	 0.00%
 19:	11408	 8.26%	0	 0.00%
 20:	93694	67.81%	2148	 1.55%



*** Completed Phase 1 route (0:00:02.7 477.9M) ***


Total length: 1.031e+06um, number of vias: 210829
M1(H) length: 5.906e+03um, number of vias: 100485
M2(V) length: 3.566e+05um, number of vias: 92134
M3(H) length: 4.579e+05um, number of vias: 15955
M4(V) length: 1.661e+05um, number of vias: 1231
M5(H) length: 1.601e+04um, number of vias: 814
M6(V) length: 2.797e+04um, number of vias: 94
M7(H) length: 3.992e+01um, number of vias: 62
M8(V) length: 1.044e+02um, number of vias: 34
M9(H) length: 3.815e+00um, number of vias: 20
M10(V) length: 3.330e+01um
*** Completed Phase 2 route (0:00:01.4 477.9M) ***

*** Finished all Phases (cpu=0:00:04.4 mem=477.9M) ***
Peak Memory Usage was 477.9M 
*** Finished trialRoute (cpu=0:00:04.6 mem=477.9M) ***

<CMD> extractRC
Extraction called for design 'eth_core' of instances=101575 and nets=34259 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 477.867M)
<CMD> reportClockTree -postRoute -localSkew -report skew.post_troute_local.ctsrpt
Redoing specifyClockTree ...
Checking spec file integrity...


reportClockTree Option :  -postRoute -localSkew -report skew.post_troute_local.ctsrpt 
*** Look For Reconvergent Clock Component ***
The clock tree clks.clk has no reconvergent cell.

Searching for sequentially adjacent registers for clock tree 'clks.clk' ...
..........|..........|..........|........
Total number of adjacent register pair is 383144.

#
# Mode                : Setup
# Library Name        : gscl45nm
# Operating Condition : typical
# Process             : 1
# Voltage             : 1.1
# Temperature         : 27
#
********** Clock clks.clk Post-Route Timing Analysis **********
Nr. of Subtrees                : 1
Nr. of Sinks                   : 3566
Nr. of Buffer                  : 84
Nr. of Level (including gates) : 4
Root Rise Input Tran           : 120(ps)
Root Fall Input Tran           : 120(ps)
Max trig. edge delay at sink(R): tx_core/tx_crc/crcpkt1/data48_d_reg[42]/CLK 666.1(ps)
Min trig. edge delay at sink(R): tx_core/axi_master/link_datain_2_d_reg[23]/CLK 489.5(ps)


                                 (Actual)               (Required)          
Rise Phase Delay               : 489.5~666.1(ps)        0~10(ps)            
Fall Phase Delay               : 474.1~650.6(ps)        0~10(ps)            
Trig. Edge Skew                : 176.6(ps)              108(ps)             
Rise Skew                      : 176.6(ps)              
Fall Skew                      : 176.5(ps)              
Max. Rise Buffer Tran.         : 326.8(ps)              200(ps)             
Max. Fall Buffer Tran.         : 275.9(ps)              200(ps)             
Max. Rise Sink Tran.           : 338.5(ps)              200(ps)             
Max. Fall Sink Tran.           : 289.2(ps)              200(ps)             
Min. Rise Buffer Tran.         : 93.7(ps)               0(ps)               
Min. Fall Buffer Tran.         : 87.2(ps)               0(ps)               
Min. Rise Sink Tran.           : 180.2(ps)              0(ps)               
Min. Fall Sink Tran.           : 174.3(ps)              0(ps)               


**** Local Skew Report ****
Total number of adjacent register pair : 383144                 

Max. Local Skew                : 166.2(ps)              
  tx_core/tx_crc/crcpkt1/data56_d_reg[15]/CLK(R)->
  tx_core/tx_crc/crcpkt1/crcin40_d_reg[15]/CLK(R)


Generating Clock Analysis Report skew.post_troute_local.ctsrpt ....
Clock Analysis (CPU Time 0:00:01.2)


*** End reportClockTree (cpu=0:00:01.2, real=0:00:02.0, mem=477.9M) ***
<CMD> reportClockTree -postRoute -report report.post_troute.ctsrpt
Redoing specifyClockTree ...
Checking spec file integrity...


reportClockTree Option :  -postRoute -report report.post_troute.ctsrpt 
*** Look For Reconvergent Clock Component ***
The clock tree clks.clk has no reconvergent cell.

#
# Mode                : Setup
# Library Name        : gscl45nm
# Operating Condition : typical
# Process             : 1
# Voltage             : 1.1
# Temperature         : 27
#
********** Clock clks.clk Post-Route Timing Analysis **********
Nr. of Subtrees                : 1
Nr. of Sinks                   : 3566
Nr. of Buffer                  : 84
Nr. of Level (including gates) : 4
Root Rise Input Tran           : 120(ps)
Root Fall Input Tran           : 120(ps)
Max trig. edge delay at sink(R): tx_core/tx_crc/crcpkt1/data48_d_reg[42]/CLK 666.1(ps)
Min trig. edge delay at sink(R): tx_core/axi_master/link_datain_2_d_reg[23]/CLK 489.5(ps)


                                 (Actual)               (Required)          
Rise Phase Delay               : 489.5~666.1(ps)        0~10(ps)            
Fall Phase Delay               : 474.1~650.6(ps)        0~10(ps)            
Trig. Edge Skew                : 176.6(ps)              108(ps)             
Rise Skew                      : 176.6(ps)              
Fall Skew                      : 176.5(ps)              
Max. Rise Buffer Tran.         : 326.8(ps)              200(ps)             
Max. Fall Buffer Tran.         : 275.9(ps)              200(ps)             
Max. Rise Sink Tran.           : 338.5(ps)              200(ps)             
Max. Fall Sink Tran.           : 289.2(ps)              200(ps)             
Min. Rise Buffer Tran.         : 93.7(ps)               0(ps)               
Min. Fall Buffer Tran.         : 87.2(ps)               0(ps)               
Min. Rise Sink Tran.           : 180.2(ps)              0(ps)               
Min. Fall Sink Tran.           : 174.3(ps)              0(ps)               


Generating Clock Analysis Report report.post_troute.ctsrpt ....
Clock Analysis (CPU Time 0:00:00.1)


*** End reportClockTree (cpu=0:00:00.1, real=0:00:00.0, mem=477.9M) ***
<CMD> setAnalysisMode -setup -async -skew -autoDetectClockTree
**WARN: (ENCTCM-70):	Option "-setup" for command setAnalysisMode is obsolete and has been replaced by "-checkType setup". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-checkType setup".
**WARN: (ENCTCM-70):	Option "-async" for command setAnalysisMode is obsolete and has been replaced by "-asyncChecks async". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-asyncChecks async".
**WARN: (ENCTCM-70):	Option "-skew" for command setAnalysisMode is obsolete and has been replaced by "-skew true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-skew true".
**WARN: (ENCTCM-70):	Option "-autoDetectClockTree" for command setAnalysisMode is obsolete and has been replaced by "-clockPropagation autoDetectClockTree". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-clockPropagation autoDetectClockTree".
**WARN: (ENCSYC-1870):	setAnalysisMode -clockPropagation autoDetectClockTree not supported in CTE timing mode, mapping it to setAnalysisMode -clockPropagation sdcControl
{DETAILMESSAGE}<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.3.cts
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 477.9M, InitMEM = 477.9M)
Number of Loop : 0
Start delay calculation (mem=477.867M)...
Delay calculation completed. (cpu=0:00:01.4 real=0:00:01.0 mem=477.867M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 477.9M) ***
<CMD> setOptMode -highEffort -fixDrc -addPortAsNeeded -incrTrialRoute -restruct -topomap
**WARN: (ENCTCM-70):	Option "-fixDrc" for command setOptMode is obsolete and has been replaced by "-fixDrc true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-fixDrc true".
**WARN: (ENCTCM-70):	Option "-addPortAsNeeded" for command setOptMode is obsolete and has been replaced by "-addPortAsNeeded true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-addPortAsNeeded true".
**WARN: (ENCTCM-70):	Option "-restruct" for command setOptMode is obsolete and has been replaced by "-restruct true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-restruct true".
**WARN: (ENCTCM-70):	Option "-topomap" for command setOptMode is obsolete and has been replaced by "-topoMap true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-topoMap true".
**WARN: (ENCTCM-70):	Option "-highEffort" for command setOptMode is obsolete and has been replaced by "-effort high". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-effort high".
<CMD> optDesign -postCTS -drv
*info: Enabling Trial Route flow for DRV Fixing.
**optDesign ... cpu = 0:00:00, real = 0:00:00, mem = 477.9M **
*** optDesign -postCTS ***
DRC Margin: user margin 0.0; extra margin 0.2
Hold Target Slack: user slack 0.0
Setup Target Slack: user slack 0.0; extra slack 0.1
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath true
*info: Setting setup target slack to 0.100
*info: Hold target slack is 0.000
*** CTE mode ***
*** Starting trialRoute (mem=477.9M) ***

There are 0 pin guide points passed to trialRoute.
Start to check current routing status for nets...
All nets are already routed correctly.
*** Finishing trialRoute (mem=477.9M) ***


------------------------------------------------------------
             Initial Summary                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -10.588 |
|           TNS (ns):|-13734.5 |
|    Violating Paths:|  5593   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.156   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.602%
------------------------------------------------------------
**optDesign ... cpu = 0:00:03, real = 0:00:03, mem = 477.9M **
*** Starting optimizing excluded clock nets MEM= 477.9M) ***
*info: No excluded clock nets to be optimized.
*** Completed optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 477.9M) ***
*** Starting optimizing excluded clock nets MEM= 477.9M) ***
*info: No excluded clock nets to be optimized.
*** Completed optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 477.9M) ***
*info: Start fixing DRV (Mem = 477.87M) ...
*info: Options = -maxCap -maxTran -noMaxFanout -noSensitivity -backward -reduceBuffer -maxIter 2
*info: Start fixing DRV iteration 1 ...
*** Starting dpFixDRCViolation (477.9M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=477.9M) ***
*info: There are 2 candidate Buffer cells
*info: There are 4 candidate Inverter cells
Initializing placement sections/sites ...
Density before buffering = 0.606018
Start fixing design rules ... (0:00:00.4 477.9M)
Done fixing design rule (0:00:00.6 477.9M)

Summary:
1 buffer added on 1 net (with 0 driver resized)

Density after buffering = 0.606024
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 1.03 % ( 5 / 484 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:03.8, Real Time = 0:00:04.0
move report: preRPlace moves 3 insts, mean move: 0.38 um, max move: 0.38 um
	max move on inst (tx_core/tx_crc/crcpkt1/FE_OFC938_n3634): (160.36, 519.08) --> (160.74, 519.08)
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 3 insts, mean move: 0.38 um, max move: 0.38 um
	max move on inst (tx_core/tx_crc/crcpkt1/FE_OFC938_n3634): (160.36, 519.08) --> (160.74, 519.08)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.38 um
  inst (tx_core/tx_crc/crcpkt1/FE_OFC938_n3634) with max move: (160.36, 519.08) -> (160.74, 519.08)
  mean    (X+Y) =         0.38 um
Total instances moved : 3
*** cpu=0:00:03.9   mem=477.9M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:05.3 477.9M)

*** Starting trialRoute (mem=477.9M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1151175 1142380)
coreBox:    (40280 40280) (1111175 1102380)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1282, multi-gpins=3526, moved blk term=0/0

Phase 1a route (0:00:00.2 477.9M):
Est net length = 9.760e+05um = 4.633e+05H + 5.127e+05V
Usage: (16.6%H 17.8%V) = (5.433e+05um 8.147e+05um) = (565559 330997)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1b route (0:00:00.2 477.9M):
Usage: (16.5%H 17.8%V) = (5.423e+05um 8.147e+05um) = (564529 330996)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1c route (0:00:00.2 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.147e+05um) = (564118 331008)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1d route (0:00:00.2 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.147e+05um) = (564118 331008)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1e route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.148e+05um) = (564120 331014)
Overflow: 7 = 0 (0.00% H) + 7 (0.01% V)

Phase 1f route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.148e+05um) = (564122 331016)
Overflow: 7 = 0 (0.00% H) + 7 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	5	 0.00%
--------------------------------------
  0:	0	 0.00%	21	 0.02%
  1:	0	 0.00%	39	 0.03%
  2:	0	 0.00%	74	 0.05%
  3:	0	 0.00%	621	 0.45%
  4:	0	 0.00%	1383	 1.00%
  5:	1	 0.00%	2018	 1.46%
  6:	2	 0.00%	3916	 2.83%
  7:	14	 0.01%	6614	 4.79%
  8:	38	 0.03%	10188	 7.37%
  9:	35	 0.03%	14429	10.44%
 10:	119	 0.09%	18554	13.43%
 11:	784	 0.57%	20980	15.18%
 12:	2135	 1.55%	22581	16.34%
 13:	3664	 2.65%	16302	11.80%
 14:	1810	 1.31%	9275	 6.71%
 15:	3425	 2.48%	5739	 4.15%
 16:	4110	 2.97%	3204	 2.32%
 17:	6586	 4.77%	79	 0.06%
 18:	9752	 7.06%	0	 0.00%
 19:	11239	 8.13%	0	 0.00%
 20:	94457	68.36%	2148	 1.55%


Global route (cpu=0.9s real=2.0s 477.9M)
Phase 1l route (0:00:01.4 477.9M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (16.7%H 18.2%V) = (5.481e+05um 8.305e+05um) = (570356 337434)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	7	 0.01%
--------------------------------------
  0:	0	 0.00%	24	 0.02%
  1:	0	 0.00%	53	 0.04%
  2:	0	 0.00%	118	 0.09%
  3:	0	 0.00%	748	 0.54%
  4:	0	 0.00%	1564	 1.13%
  5:	1	 0.00%	2261	 1.64%
  6:	3	 0.00%	4183	 3.03%
  7:	17	 0.01%	6762	 4.89%
  8:	42	 0.03%	10119	 7.32%
  9:	39	 0.03%	14280	10.34%
 10:	132	 0.10%	18281	13.23%
 11:	808	 0.58%	20806	15.06%
 12:	2170	 1.57%	22437	16.24%
 13:	3697	 2.68%	16164	11.70%
 14:	1888	 1.37%	9223	 6.68%
 15:	3576	 2.59%	5728	 4.15%
 16:	4201	 3.04%	3186	 2.31%
 17:	6725	 4.87%	78	 0.06%
 18:	9771	 7.07%	0	 0.00%
 19:	11408	 8.26%	0	 0.00%
 20:	93693	67.81%	2148	 1.55%



*** Completed Phase 1 route (0:00:02.6 477.9M) ***


Total length: 1.031e+06um, number of vias: 210839
M1(H) length: 5.906e+03um, number of vias: 100487
M2(V) length: 3.566e+05um, number of vias: 92139
M3(H) length: 4.579e+05um, number of vias: 15954
M4(V) length: 1.662e+05um, number of vias: 1233
M5(H) length: 1.602e+04um, number of vias: 816
M6(V) length: 2.795e+04um, number of vias: 94
M7(H) length: 3.992e+01um, number of vias: 62
M8(V) length: 1.044e+02um, number of vias: 34
M9(H) length: 3.815e+00um, number of vias: 20
M10(V) length: 3.330e+01um
*** Completed Phase 2 route (0:00:01.4 477.9M) ***

*** Finished all Phases (cpu=0:00:04.2 mem=477.9M) ***
Peak Memory Usage was 477.9M 
*** Finished trialRoute (cpu=0:00:04.6 mem=477.9M) ***

Extraction called for design 'eth_core' of instances=101576 and nets=34260 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:00.0  MEM: 477.867M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 477.9M, InitMEM = 477.9M)
Number of Loop : 0
Start delay calculation (mem=477.867M)...
Delay calculation completed. (cpu=0:00:01.4 real=0:00:01.0 mem=477.867M 0)
*** CDM Built up (cpu=0:00:01.9  real=0:00:02.0  mem= 477.9M) ***
*info: DRV Fixing Iteration 1.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info: early stop due to unchanged DRVs
*info: Start fixing DRV while maintaining existing placement ...
*** Starting dpFixDRCViolation (477.9M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=477.9M) ***
Start fixing design rules ... (0:00:00.4 477.9M)
Done fixing design rule (0:00:01.0 477.9M)

Summary:
6 buffers added on 6 nets (with 0 driver resized)

Density after buffering = 0.606084
Design contains fractional 20 cells.
default core: bins with density >  0.75 = 1.03 % ( 5 / 484 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:03.8, Real Time = 0:00:04.0
move report: preRPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 0 insts, mean move: 0.00 um, max move: 0.00 um
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.00 um
  mean    (X+Y) =         0.00 um
Total instances moved : 0
*** cpu=0:00:03.9   mem=477.9M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:05.6 477.9M)

*** Starting trialRoute (mem=477.9M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1151175 1142380)
coreBox:    (40280 40280) (1111175 1102380)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1282, multi-gpins=3526, moved blk term=0/0

Phase 1a route (0:00:00.2 477.9M):
Est net length = 9.760e+05um = 4.633e+05H + 5.127e+05V
Usage: (16.6%H 17.8%V) = (5.433e+05um 8.147e+05um) = (565569 331011)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1b route (0:00:00.2 477.9M):
Usage: (16.5%H 17.8%V) = (5.423e+05um 8.147e+05um) = (564539 331010)
Overflow: 11 = 0 (0.00% H) + 11 (0.01% V)

Phase 1c route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.148e+05um) = (564128 331022)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1d route (0:00:00.2 477.9M):
Usage: (16.5%H 17.8%V) = (5.419e+05um 8.148e+05um) = (564128 331022)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Phase 1e route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.420e+05um 8.148e+05um) = (564130 331028)
Overflow: 7 = 0 (0.00% H) + 7 (0.01% V)

Phase 1f route (0:00:00.1 477.9M):
Usage: (16.5%H 17.8%V) = (5.420e+05um 8.148e+05um) = (564132 331030)
Overflow: 7 = 0 (0.00% H) + 7 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	5	 0.00%
--------------------------------------
  0:	0	 0.00%	21	 0.02%
  1:	0	 0.00%	39	 0.03%
  2:	0	 0.00%	74	 0.05%
  3:	0	 0.00%	621	 0.45%
  4:	0	 0.00%	1383	 1.00%
  5:	1	 0.00%	2018	 1.46%
  6:	2	 0.00%	3918	 2.84%
  7:	15	 0.01%	6615	 4.79%
  8:	39	 0.03%	10187	 7.37%
  9:	36	 0.03%	14430	10.44%
 10:	120	 0.09%	18558	13.43%
 11:	780	 0.56%	20970	15.18%
 12:	2136	 1.55%	22584	16.34%
 13:	3659	 2.65%	16302	11.80%
 14:	1801	 1.30%	9275	 6.71%
 15:	3419	 2.47%	5739	 4.15%
 16:	4124	 2.98%	3204	 2.32%
 17:	6599	 4.78%	79	 0.06%
 18:	9760	 7.06%	0	 0.00%
 19:	11208	 8.11%	0	 0.00%
 20:	94472	68.37%	2148	 1.55%


Global route (cpu=0.9s real=1.0s 477.9M)
Phase 1l route (0:00:01.3 477.9M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (16.7%H 18.2%V) = (5.481e+05um 8.305e+05um) = (570362 337445)
Overflow: 9 = 0 (0.00% H) + 9 (0.01% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -3:	0	 0.00%	1	 0.00%
 -1:	0	 0.00%	7	 0.01%
--------------------------------------
  0:	0	 0.00%	24	 0.02%
  1:	0	 0.00%	53	 0.04%
  2:	0	 0.00%	118	 0.09%
  3:	0	 0.00%	747	 0.54%
  4:	0	 0.00%	1563	 1.13%
  5:	1	 0.00%	2263	 1.64%
  6:	3	 0.00%	4185	 3.03%
  7:	18	 0.01%	6763	 4.89%
  8:	43	 0.03%	10120	 7.32%
  9:	40	 0.03%	14278	10.33%
 10:	132	 0.10%	18286	13.23%
 11:	807	 0.58%	20795	15.05%
 12:	2168	 1.57%	22441	16.24%
 13:	3691	 2.67%	16164	11.70%
 14:	1884	 1.36%	9223	 6.68%
 15:	3566	 2.58%	5728	 4.15%
 16:	4216	 3.05%	3186	 2.31%
 17:	6735	 4.87%	78	 0.06%
 18:	9786	 7.08%	0	 0.00%
 19:	11370	 8.23%	0	 0.00%
 20:	93711	67.82%	2148	 1.55%



*** Completed Phase 1 route (0:00:02.6 477.9M) ***


Total length: 1.031e+06um, number of vias: 210853
M1(H) length: 5.907e+03um, number of vias: 100499
M2(V) length: 3.566e+05um, number of vias: 92146
M3(H) length: 4.580e+05um, number of vias: 15953
M4(V) length: 1.661e+05um, number of vias: 1229
M5(H) length: 1.588e+04um, number of vias: 816
M6(V) length: 2.810e+04um, number of vias: 94
M7(H) length: 3.992e+01um, number of vias: 62
M8(V) length: 1.044e+02um, number of vias: 34
M9(H) length: 3.815e+00um, number of vias: 20
M10(V) length: 3.330e+01um
*** Completed Phase 2 route (0:00:01.4 477.9M) ***

*** Finished all Phases (cpu=0:00:04.2 mem=477.9M) ***
Peak Memory Usage was 477.9M 
*** Finished trialRoute (cpu=0:00:04.5 mem=477.9M) ***

Extraction called for design 'eth_core' of instances=101582 and nets=34266 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:01.0  MEM: 477.867M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 477.9M, InitMEM = 477.9M)
Number of Loop : 0
Start delay calculation (mem=477.867M)...
Delay calculation completed. (cpu=0:00:01.4 real=0:00:02.0 mem=477.867M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 477.9M) ***
*info: DRV Fixing Iteration 2.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info:
*info: Completed fixing DRV (CPU Time = 0:00:25, Mem = 477.87M).

------------------------------------------------------------
     Summary (cpu=0.42min real=0.43min mem=477.9M)                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -10.587 |
|           TNS (ns):|-13730.4 |
|    Violating Paths:|  5593   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.156   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.608%
Routing Overflow: 0.00% H and 0.01% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:30, real = 0:00:30, mem = 477.9M **
Reported timing to dir ./timingReports
**optDesign ... cpu = 0:00:30, real = 0:00:30, mem = 477.9M **

------------------------------------------------------------
     optDesign Final Summary                             
------------------------------------------------------------

+--------------------+---------+---------+---------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | in2reg  | reg2out | in2out  | clkgate |
+--------------------+---------+---------+---------+---------+---------+---------+
|           WNS (ns):| -10.587 | -10.022 | -10.587 | -2.141  | -2.355  |   N/A   |
|           TNS (ns):|-13730.4 | -7830.1 |-12966.3 |-308.342 |-220.761 |   N/A   |
|    Violating Paths:|  5593   |  3265   |  4792   |   290   |   249   |   N/A   |
|          All Paths:|  7370   |  3566   |  6377   |   522   |   341   |   N/A   |
+--------------------+---------+---------+---------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.156   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.608%
Routing Overflow: 0.00% H and 0.01% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:31, real = 0:00:33, mem = 477.9M **
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath true
*** Finished optDesign ***
<CMD_INTERNAL> initECO ipo2.txt
<CMD> setExtractRCMode -default -assumeMetFill
**WARN: (ENCEXT-1086):	Option '-default' is obsolete. Use '-engine preRoute' to set extraction engine. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script and configuration file to use recommended convention.
**WARN: (ENCEXT-3493):	Extraction mode changed by calling extraction setup command 'setExtractRCMode'. Therefore, parasitic data in the tool generated as per previous mode is deleted. Call of extractRC/spefIn will generate/bring parasitic data in the tool as per current mode.
<CMD> extractRC
Extraction called for design 'eth_core' of instances=101582 and nets=34266 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.1  Real Time: 0:00:00.0  MEM: 477.867M)
**ERROR: (ENCOPT-513):	'fixSetupViolation' is obsolete. Use the 'optDesign' command instead
<CMD> setExtractRCMode -detail -assumeMetFill
**WARN: (ENCEXT-1082):	Option '-detail' is obsolete. Use '-engine postRoute [-effortLevel low]' to set extraction engine, which is based on recommended convention '-engine postRoute [-effortLevel <low|medium|high|signoff>]'. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script and configuration file to use recommended convention.
**WARN: (ENCEXT-3493):	Extraction mode changed by calling extraction setup command 'setExtractRCMode'. Therefore, parasitic data in the tool generated as per previous mode is deleted. Call of extractRC/spefIn will generate/bring parasitic data in the tool as per current mode.
**WARN: (ENCEXT-3410):	Option -assumeMetalFill is recommended only in default extraction mode. It will use the basic cap table instead of extnded cap table in detail or TQRC/IQRC mode.
<CMD> extractRC
Extraction called for design 'eth_core' of instances=101582 and nets=34266 using extraction engine 'postRoute' at effort level 'low' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Detail RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
**WARN: (ENCEXT-3032):	Since cap. table file was not provided, it will be created internally with the following process info:
* Layer Id             : 1 - M1
      Thickness        : 0.6
      Min Width        : 0.065
      Layer Dielectric : 4.1
* Layer Id             : 2 - M2
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 3 - M3
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 4 - M4
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 5 - M5
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 6 - M6
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 7 - M7
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 8 - M8
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 9 - M9
      Thickness        : 0.6
      Min Width        : 0.8
      Layer Dielectric : 4.1
* Layer Id             : 10 - M10
      Thickness        : 1
      Min Width        : 0.8
      Layer Dielectric : 4.1
extractDetailRC Option : -outfile ./eth_core_xWcbHR_24199.rcdb.d -maxResLength 200  -basic -newAssumeMetFill
Assumed metal fill uses the following parameters:
              Active Spacing      Min. Width
                [microns]         [microns]
**WARN: (ENCEXT-3087):	Fill active spacing for layer M1 is not specified, it will use  0.600 microns.
  Layer M1        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M2 is not specified, it will use  0.600 microns.
  Layer M2        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M3 is not specified, it will use  0.600 microns.
  Layer M3        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M4 is not specified, it will use  0.600 microns.
  Layer M4        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M5 is not specified, it will use  0.600 microns.
  Layer M5        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M6 is not specified, it will use  0.600 microns.
  Layer M6        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M7 is not specified, it will use  0.600 microns.
  Layer M7        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M8 is not specified, it will use  0.600 microns.
  Layer M8        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M9 is not specified, it will use  0.600 microns.
  Layer M9        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M10 is not specified, it will use  0.600 microns.
  Layer M10        0.600             0.400 
RC Mode: Detail [Assume Metal Fill, LEF Resistances]
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Coupling Cap. Scaling Factor : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res. Scaling Factor    : 1.00000
Shrink Factor                : 1.00000
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 477.9M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for storing RC.
Extracted 10.0004% (CPU Time= 0:00:00.6  MEM= 477.9M)
Extracted 20.0004% (CPU Time= 0:00:00.7  MEM= 477.9M)
Extracted 30.0005% (CPU Time= 0:00:00.8  MEM= 477.9M)
Extracted 40.0005% (CPU Time= 0:00:01.1  MEM= 477.9M)
Extracted 50.0005% (CPU Time= 0:00:01.3  MEM= 477.9M)
Extracted 60.0006% (CPU Time= 0:00:01.8  MEM= 477.9M)
Extracted 70.0006% (CPU Time= 0:00:02.2  MEM= 477.9M)
Extracted 80.0006% (CPU Time= 0:00:02.8  MEM= 477.9M)
Extracted 90.0007% (CPU Time= 0:00:03.0  MEM= 477.9M)
Extracted 100% (CPU Time= 0:00:03.7  MEM= 477.9M)
Nr. Extracted Resistors     : 494581
Nr. Extracted Ground Cap.   : 527919
Nr. Extracted Coupling Cap. : 1284680
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Filtering XCap in 'relativeOnly' mode using values relative_c_threshold=0.03 and total_c_threshold=5fF.
Checking LVS Completed (CPU Time= 0:00:00.2  MEM= 477.9M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb_Filter.rcdb.d/header.seq' for storing RC.
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 33472 times net's RC data read were performed.
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Detail RC Extraction DONE (CPU Time: 0:00:04.9  Real Time: 0:00:09.0  MEM: 477.867M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 477.9M, InitMEM = 477.9M)
Number of Loop : 0
Start delay calculation (mem=477.867M)...
delayCal using detail RC...
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
RC Database In Completed (CPU Time= 0:00:00.3  MEM= 477.9M)
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 33472 times net's RC data read were performed.
Delay calculation completed. (cpu=0:00:01.6 real=0:00:02.0 mem=477.867M 0)
*** CDM Built up (cpu=0:00:02.1  real=0:00:02.0  mem= 477.9M) ***
<CMD_INTERNAL> endECO
<CMD_INTERNAL> cleanupECO
<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.4.ipo2
<CMD> addFiller -cell FILL -prefix FILL -fillBoundary
Design contains fractional 20 cells.
*INFO: Adding fillers to top-module.
*INFO:   Added 113500 filler insts (cell FILL / prefix FILL).
*INFO: Total 113500 filler insts added - prefix FILL (CPU: 0:00:00.5).
*** Applied 6 GNC rules (cpu = 0:00:00.0)
*INFO: Checking for DRC violations on added fillers.
*INFO: Iteration 0-#1, Found 0 DRC violation  (real: 0:00:03.0).
*INFO: Adding fillers to top-module.
*INFO:   Added 0 filler inst of any cell-type.
*** Applied 6 GNC rules (cpu = 0:00:00.0)
*INFO: End DRC Checks. (real: 0:00:03.0 ).
<CMD> globalNetConnect vdd -type tiehi
<CMD> globalNetConnect vdd -type net -net 1'b1
**ERROR: (ENCDB-1225):	Cannot find net '1'b1' in the design.
<CMD> globalNetConnect vdd -type pgpin -pin vdd -override
<CMD> globalNetConnect gnd -type tielo
<CMD> globalNetConnect gnd -type net -net 1'b0
**ERROR: (ENCDB-1225):	Cannot find net '1'b0' in the design.
<CMD> globalNetConnect gnd -type pgpin -pin gnd -override
<CMD> globalDetailRoute

globalDetailRoute

#WARNING (NRIF-16) Can not execute the command because the total number of fails (1) exceeds or equals to the limit (1).If you want to continue executing the command, increase the limit by 'setNanoRouteMode -envNumberFailLimit 11'.
<CMD> setNanoRouteMode -envNumberFailLimit 11
<CMD> loadConfig ./encounter.conf
**WARN: (ENCSYT-3033):	Cannot loadConfig after commitConfig.  This command is skipped.
<CMD> floorPlan -r 1.0 0.6 20 20 20 20
Adjusting Core to Left to: 20.1400. Core to Bottom to: 20.1400.
Horizontal Layer M1 offset = 190 (guessed)
Vertical Layer M2 offset = 190 (guessed)
Suggestion: specify LAYER OFFSET in LEF file
Reason: hard to extract LAYER OFFSET from standard cells
Flip instance FECTS_clks_clk___L4_I68 to match row orient.
Flip instance FECTS_clks_clk___L4_I63 to match row orient.
Flip instance FECTS_clks_clk___L4_I62 to match row orient.
Flip instance FECTS_clks_clk___L4_I60 to match row orient.
Flip instance FECTS_clks_clk___L4_I59 to match row orient.
Flip instance FECTS_clks_clk___L4_I55 to match row orient.
Flip instance FECTS_clks_clk___L4_I54 to match row orient.
Flip instance FECTS_clks_clk___L4_I51 to match row orient.
Flip instance FECTS_clks_clk___L4_I50 to match row orient.
Flip instance FECTS_clks_clk___L4_I48 to match row orient.
Flip instance FECTS_clks_clk___L4_I47 to match row orient.
Flip instance FECTS_clks_clk___L4_I44 to match row orient.
Flip instance FECTS_clks_clk___L4_I42 to match row orient.
Flip instance FECTS_clks_clk___L4_I40 to match row orient.
Flip instance FECTS_clks_clk___L4_I35 to match row orient.
Flip instance FECTS_clks_clk___L4_I34 to match row orient.
Flip instance FECTS_clks_clk___L4_I32 to match row orient.
Flip instance FECTS_clks_clk___L4_I31 to match row orient.
Flip instance FECTS_clks_clk___L4_I30 to match row orient.
Flip instance FECTS_clks_clk___L4_I29 to match row orient.
Flip instance FECTS_clks_clk___L4_I28 to match row orient.
Flip instance FECTS_clks_clk___L4_I26 to match row orient.
Flip instance FECTS_clks_clk___L4_I24 to match row orient.
Flip instance FECTS_clks_clk___L4_I22 to match row orient.
Flip instance FECTS_clks_clk___L4_I20 to match row orient.
Flip instance FECTS_clks_clk___L4_I19 to match row orient.
Flip instance FECTS_clks_clk___L4_I18 to match row orient.
Flip instance FECTS_clks_clk___L4_I17 to match row orient.
Flip instance FECTS_clks_clk___L4_I14 to match row orient.
Flip instance FECTS_clks_clk___L4_I10 to match row orient.
Flip instance FECTS_clks_clk___L4_I9 to match row orient.
Flip instance FECTS_clks_clk___L4_I7 to match row orient.
Flip instance FECTS_clks_clk___L4_I5 to match row orient.
Flip instance FECTS_clks_clk___L4_I4 to match row orient.
Flip instance FECTS_clks_clk___L4_I3 to match row orient.
Flip instance FECTS_clks_clk___L4_I0 to match row orient.
Flip instance FECTS_clks_clk___L3_I6 to match row orient.
Flip instance FECTS_clks_clk___L3_I5 to match row orient.
Flip instance FECTS_clks_clk___L2_I4 to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[28] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[24] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[23] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[20] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[17] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[10] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/link_datain_0_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[28] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[24] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[23] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[20] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[15] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[13] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/link_datain_1_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[17] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[15] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[10] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/link_datain_2_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/cur_chstate_0_reg[1] to match row orient.
Flip instance tx_core/axi_master/arburst_d_reg to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr1_d_reg[last_bvalid][2] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr1_d_reg[last_bvalid][4] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[10] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/haddr1_d_reg[28] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr0_d_reg[last_bvalid][0] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr0_d_reg[last_bvalid][2] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr0_d_reg[last_bvalid][6] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr0_d_reg[last_bvalid][7] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[10] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[13] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[14] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[28] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/haddr0_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr2_d_reg[last_bvalid][1] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr2_d_reg[last_bvalid][2] to match row orient.
Flip instance tx_core/axi_master/ctrl_hdr2_d_reg[last_bvalid][5] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[14] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[15] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[17] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[21] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[24] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/haddr2_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/w_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/r_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pktctrl0_fifo/r_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_2_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_2_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_1_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_1_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_1_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_0_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_0_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/pfifo_frag_cnt_0_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/depth_left_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/w_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/w_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/r_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/r_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/w_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt0_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[6] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[8] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[9] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[10] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[19] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[23] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[33] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[34] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[37] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[39] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[40] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[42] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[43] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[45] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[46] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[48] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[49] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[51] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[52] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[55] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[56] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[57] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[59] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_0_d_reg[60] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl0_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl0_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl2_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[8] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[11] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[13] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[14] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[20] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[28] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[32] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[33] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[35] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[36] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[39] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[40] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[47] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[48] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[50] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[51] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[52] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[56] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[59] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[60] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[61] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[62] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_2_d_reg[63] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[5] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[8] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[10] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[12] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[15] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[16] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[17] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[18] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[22] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[23] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[25] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[26] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[27] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[28] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[29] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[30] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[31] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[34] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[35] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[36] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[37] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[40] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[45] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[50] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[51] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[53] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[57] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[58] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[59] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[60] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[61] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_1_d_reg[63] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl1_d_reg[0] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl1_d_reg[1] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl1_d_reg[2] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl1_d_reg[3] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl1_d_reg[4] to match row orient.
Flip instance tx_core/axi_master/pfifo_datain_ctrl1_d_reg[7] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/depth_left_reg[4] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/w_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_master/pkt1_fifo/r_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/depth_left_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/depth_left_reg[4] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/w_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl2_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/depth_left_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/depth_left_reg[2] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/depth_left_reg[4] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/w_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/w_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/w_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/r_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/r_ptr_reg[5] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_master/pkt2_fifo/depth_left_reg[6] to match row orient.
Flip instance tx_core/axi_master/pktctrl1_fifo/depth_left_reg[6] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][0] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][1] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][4] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][6] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][9] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][10] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][12] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][13] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][14] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][15] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][18] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][21] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][22] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][26] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[1][28] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][0] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][2] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][4] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][8] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][9] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][10] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][15] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][17] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][19] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][20] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][21] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][23] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][24] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][26] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][27] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][28] to match row orient.
Flip instance tx_core/axi_master/link_addr_0_fifo/data_mem_reg[0][29] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][0] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][3] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][4] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][5] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][9] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][11] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][13] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][14] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][19] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][22] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][23] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][24] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][28] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[1][31] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][1] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][3] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][4] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][7] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][8] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][9] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][10] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][11] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][12] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][14] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][20] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][21] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][22] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][23] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][27] to match row orient.
Flip instance tx_core/axi_master/link_addr_2_fifo/data_mem_reg[0][29] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][1] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][2] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][3] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][5] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][7] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][8] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][9] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][10] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][14] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][15] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][16] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][19] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][20] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][22] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][24] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][25] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][26] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][27] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[1][30] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][0] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][1] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][3] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][4] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][6] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][7] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][8] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][11] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][12] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][13] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][20] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][21] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][22] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][24] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][25] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][27] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][29] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][30] to match row orient.
Flip instance tx_core/axi_master/link_addr_1_fifo/data_mem_reg[0][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][0][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][1][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][2][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][3][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][4][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][5][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][6][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][7][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][20] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][8][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][9][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][10][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][15] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][11][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][12][ctrl_data][last_bvalid][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][13][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][26] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][24] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][23] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][18] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][14] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][13] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][12] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][11] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][8] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][7] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][6] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][3] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][head_ptr][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][ctrl_data][last_bvalid][5] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][ctrl_data][last_bvalid][4] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][14][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][31] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][30] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][29] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][28] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][27] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][25] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][22] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][21] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][19] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][17] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][16] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][10] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][9] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][1] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][head_ptr][0] to match row orient.
Flip instance tx_core/dma_reg_tx/clink_ptr_reg[l_reg][15][ctrl_data][last_bvalid][2] to match row orient.
Flip instance tx_core/dma_reg_tx/depth_left_reg[4] to match row orient.
Flip instance tx_core/dma_reg_tx/r_ptr_reg[1] to match row orient.
Flip instance tx_core/dma_reg_tx/r_ptr_reg[2] to match row orient.
Flip instance tx_core/dma_reg_tx/depth_left_reg[2] to match row orient.
Flip instance tx_core/dma_reg_tx/depth_left_reg[1] to match row orient.
Flip instance tx_core/dma_reg_tx/depth_left_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_vld_2d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data8_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data16_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data32_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[63] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[62] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[58] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[55] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[52] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[51] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[50] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[49] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[48] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[47] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[43] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[42] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[40] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data64_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[47] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[45] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[43] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data48_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[55] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[54] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[53] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[49] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[43] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[42] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[39] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[37] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data56_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/load8_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/load24_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/load56_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin24_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin40_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin48_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin16_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin32_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin56_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin64_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/data24_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crc_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt2/crcin8_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_vld_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data8_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data8_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data8_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data8_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data16_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data32_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[63] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[61] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[60] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[58] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[57] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[53] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[51] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[48] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[43] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[41] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data64_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[46] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[45] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[42] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[39] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[37] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data48_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[39] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[37] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[54] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[53] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[52] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[51] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[50] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[48] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[47] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[46] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[45] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[43] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[42] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[41] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data56_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/load8_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/load24_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin16_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin40_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin56_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin24_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin48_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin64_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/data24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crc_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt1/crcin8_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data8_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data16_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data32_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[62] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[61] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[60] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[58] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[56] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[55] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[54] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[53] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[52] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[51] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[50] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[47] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[45] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[43] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[41] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[32] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data64_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[47] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[43] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[41] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data48_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[53] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[52] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[49] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[44] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[41] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[40] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[39] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[38] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[37] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[36] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[35] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[34] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[33] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data56_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/load8_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/load32_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/load40_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/load48_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/load56_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/load64_d_reg to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[28] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[27] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[4] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[21] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[23] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[16] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin24_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin56_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin16_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin32_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin40_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin48_d_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[31] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin64_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[22] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[14] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/data24_d_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[24] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[13] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[17] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[6] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[18] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crc_reg[20] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[26] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[30] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[29] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[11] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[9] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[25] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[19] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[8] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[10] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[12] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[15] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcpkt0/crcin8_d_reg[20] to match row orient.
Flip instance tx_core/axi_slave/w_rspch_cur_state_reg[0] to match row orient.
Flip instance tx_core/axi_slave/w_ach_cur_state_reg[0] to match row orient.
Flip instance tx_core/tx_rs/div2_d_reg to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/depth_left_reg[1] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_slave/w_dch_cur_state_reg[1] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[4] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[6] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[8] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[10] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[15] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[17] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[18] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[20] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[21] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[22] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[24] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[28] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[30] to match row orient.
Flip instance tx_core/axi_slave/burst_addr_d_reg[31] to match row orient.
Flip instance tx_core/axi_slave/wready_d_reg to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/depth_left_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/depth_left_reg[2] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/depth_left_reg[3] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/w_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/r_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/w_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/w_ptr_reg[1] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/w_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/w_ptr_reg[3] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/r_ptr_reg[0] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/r_ptr_reg[2] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/r_ptr_reg[4] to match row orient.
Flip instance tx_core/tx_rs/cur_state_clk_reg[1] to match row orient.
Flip instance tx_core/tx_rs/cnt128_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/cnt128_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/cnt128_d_reg[4] to match row orient.
Flip instance tx_core/tx_rs/cnt128_d_reg[5] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[4] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[11] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[12] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[19] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[20] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[21] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[22] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[23] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[25] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[26] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[27] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[29] to match row orient.
Flip instance tx_core/tx_rs/wakeuptimer_d_reg[31] to match row orient.
Flip instance tx_core/tx_rs/cur_state_reg[0] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt2_d_reg[2] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt2_d_reg[3] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt2_d_reg[6] to match row orient.
Flip instance tx_core/QOS_selector/qos/queue_gnt_d_reg[1] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt1_d_reg[0] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt1_d_reg[6] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt1_d_reg[7] to match row orient.
Flip instance tx_core/QOS_selector/qos/queue_gnt_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/crc_bvalid_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[0] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[1] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[2] to match row orient.
Flip instance tx_core/tx_rs/bvalid_reg[7] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/depth_left_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/w_ptr_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/w_ptr_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/r_ptr_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/r_ptr_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/r_ptr_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/depth_left_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/depth_left_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/depth_left_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/w_ptr_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/r_ptr_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/r_ptr_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/depth_left_reg[0] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/depth_left_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/depth_left_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/depth_left_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/w_ptr_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/w_ptr_reg[2] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/r_ptr_reg[1] to match row orient.
Flip instance tx_core/tx_crc/crcfifo0/r_ptr_reg[2] to match row orient.
Flip instance tx_core/tx_rs/IDC_cnt_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/IDC_cnt_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[2] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[3] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[5] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[6] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[8] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[9] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[13] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[14] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[15] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[16] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[17] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[18] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[19] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[23] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[24] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[25] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[26] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[27] to match row orient.
Flip instance tx_core/tx_rs/crc_left_d_reg[31] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[3] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[5] to match row orient.
Flip instance tx_core/tx_rs/pkt_ctrl_d_reg[6] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[0] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[2] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[3] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[5] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[6] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[7] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[11] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[14] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[15] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[16] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[17] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[18] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[19] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[22] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[24] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[29] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[30] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[33] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[34] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[36] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[37] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[38] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[39] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[40] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[41] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[44] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[48] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[50] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[51] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[11] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[52] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[12] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[13] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[54] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[14] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[55] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[56] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[59] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[3] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[4] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[5] to match row orient.
Flip instance tx_core/tx_rs/xgmii_tx_hold_reg[62] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[6] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[7] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt0_d_reg[0] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt0_d_reg[2] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt0_d_reg[3] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt0_d_reg[4] to match row orient.
Flip instance tx_core/QOS_selector/qos/srv_cnt0_d_reg[7] to match row orient.
Flip instance tx_core/axi_slave/wchaddr_fifo/depth_left_reg[5] to match row orient.
Flip instance tx_core/axi_slave/wchrsp_fifo/depth_left_reg[5] to match row orient.
Flip instance tx_core/tx_crc/crcfifo1/depth_left_reg[4] to match row orient.
Flip instance tx_core/tx_rs/cur_state_reg[3] to match row orient.
Flip instance tx_core/tx_crc/crcfifo2/depth_left_reg[4] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txc_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/idlernd_cnt_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[24] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[25] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[26] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[16] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[17] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[18] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[8] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[9] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[0] to match row orient.
Flip instance tx_core/tx_rs/xgmii_txd_d_reg[2] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[31] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[1] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[6] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[7] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[12] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[17] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[18] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[19] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[24] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[26] to match row orient.
Flip instance tx_core/tx_rs/crc_tx_d_reg[30] to match row orient.
**WARN: (ENCFP-317):	After resize, ROUTED pre-routed wires will be removed and FIXED pre-routed wires will be retained.
<CMD> addRing -spacing_bottom 5 -width_left 5 -width_bottom 5 -width_top 5 -spacing_top 5 -layer_bottom metal5 -width_right 5 -around core -center 1 -layer_top metal5 -spacing_right 5 -spacing_left 5 -layer_right metal6 -layer_left metal6 -nets { gnd vdd }

The power planner created 8 wires.
<CMD_INTERNAL> amoebaPlace
**WARN: (ENCSP-9007):	The command 'amoebaPlace' is obsolete. It has been replaced by 'placeDesign'.
*** Starting "NanoPlace(TM) placement v0.892.2.20 (mem=557.1M)" ...
Options: ignoreScan ignoreSpare pinGuide gpeffort=medium 
**WARN: (ENCSP-9042):	Scan chains were not defined, -ignoreScan option will be ignored. 
Please first define the scan chains before using this option.
#std cell=215082 #block=0 (0 floating + 0 preplaced) #ioInst=0 #net=33472 #term=101617 #term/net=3.04, #fixedIo=0, #floatIo=0, #fixedPin=0, #floatPin=1153
stdCell: 215082 single + 0 double + 0 multi
Total standard cell length = 112.8898 (mm), area = 0.2788 (mm^2)
Design contains fractional 20 cells.
Average module density = 0.609.
Density for the design = 0.609.
       = stdcell_area 297078 (278838 um^2) / alloc_area 488130 (458159 um^2).
Pin Density = 0.342.
            = total # of pins 101617 / total Instance area 297078.
Identified 182232 spare or floating instances, with no clusters.
Iteration  1: Total net bbox = 2.196e+06 (8.14e+05 1.38e+06)
              Est.  stn bbox = 2.289e+06 (8.72e+05 1.42e+06)
              cpu = 0:00:00.7 real = 0:00:01.0 mem = 557.1M
Iteration  2: Total net bbox = 1.605e+06 (8.14e+05 7.90e+05)
              Est.  stn bbox = 1.726e+06 (8.72e+05 8.54e+05)
              cpu = 0:00:00.6 real = 0:00:01.0 mem = 557.1M
Iteration  3: Total net bbox = 1.416e+06 (6.28e+05 7.87e+05)
              Est.  stn bbox = 1.539e+06 (6.92e+05 8.47e+05)
              cpu = 0:00:01.8 real = 0:00:01.0 mem = 557.1M
Iteration  4: Total net bbox = 1.255e+06 (6.13e+05 6.42e+05)
              Est.  stn bbox = 1.402e+06 (6.76e+05 7.26e+05)
              cpu = 0:00:03.0 real = 0:00:03.0 mem = 557.1M
Iteration  5: Total net bbox = 1.152e+06 (5.14e+05 6.38e+05)
              Est.  stn bbox = 1.303e+06 (5.81e+05 7.22e+05)
              cpu = 0:00:03.1 real = 0:00:03.0 mem = 557.1M
Iteration  6: Total net bbox = 1.098e+06 (5.20e+05 5.78e+05)
              Est.  stn bbox = 1.263e+06 (5.87e+05 6.76e+05)
              cpu = 0:00:03.6 real = 0:00:04.0 mem = 557.1M
Iteration  7: Total net bbox = 1.135e+06 (5.35e+05 6.00e+05)
              Est.  stn bbox = 1.315e+06 (6.14e+05 7.01e+05)
              cpu = 0:00:03.7 real = 0:00:04.0 mem = 557.1M
Iteration  8: Total net bbox = 1.122e+06 (5.39e+05 5.83e+05)
              Est.  stn bbox = 1.309e+06 (6.19e+05 6.90e+05)
              cpu = 0:00:02.4 real = 0:00:02.0 mem = 557.1M
Iteration  9: Total net bbox = 1.108e+06 (5.26e+05 5.82e+05)
              Est.  stn bbox = 1.297e+06 (6.08e+05 6.89e+05)
              cpu = 0:00:05.2 real = 0:00:05.0 mem = 557.1M
Iteration 10: Total net bbox = 1.095e+06 (5.26e+05 5.69e+05)
              Est.  stn bbox = 1.286e+06 (6.08e+05 6.78e+05)
              cpu = 0:00:01.8 real = 0:00:02.0 mem = 557.1M
Iteration 11: Total net bbox = 1.109e+06 (5.41e+05 5.69e+05)
              Est.  stn bbox = 1.301e+06 (6.24e+05 6.78e+05)
              cpu = 0:00:02.1 real = 0:00:02.0 mem = 557.1M
Iteration 12: Total net bbox = 1.127e+06 (5.41e+05 5.86e+05)
              Est.  stn bbox = 1.319e+06 (6.24e+05 6.95e+05)
              cpu = 0:00:02.2 real = 0:00:02.0 mem = 557.1M
Iteration 13: Total net bbox = 1.137e+06 (5.51e+05 5.86e+05)
              Est.  stn bbox = 1.330e+06 (6.35e+05 6.95e+05)
              cpu = 0:00:02.3 real = 0:00:03.0 mem = 557.1M
Iteration 14: Total net bbox = 1.148e+06 (5.51e+05 5.98e+05)
              Est.  stn bbox = 1.342e+06 (6.35e+05 7.08e+05)
              cpu = 0:00:02.6 real = 0:00:02.0 mem = 557.1M
Iteration 15: Total net bbox = 1.155e+06 (5.57e+05 5.98e+05)
              Est.  stn bbox = 1.349e+06 (6.41e+05 7.08e+05)
              cpu = 0:00:02.7 real = 0:00:03.0 mem = 557.1M
Iteration 16: Total net bbox = 1.162e+06 (5.57e+05 6.04e+05)
              Est.  stn bbox = 1.357e+06 (6.41e+05 7.15e+05)
              cpu = 0:00:01.1 real = 0:00:01.0 mem = 557.1M
Iteration 17: Total net bbox = 1.158e+06 (5.54e+05 6.04e+05)
              Est.  stn bbox = 1.353e+06 (6.38e+05 7.15e+05)
              cpu = 0:00:00.6 real = 0:00:01.0 mem = 557.1M
Iteration 18: Total net bbox = 1.156e+06 (5.54e+05 6.02e+05)
              Est.  stn bbox = 1.351e+06 (6.38e+05 7.13e+05)
              cpu = 0:00:00.3 real = 0:00:00.0 mem = 557.1M
Iteration 19: Total net bbox = 1.141e+06 (5.46e+05 5.95e+05)
              Est.  stn bbox = 1.336e+06 (6.31e+05 7.05e+05)
              cpu = 0:00:01.6 real = 0:00:02.0 mem = 557.1M
*** cost = 1.141e+06 (5.46e+05 5.95e+05) (cpu for global=0:00:43.3) real=0:00:44.0***
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, post-route mode.
Finished Phase I. CPU Time = 0:00:09.9, Real Time = 0:00:10.0
move report: preRPlace moves 18570 insts, mean move: 0.61 um, max move: 3.61 um
	max move on inst (tx_core/axi_master/DP_OP_226J2_125_2688/U5): (525.92, 447.45) --> (527.06, 444.98)
Placement tweakage begins.
wire length = 1.141e+06 = 5.461e+05 H + 5.950e+05 V
wire length = 1.094e+06 = 5.045e+05 H + 5.890e+05 V
Placement tweakage ends.
move report: wireLenOpt moves 55805 insts, mean move: 2.79 um, max move: 71.06 um
	max move on inst (tx_core/axi_master/U3032): (460.56, 603.06) --> (519.27, 615.41)
move report: rPlace moves 20389 insts, mean move: 0.22 um, max move: 2.85 um
	max move on inst (tx_core/tx_crc/crcpkt0/U2882): (367.27, 76.95) --> (370.12, 76.95)
move report: overall moves 69026 insts, mean move: 2.38 um, max move: 70.87 um
	max move on inst (tx_core/axi_master/U3032): (460.56, 603.06) --> (519.08, 615.41)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =        70.87 um
  inst (tx_core/axi_master/U3032) with max move: (460.56, 603.06) -> (519.08, 615.41)
  mean    (X+Y) =         3.87 um
Total instances flipped for legalization: 4226
Total instances moved : 19537
*** cpu=0:00:46.3   mem=557.1M  mem(used)=0.0M***
Total net length = 1.114e+06 (5.148e+05 5.989e+05) (ext = 6.187e+04)
*** End of Placement (cpu=0:01:31, real=0:01:30, mem=557.1M) ***
Design contains fractional 20 cells.
default core: bins with density >  0.75 =    0 % ( 0 / 784 )
Starting IO pin assignment...
INFO: Assigning 49 floating pins in partition eth_core.
Completed IO pin assignment.
<CMD> sroute -noBlockPins -noPadRings
**WARN: (ENCSR-4053):	SRoute option "-noBlockPins" is obsolete and has been replaced by "-connect". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-connect".
**WARN: (ENCSR-4053):	SRoute option "-noPadRings" is obsolete and has been replaced by "-connect". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-connect".
*** Begin SPECIAL ROUTE on Sun Nov 13 17:41:58 2016 ***
Sroute/fcroute version 8.1.46 promoted on 02/17/2009.
SPECIAL ROUTE ran on directory: /home/010123386@SJSUAD.SJSU.EDU/Documents/MS_PROJECT_MEM_SEP/rtl/syn_ibloc/PnR_ethcore
SPECIAL ROUTE ran on machine: coe-ee-cad45.sjsuad.sjsu.edu (Linux 4.8.4-200.fc24.x86_64 x86_64 3.69Ghz)

Begin option processing ...
(from .sroute_24199.conf) srouteConnectPowerBump set to false
(from .sroute_24199.conf) routeSpecial set to true
(from .sroute_24199.conf) srouteConnectBlockPin set to false
(from .sroute_24199.conf) srouteFollowCorePinEnd set to 3
(from .sroute_24199.conf) srouteJogControl set to "preferWithChanges differentLayer"
(from .sroute_24199.conf) sroutePadPinAllPorts set to true
(from .sroute_24199.conf) sroutePreserveExistingRoutes set to true
End option processing: cpu: 0:00:00, real: 0:00:00, peak: 758.00 megs.

Reading DB technology information...
Finished reading DB technology information.
Reading floorplan and netlist information...
Finished reading floorplan and netlist information.
Read in 22 layers, 10 routing layers, 1 overlap layer
Read in 33 macros, 25 used
Read in 215082 components
  215082 core components: 0 unplaced, 211432 placed, 3650 fixed
Read in 1264 physical pins
  1264 physical pins: 0 unplaced, 1264 placed, 0 fixed
Read in 1145 nets
Read in 2 special nets, 2 routed
Read in 431428 terminals
Begin power routing ...
**WARN: (ENCSR-1256):	Net vdd does not have CORE class pad pins to be routed.
	Please check net list or port class.
Net vdd does not have AREAIO class pad pins to be routed.
	Please check net list or port class.
**WARN: (ENCSR-1256):	Net gnd does not have CORE class pad pins to be routed.
	Please check net list or port class.
Net gnd does not have AREAIO class pad pins to be routed.
	Please check net list or port class.
CPU time for FollowPin 0 seconds
CPU time for FollowPin 0 seconds
  Number of IO ports routed: 0
  Number of Stripe ports routed: 0
  Number of Core ports routed: 552
  Number of Followpin connections: 276
End power routing: cpu: 0:00:02, real: 0:00:02, peak: 758.00 megs.



 Begin updating DB with routing results ...
 Updating DB with 1264 io pins ...
 Updating DB with 20 via definition ...

sroute post-processing starts at Sun Nov 13 17:42:01 2016
The viaGen is rebuilding shadow vias for net gnd.
sroute post-processing ends at Sun Nov 13 17:42:01 2016

sroute post-processing starts at Sun Nov 13 17:42:01 2016
The viaGen is rebuilding shadow vias for net vdd.
sroute post-processing ends at Sun Nov 13 17:42:01 2016
sroute: Total CPU time used = 0:0:3
sroute: Total Real time used = 0:0:4
sroute: Total Memory used = 0.00 megs
sroute: Total Peak Memory used = 557.07 megs
<CMD> trialRoute
*** Starting trialRoute (mem=557.1M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1448645 1438780)
coreBox:    (40280 40280) (1408645 1398780)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1274, multi-gpins=3531, moved blk term=0/0

Phase 1a route (0:00:00.3 557.1M):
Est net length = 1.184e+06um = 5.584e+05H + 6.252e+05V
Usage: (12.1%H 12.7%V) = (6.377e+05um 9.263e+05um) = (665322 376196)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1b route (0:00:00.2 557.1M):
Usage: (12.1%H 12.7%V) = (6.368e+05um 9.263e+05um) = (664351 376196)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1c route (0:00:00.1 557.1M):
Usage: (12.1%H 12.7%V) = (6.363e+05um 9.264e+05um) = (663815 376208)
Overflow: 14 = 0 (0.00% H) + 14 (0.01% V)

Phase 1d route (0:00:00.2 557.1M):
Usage: (12.1%H 12.7%V) = (6.363e+05um 9.264e+05um) = (663816 376208)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1e route (0:00:00.1 557.1M):
Usage: (12.1%H 12.7%V) = (6.363e+05um 9.264e+05um) = (663816 376210)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1f route (0:00:00.1 557.1M):
Usage: (12.1%H 12.7%V) = (6.363e+05um 9.264e+05um) = (663824 376213)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	17	 0.01%
  2:	0	 0.00%	38	 0.02%
  3:	0	 0.00%	652	 0.30%
  4:	0	 0.00%	1396	 0.64%
  5:	0	 0.00%	1409	 0.64%
  6:	0	 0.00%	3033	 1.38%
  7:	1	 0.00%	5216	 2.37%
  8:	1	 0.00%	9393	 4.27%
  9:	16	 0.01%	16157	 7.35%
 10:	14	 0.01%	25204	11.47%
 11:	49	 0.02%	34814	15.84%
 12:	3811	 1.73%	44255	20.14%
 13:	4029	 1.83%	33623	15.30%
 14:	678	 0.31%	19919	 9.06%
 15:	2749	 1.25%	14590	 6.64%
 16:	3213	 1.46%	7338	 3.34%
 17:	4888	 2.22%	75	 0.03%
 18:	9510	 4.33%	0	 0.00%
 19:	11126	 5.06%	0	 0.00%
 20:	179695	81.76%	2628	 1.20%


Global route (cpu=1.0s real=1.0s 557.1M)
Phase 1l route (0:00:01.5 557.1M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (12.2%H 12.9%V) = (6.408e+05um 9.374e+05um) = (668411 380744)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	18	 0.01%
  1:	0	 0.00%	20	 0.01%
  2:	0	 0.00%	62	 0.03%
  3:	0	 0.00%	725	 0.33%
  4:	0	 0.00%	1511	 0.69%
  5:	0	 0.00%	1613	 0.73%
  6:	1	 0.00%	3207	 1.46%
  7:	1	 0.00%	5352	 2.44%
  8:	1	 0.00%	9359	 4.26%
  9:	17	 0.01%	16041	 7.30%
 10:	19	 0.01%	25031	11.39%
 11:	57	 0.03%	34665	15.77%
 12:	3825	 1.74%	44174	20.10%
 13:	4048	 1.84%	33522	15.25%
 14:	729	 0.33%	19877	 9.04%
 15:	2807	 1.28%	14573	 6.63%
 16:	3261	 1.48%	7322	 3.33%
 17:	5006	 2.28%	74	 0.03%
 18:	9520	 4.33%	0	 0.00%
 19:	11268	 5.13%	0	 0.00%
 20:	179220	81.55%	2628	 1.20%



*** Completed Phase 1 route (0:00:02.8 557.1M) ***


Total length: 1.235e+06um, number of vias: 206377
M1(H) length: 5.906e+03um, number of vias: 100499
M2(V) length: 4.768e+05um, number of vias: 91324
M3(H) length: 5.602e+05um, number of vias: 13108
M4(V) length: 1.611e+05um, number of vias: 746
M5(H) length: 8.457e+03um, number of vias: 529
M6(V) length: 2.220e+04um, number of vias: 78
M7(H) length: 2.361e+01um, number of vias: 47
M8(V) length: 1.810e+01um, number of vias: 27
M9(H) length: 2.860e+00um, number of vias: 19
M10(V) length: 2.080e+01um
*** Completed Phase 2 route (0:00:01.6 557.1M) ***

*** Finished all Phases (cpu=0:00:04.5 mem=557.1M) ***
Peak Memory Usage was 557.1M 
*** Finished trialRoute (cpu=0:00:04.8 mem=557.1M) ***

<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.1.placed
Extraction called for design 'eth_core' of instances=215082 and nets=34266 using extraction engine 'postRoute' at effort level 'low' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Detail RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
**WARN: (ENCEXT-3032):	Since cap. table file was not provided, it will be created internally with the following process info:
* Layer Id             : 1 - M1
      Thickness        : 0.6
      Min Width        : 0.065
      Layer Dielectric : 4.1
* Layer Id             : 2 - M2
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 3 - M3
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 4 - M4
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 5 - M5
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 6 - M6
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 7 - M7
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 8 - M8
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 9 - M9
      Thickness        : 0.6
      Min Width        : 0.8
      Layer Dielectric : 4.1
* Layer Id             : 10 - M10
      Thickness        : 1
      Min Width        : 0.8
      Layer Dielectric : 4.1
extractDetailRC Option : -outfile ./eth_core_xWcbHR_24199.rcdb.d -maxResLength 200  -basic -newAssumeMetFill
Assumed metal fill uses the following parameters:
              Active Spacing      Min. Width
                [microns]         [microns]
**WARN: (ENCEXT-3087):	Fill active spacing for layer M1 is not specified, it will use  0.600 microns.
  Layer M1        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M2 is not specified, it will use  0.600 microns.
  Layer M2        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M3 is not specified, it will use  0.600 microns.
  Layer M3        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M4 is not specified, it will use  0.600 microns.
  Layer M4        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M5 is not specified, it will use  0.600 microns.
  Layer M5        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M6 is not specified, it will use  0.600 microns.
  Layer M6        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M7 is not specified, it will use  0.600 microns.
  Layer M7        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M8 is not specified, it will use  0.600 microns.
  Layer M8        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M9 is not specified, it will use  0.600 microns.
  Layer M9        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M10 is not specified, it will use  0.600 microns.
  Layer M10        0.600             0.400 
RC Mode: Detail [Assume Metal Fill, LEF Resistances]
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Coupling Cap. Scaling Factor : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res. Scaling Factor    : 1.00000
Shrink Factor                : 1.00000
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 557.1M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for storing RC.
Extracted 10.0005% (CPU Time= 0:00:00.5  MEM= 557.1M)
Extracted 20.0006% (CPU Time= 0:00:00.6  MEM= 557.1M)
Extracted 30.0007% (CPU Time= 0:00:00.8  MEM= 557.1M)
Extracted 40.0004% (CPU Time= 0:00:01.0  MEM= 557.1M)
Extracted 50.0005% (CPU Time= 0:00:01.5  MEM= 557.1M)
Extracted 60.0006% (CPU Time= 0:00:02.4  MEM= 557.1M)
Extracted 70.0004% (CPU Time= 0:00:02.4  MEM= 557.1M)
Extracted 80.0005% (CPU Time= 0:00:02.6  MEM= 557.1M)
Extracted 90.0006% (CPU Time= 0:00:02.9  MEM= 557.1M)
Extracted 100% (CPU Time= 0:00:03.6  MEM= 557.1M)
Nr. Extracted Resistors     : 484887
Nr. Extracted Ground Cap.   : 518291
Nr. Extracted Coupling Cap. : 1297092
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Filtering XCap in 'relativeOnly' mode using values relative_c_threshold=0.03 and total_c_threshold=5fF.
Checking LVS Completed (CPU Time= 0:00:00.2  MEM= 557.1M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb_Filter.rcdb.d/header.seq' for storing RC.
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 33472 times net's RC data read were performed.
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Detail RC Extraction DONE (CPU Time: 0:00:04.9  Real Time: 0:00:09.0  MEM: 557.070M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 557.1M, InitMEM = 557.1M)
Number of Loop : 0
Start delay calculation (mem=557.070M)...
delayCal using detail RC...
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
RC Database In Completed (CPU Time= 0:00:00.3  MEM= 557.1M)
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 33472 times net's RC data read were performed.
Delay calculation completed. (cpu=0:00:01.6 real=0:00:02.0 mem=557.070M 0)
*** CDM Built up (cpu=0:00:07.1  real=0:00:12.0  mem= 557.1M) ***
<CMD> setOptMode -mediumEffort -fixDRC -addPortAsNeeded
**WARN: (ENCTCM-70):	Option "-fixDRC" for command setOptMode is obsolete and has been replaced by "-fixDrc true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-fixDrc true".
**WARN: (ENCTCM-70):	Option "-addPortAsNeeded" for command setOptMode is obsolete and has been replaced by "-addPortAsNeeded true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-addPortAsNeeded true".
<CMD> optDesign -preCTS -drv
*info: Enabling Trial Route flow for DRV Fixing.
**optDesign ... cpu = 0:00:00, real = 0:00:00, mem = 557.1M **
*** Change effort level medium to high ***
setExtractRCMode -engine preRoute
**WARN: (ENCEXT-3493):	Extraction mode changed by calling extraction setup command 'setExtractRCMode'. Therefore, parasitic data in the tool generated as per previous mode is deleted. Call of extractRC/spefIn will generate/bring parasitic data in the tool as per current mode.
*** optDesign -preCTS ***
DRC Margin: user margin 0.0; extra margin 0.2
Setup Target Slack: user slack 0.0; extra slack 0.1
Hold Target Slack: user slack 0.0
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath false -clockPropagation forcedIdeal
*info: Setting setup target slack to 0.100
*info: Hold target slack is 0.000
*** CTE mode ***
*** Starting trialRoute (mem=557.1M) ***

There are 0 pin guide points passed to trialRoute.
Start to check current routing status for nets...
All nets are already routed correctly.
*** Finishing trialRoute (mem=557.1M) ***

Extraction called for design 'eth_core' of instances=215082 and nets=34266 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 557.070M)

------------------------------------------------------------
             Initial Summary                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -8.582  |
|           TNS (ns):|-21010.8 |
|    Violating Paths:|  6793   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   8158 (8158)    |   -0.203   |   8158 (8158)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.021%
------------------------------------------------------------
**optDesign ... cpu = 0:00:04, real = 0:00:04, mem = 557.1M **
*** Starting optimizing excluded clock nets MEM= 557.1M) ***
*info: No excluded clock nets to be optimized.
*** Completed optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 557.1M) ***
*info: Start fixing DRV (Mem = 557.07M) ...
*info: Options = -maxCap -maxTran -noMaxFanout -noSensitivity -backward -reduceBuffer -maxIter 2
*info: Start fixing DRV iteration 1 ...
*** Starting dpFixDRCViolation (557.1M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=557.1M) ***
*info: There are 2 candidate Buffer cells
*info: There are 4 candidate Inverter cells
Initializing placement sections/sites ...
Density before buffering = 0.600210
Start fixing design rules ... (0:00:00.8 557.1M)
Done fixing design rule (0:00:02.6 557.1M)

Summary:
487 buffers added on 487 nets (with 249 drivers resized)

Density after buffering = 0.602320
Design contains fractional 20 cells.
default core: bins with density >  0.75 =    0 % ( 0 / 784 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:11.5, Real Time = 0:00:12.0
move report: preRPlace moves 1870 insts, mean move: 0.42 um, max move: 2.47 um
	max move on inst (tx_core/tx_crc/crcpkt1/U3133): (53.20, 536.37) --> (53.20, 538.84)
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 1870 insts, mean move: 0.42 um, max move: 2.47 um
	max move on inst (tx_core/tx_crc/crcpkt1/U3133): (53.20, 536.37) --> (53.20, 538.84)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         2.47 um
  inst (tx_core/tx_crc/crcpkt1/U3133) with max move: (53.2, 536.37) -> (53.2, 538.84)
  mean    (X+Y) =         0.42 um
Total instances moved : 1040
*** cpu=0:00:11.8   mem=557.1M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:15.5 557.1M)

*** Starting trialRoute (mem=557.1M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1448645 1438780)
coreBox:    (40280 40280) (1408645 1398780)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1275, multi-gpins=3531, moved blk term=0/0

Phase 1a route (0:00:00.2 557.1M):
Est net length = 1.185e+06um = 5.592e+05H + 6.253e+05V
Usage: (12.2%H 12.8%V) = (6.390e+05um 9.290e+05um) = (666716 377262)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1b route (0:00:00.2 557.1M):
Usage: (12.2%H 12.8%V) = (6.381e+05um 9.290e+05um) = (665745 377262)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1c route (0:00:00.2 557.1M):
Usage: (12.1%H 12.8%V) = (6.376e+05um 9.290e+05um) = (665204 377267)
Overflow: 14 = 0 (0.00% H) + 14 (0.01% V)

Phase 1d route (0:00:00.2 557.1M):
Usage: (12.1%H 12.8%V) = (6.376e+05um 9.290e+05um) = (665205 377267)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1e route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.376e+05um 9.290e+05um) = (665205 377269)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1f route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.376e+05um 9.290e+05um) = (665213 377272)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	19	 0.01%
  2:	0	 0.00%	38	 0.02%
  3:	0	 0.00%	657	 0.30%
  4:	0	 0.00%	1374	 0.63%
  5:	0	 0.00%	1433	 0.65%
  6:	0	 0.00%	3051	 1.39%
  7:	1	 0.00%	5328	 2.42%
  8:	1	 0.00%	9325	 4.24%
  9:	15	 0.01%	16181	 7.36%
 10:	17	 0.01%	25159	11.45%
 11:	49	 0.02%	34845	15.85%
 12:	3806	 1.73%	44282	20.15%
 13:	4022	 1.83%	33770	15.37%
 14:	677	 0.31%	19869	 9.04%
 15:	2710	 1.23%	14408	 6.56%
 16:	3229	 1.47%	7315	 3.33%
 17:	4755	 2.16%	75	 0.03%
 18:	9501	 4.32%	0	 0.00%
 19:	11320	 5.15%	0	 0.00%
 20:	179677	81.75%	2628	 1.20%


Global route (cpu=1.0s real=1.0s 557.1M)
Phase 1l route (0:00:01.4 557.1M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (12.2%H 12.9%V) = (6.421e+05um 9.401e+05um) = (669804 381843)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	22	 0.01%
  2:	0	 0.00%	63	 0.03%
  3:	0	 0.00%	721	 0.33%
  4:	0	 0.00%	1498	 0.68%
  5:	0	 0.00%	1631	 0.74%
  6:	0	 0.00%	3255	 1.48%
  7:	1	 0.00%	5416	 2.46%
  8:	1	 0.00%	9333	 4.25%
  9:	18	 0.01%	16055	 7.31%
 10:	22	 0.01%	25005	11.38%
 11:	56	 0.03%	34674	15.78%
 12:	3817	 1.74%	44197	20.11%
 13:	4042	 1.84%	33670	15.32%
 14:	731	 0.33%	19821	 9.02%
 15:	2766	 1.26%	14394	 6.55%
 16:	3269	 1.49%	7300	 3.32%
 17:	4884	 2.22%	74	 0.03%
 18:	9533	 4.34%	0	 0.00%
 19:	11443	 5.21%	0	 0.00%
 20:	179197	81.53%	2628	 1.20%



*** Completed Phase 1 route (0:00:02.9 557.1M) ***


Total length: 1.236e+06um, number of vias: 208452
M1(H) length: 5.947e+03um, number of vias: 101473
M2(V) length: 4.740e+05um, number of vias: 92388
M3(H) length: 5.611e+05um, number of vias: 13121
M4(V) length: 1.630e+05um, number of vias: 757
M5(H) length: 8.246e+03um, number of vias: 542
M6(V) length: 2.377e+04um, number of vias: 78
M7(H) length: 2.417e+01um, number of vias: 47
M8(V) length: 1.810e+01um, number of vias: 27
M9(H) length: 2.860e+00um, number of vias: 19
M10(V) length: 2.080e+01um
*** Completed Phase 2 route (0:00:01.6 557.1M) ***

*** Finished all Phases (cpu=0:00:04.6 mem=557.1M) ***
Peak Memory Usage was 557.1M 
*** Finished trialRoute (cpu=0:00:05.0 mem=557.1M) ***

Extraction called for design 'eth_core' of instances=215569 and nets=34753 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 557.070M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 557.1M, InitMEM = 557.1M)
Number of Loop : 0
Start delay calculation (mem=557.070M)...
Delay calculation completed. (cpu=0:00:01.4 real=0:00:02.0 mem=557.070M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 557.1M) ***
*info: DRV Fixing Iteration 1.
*info: Remaining violations:
*info:   Max cap violations:    7862
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    8158
*info:   Prev Max tran violations:   0
*info: Start fixing DRV iteration 2 ...
*** Starting dpFixDRCViolation (557.1M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=557.1M) ***
Start fixing design rules ... (0:00:00.7 557.1M)
Done fixing design rule (0:00:01.0 557.1M)

Summary:
18 buffers added on 18 nets (with 7 drivers resized)

Density after buffering = 0.602405
Design contains fractional 20 cells.
default core: bins with density >  0.75 =    0 % ( 0 / 784 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:11.3, Real Time = 0:00:11.0
move report: preRPlace moves 75 insts, mean move: 0.41 um, max move: 0.76 um
	max move on inst (tx_core/tx_crc/crcpkt1/FE_OFC1443_n2497): (143.64, 590.71) --> (144.40, 590.71)
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 75 insts, mean move: 0.41 um, max move: 0.76 um
	max move on inst (tx_core/tx_crc/crcpkt1/FE_OFC1443_n2497): (143.64, 590.71) --> (144.40, 590.71)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.76 um
  inst (tx_core/tx_crc/crcpkt1/FE_OFC1443_n2497) with max move: (143.64, 590.71) -> (144.4, 590.71)
  mean    (X+Y) =         0.45 um
Total instances moved : 35
*** cpu=0:00:11.5   mem=557.1M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:13.6 557.1M)

*** Starting trialRoute (mem=557.1M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1448645 1438780)
coreBox:    (40280 40280) (1408645 1398780)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1276, multi-gpins=3532, moved blk term=0/0

Phase 1a route (0:00:00.2 557.1M):
Est net length = 1.185e+06um = 5.593e+05H + 6.253e+05V
Usage: (12.2%H 12.8%V) = (6.391e+05um 9.291e+05um) = (666778 377321)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1b route (0:00:00.2 557.1M):
Usage: (12.2%H 12.8%V) = (6.382e+05um 9.291e+05um) = (665810 377321)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1c route (0:00:00.2 557.1M):
Usage: (12.1%H 12.8%V) = (6.376e+05um 9.291e+05um) = (665258 377326)
Overflow: 14 = 0 (0.00% H) + 14 (0.01% V)

Phase 1d route (0:00:00.2 557.1M):
Usage: (12.1%H 12.8%V) = (6.376e+05um 9.291e+05um) = (665259 377326)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1e route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.376e+05um 9.291e+05um) = (665259 377328)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1f route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.376e+05um 9.291e+05um) = (665267 377331)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	20	 0.01%
  2:	0	 0.00%	37	 0.02%
  3:	0	 0.00%	655	 0.30%
  4:	0	 0.00%	1374	 0.63%
  5:	0	 0.00%	1422	 0.65%
  6:	0	 0.00%	3051	 1.39%
  7:	1	 0.00%	5295	 2.41%
  8:	1	 0.00%	9359	 4.26%
  9:	15	 0.01%	16203	 7.37%
 10:	17	 0.01%	25183	11.46%
 11:	52	 0.02%	34852	15.86%
 12:	3808	 1.73%	44266	20.14%
 13:	4026	 1.83%	33750	15.36%
 14:	671	 0.31%	19898	 9.05%
 15:	2723	 1.24%	14371	 6.54%
 16:	3241	 1.47%	7318	 3.33%
 17:	4777	 2.17%	75	 0.03%
 18:	9503	 4.32%	0	 0.00%
 19:	11284	 5.13%	0	 0.00%
 20:	179661	81.75%	2628	 1.20%


Global route (cpu=0.9s real=1.0s 557.1M)
Phase 1l route (0:00:01.4 557.1M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (12.2%H 12.9%V) = (6.422e+05um 9.403e+05um) = (669859 381904)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	23	 0.01%
  2:	0	 0.00%	61	 0.03%
  3:	0	 0.00%	720	 0.33%
  4:	0	 0.00%	1494	 0.68%
  5:	0	 0.00%	1633	 0.74%
  6:	0	 0.00%	3246	 1.48%
  7:	1	 0.00%	5388	 2.45%
  8:	1	 0.00%	9358	 4.26%
  9:	18	 0.01%	16072	 7.31%
 10:	23	 0.01%	25037	11.39%
 11:	58	 0.03%	34686	15.78%
 12:	3818	 1.74%	44178	20.10%
 13:	4048	 1.84%	33649	15.31%
 14:	723	 0.33%	19851	 9.03%
 15:	2783	 1.27%	14357	 6.53%
 16:	3280	 1.49%	7302	 3.32%
 17:	4905	 2.23%	74	 0.03%
 18:	9527	 4.33%	0	 0.00%
 19:	11418	 5.20%	0	 0.00%
 20:	179177	81.53%	2628	 1.20%



*** Completed Phase 1 route (0:00:02.9 557.1M) ***


Total length: 1.236e+06um, number of vias: 208530
M1(H) length: 5.948e+03um, number of vias: 101509
M2(V) length: 4.743e+05um, number of vias: 92425
M3(H) length: 5.613e+05um, number of vias: 13127
M4(V) length: 1.627e+05um, number of vias: 755
M5(H) length: 8.135e+03um, number of vias: 543
M6(V) length: 2.379e+04um, number of vias: 78
M7(H) length: 2.417e+01um, number of vias: 47
M8(V) length: 1.810e+01um, number of vias: 27
M9(H) length: 2.860e+00um, number of vias: 19
M10(V) length: 2.080e+01um
*** Completed Phase 2 route (0:00:01.6 557.1M) ***

*** Finished all Phases (cpu=0:00:04.6 mem=557.1M) ***
Peak Memory Usage was 557.1M 
*** Finished trialRoute (cpu=0:00:05.0 mem=557.1M) ***

Extraction called for design 'eth_core' of instances=215587 and nets=34771 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 557.070M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 557.1M, InitMEM = 557.1M)
Number of Loop : 0
Start delay calculation (mem=557.070M)...
Delay calculation completed. (cpu=0:00:01.4 real=0:00:01.0 mem=557.070M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 557.1M) ***
*info: DRV Fixing Iteration 2.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7862
*info:   Prev Max tran violations:   0
*info: Start fixing DRV while maintaining existing placement ...
*** Starting dpFixDRCViolation (557.1M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=557.1M) ***
Start fixing design rules ... (0:00:00.7 557.1M)
Done fixing design rule (0:00:01.4 557.1M)

Summary:
76 buffers added on 76 nets (with 0 driver resized)

Density after buffering = 0.602855
Design contains fractional 20 cells.
default core: bins with density >  0.75 =    0 % ( 0 / 784 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:10.4, Real Time = 0:00:10.0
move report: preRPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 0 insts, mean move: 0.00 um, max move: 0.00 um
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.00 um
  mean    (X+Y) =         0.00 um
Total instances moved : 0
*** cpu=0:00:10.6   mem=557.1M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:13.1 557.1M)

*** Starting trialRoute (mem=557.1M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1448645 1438780)
coreBox:    (40280 40280) (1408645 1398780)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1276, multi-gpins=3532, moved blk term=0/0

Phase 1a route (0:00:00.2 557.1M):
Est net length = 1.185e+06um = 5.594e+05H + 6.254e+05V
Usage: (12.2%H 12.8%V) = (6.392e+05um 9.295e+05um) = (666946 377501)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1b route (0:00:00.2 557.1M):
Usage: (12.2%H 12.8%V) = (6.383e+05um 9.296e+05um) = (665979 377501)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1c route (0:00:00.2 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665437 377505)
Overflow: 14 = 0 (0.00% H) + 14 (0.01% V)

Phase 1d route (0:00:00.2 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665438 377505)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1e route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665438 377507)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1f route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665446 377510)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	20	 0.01%
  2:	0	 0.00%	38	 0.02%
  3:	0	 0.00%	655	 0.30%
  4:	0	 0.00%	1373	 0.62%
  5:	0	 0.00%	1427	 0.65%
  6:	0	 0.00%	3059	 1.39%
  7:	1	 0.00%	5294	 2.41%
  8:	1	 0.00%	9350	 4.25%
  9:	15	 0.01%	16217	 7.38%
 10:	17	 0.01%	25173	11.45%
 11:	55	 0.03%	34828	15.85%
 12:	3810	 1.73%	44298	20.16%
 13:	4024	 1.83%	33778	15.37%
 14:	672	 0.31%	19922	 9.06%
 15:	2732	 1.24%	14316	 6.51%
 16:	3211	 1.46%	7306	 3.32%
 17:	4783	 2.18%	75	 0.03%
 18:	9472	 4.31%	0	 0.00%
 19:	11373	 5.17%	0	 0.00%
 20:	179614	81.72%	2628	 1.20%


Global route (cpu=1.0s real=1.0s 557.1M)
Phase 1l route (0:00:01.5 557.1M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (12.2%H 12.9%V) = (6.423e+05um 9.408e+05um) = (670043 382093)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	23	 0.01%
  2:	0	 0.00%	64	 0.03%
  3:	0	 0.00%	721	 0.33%
  4:	0	 0.00%	1488	 0.68%
  5:	0	 0.00%	1638	 0.75%
  6:	0	 0.00%	3260	 1.48%
  7:	1	 0.00%	5383	 2.45%
  8:	1	 0.00%	9344	 4.25%
  9:	18	 0.01%	16098	 7.32%
 10:	23	 0.01%	25021	11.38%
 11:	60	 0.03%	34667	15.77%
 12:	3823	 1.74%	44201	20.11%
 13:	4043	 1.84%	33680	15.32%
 14:	724	 0.33%	19874	 9.04%
 15:	2792	 1.27%	14303	 6.51%
 16:	3251	 1.48%	7290	 3.32%
 17:	4909	 2.23%	74	 0.03%
 18:	9498	 4.32%	0	 0.00%
 19:	11506	 5.24%	0	 0.00%
 20:	179131	81.50%	2628	 1.20%



*** Completed Phase 1 route (0:00:02.9 557.1M) ***


Total length: 1.237e+06um, number of vias: 208837
M1(H) length: 5.963e+03um, number of vias: 101661
M2(V) length: 4.739e+05um, number of vias: 92553
M3(H) length: 5.615e+05um, number of vias: 13153
M4(V) length: 1.633e+05um, number of vias: 756
M5(H) length: 8.048e+03um, number of vias: 543
M6(V) length: 2.371e+04um, number of vias: 78
M7(H) length: 2.417e+01um, number of vias: 47
M8(V) length: 1.810e+01um, number of vias: 27
M9(H) length: 2.860e+00um, number of vias: 19
M10(V) length: 2.080e+01um
*** Completed Phase 2 route (0:00:01.6 557.1M) ***

*** Finished all Phases (cpu=0:00:04.6 mem=557.1M) ***
Peak Memory Usage was 557.1M 
*** Finished trialRoute (cpu=0:00:05.0 mem=557.1M) ***

Extraction called for design 'eth_core' of instances=215663 and nets=34847 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:01.0  MEM: 557.070M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 557.1M, InitMEM = 557.1M)
Number of Loop : 0
Start delay calculation (mem=557.070M)...
Delay calculation completed. (cpu=0:00:01.4 real=0:00:02.0 mem=557.070M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 557.1M) ***
*info: DRV Fixing Iteration 3.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info:
*info: Completed fixing DRV (CPU Time = 0:01:06, Mem = 557.07M).

------------------------------------------------------------
     Summary (cpu=1.10min real=1.12min mem=557.1M)                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -7.903  |
|           TNS (ns):|-15618.9 |
|    Violating Paths:|  6331   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.183   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.286%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------
**optDesign ... cpu = 0:01:11, real = 0:01:12, mem = 557.1M **
Reported timing to dir ./timingReports
**optDesign ... cpu = 0:01:11, real = 0:01:12, mem = 557.1M **

------------------------------------------------------------
     optDesign Final Summary                             
------------------------------------------------------------

+--------------------+---------+---------+---------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | in2reg  | reg2out | in2out  | clkgate |
+--------------------+---------+---------+---------+---------+---------+---------+
|           WNS (ns):| -7.903  | -6.281  | -7.903  | -2.000  | -3.035  |   N/A   |
|           TNS (ns):|-15618.9 | -8181.6 |-14795.3 |-237.330 |-382.991 |   N/A   |
|    Violating Paths:|  6331   |  3283   |  5672   |   260   |   258   |   N/A   |
|          All Paths:|  7370   |  3566   |  6377   |   522   |   341   |   N/A   |
+--------------------+---------+---------+---------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.183   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.286%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------
**optDesign ... cpu = 0:01:13, real = 0:01:15, mem = 557.1M **
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath false -clockPropagation forcedIdeal
*** Finished optDesign ***
<CMD_INTERNAL> initECO ./ipo1.txt
**ERROR: (ENCOPT-513):	'fixSetupViolation' is obsolete. Use the 'optDesign' command instead
<CMD_INTERNAL> endECO
<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.2.ipo1
<CMD> createClockTreeSpec -output encounter.cts -bufFootprint buf -invFootprint inv
Checking spec file integrity...

******* createClockTreeSpec begin *******
Options:  -output encounter.cts -bufFootprint buf -invFootprint inv 
**WARN: (ENCCK-7001):	Option '-bufFootprint' for command 'createClockTreeSpec' is obsolete. Use '-bufferList' option as an alternative. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future release, update your script to use '-bufferList'.
**WARN: (ENCCK-412):	-bufFootprint is ignored in createClockTreeSpec since in this release the buffer footprint name is automatically generated and provided to this command. If you want to specify a specific list of cells to be used by CTS, please use -bufferList option.
**WARN: (ENCCK-7001):	Option '-invFootprint' for command 'createClockTreeSpec' is obsolete. Use '-bufferList' option as an alternative. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future release, update your script to use '-bufferList'.
**WARN: (ENCCK-415):	-invFootprint is ignored in createClockTreeSpec while dbgGPSAutoCellFunction is set.
CTE Mode
New Clock Spec Generation is ON.
New CTE tracing is ON.
Handle Multi Mode on mixed active views: default_view_hold default_view_setup.
Total 1 clock roots are extracted.
createClockTreeSpec invoking cleanupSpecifyClockTree
Checking spec file integrity...

Reading clock tree spec file 'encounter.cts' ...

RouteType               : FE_CTS_DEFAULT
PreferredExtraSpace     : 1
Shield                  : NONE
PreferLayer             : M3 M4 
Est. Cap                : 0.208861(V=0.194667 H=0.223055) (ff/um) [0.00010443]
Est. Res                : 2.67857(V=1.78571 H=3.57143)(ohm/um) [0.00133929]
Est. Via Res            : 4(ohm) [8]
Est. Via Cap            : 0.0684459(ff)
M1(H) w=0.065(um) s=0.065(um) p=0.19(um) es=0.315(um) cap=0.219(ff/um) res=5.85(ohm/um) viaRes=0(ohm) viaCap=0(ff)
M2(V) w=0.07(um) s=0.075(um) p=0.19(um) es=0.31(um) cap=0.222(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0790658(ff)
M3(H) w=0.07(um) s=0.07(um) p=0.19(um) es=0.31(um) cap=0.223(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0797668(ff)
M4(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0684459(ff)
M5(H) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M6(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M7(H) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.0921863(ff)
M8(V) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.129341(ff)
M9(H) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.181(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.210491(ff)
M10(V) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.151(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.268112(ff)

RouteType               : FE_CTS_DEFAULT_LEAF
PreferredExtraSpace     : 1
Shield                  : NONE
PreferLayer             : M3 M4 
Est. Cap                : 0.208861(V=0.194667 H=0.223055) (ff/um) [0.00010443]
Est. Res                : 2.67857(V=1.78571 H=3.57143)(ohm/um) [0.00133929]
Est. Via Res            : 4(ohm) [8]
Est. Via Cap            : 0.0684459(ff)
M1(H) w=0.065(um) s=0.065(um) p=0.19(um) es=0.315(um) cap=0.219(ff/um) res=5.85(ohm/um) viaRes=0(ohm) viaCap=0(ff)
M2(V) w=0.07(um) s=0.075(um) p=0.19(um) es=0.31(um) cap=0.222(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0790658(ff)
M3(H) w=0.07(um) s=0.07(um) p=0.19(um) es=0.31(um) cap=0.223(ff/um) res=3.57(ohm/um) viaRes=4(ohm) viaCap=0.0797668(ff)
M4(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0684459(ff)
M5(H) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M6(V) w=0.14(um) s=0.14(um) p=0.285(um) es=0.43(um) cap=0.195(ff/um) res=1.79(ohm/um) viaRes=4(ohm) viaCap=0.0550314(ff)
M7(H) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.0921863(ff)
M8(V) w=0.4(um) s=0.4(um) p=0.855(um) es=1.31(um) cap=0.16(ff/um) res=0.625(ohm/um) viaRes=4(ohm) viaCap=0.129341(ff)
M9(H) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.181(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.210491(ff)
M10(V) w=0.8(um) s=0.8(um) p=1.71(um) es=2.62(um) cap=0.151(ff/um) res=0.262(ohm/um) viaRes=4(ohm) viaCap=0.268112(ff)


****** AutoClockRootPin ******
AutoClockRootPin 1: clks.clk
# NoGating         NO
# SetDPinAsSync    NO
# SetIoPinAsSync   NO
# SetAsyncSRPinAsSync   NO
# SetTriStEnPinAsSync   NO
# SetBBoxPinAsSync   NO
# RouteClkNet      YES
# PostOpt          YES
# RouteType        FE_CTS_DEFAULT
# LeafRouteType    FE_CTS_DEFAULT_LEAF

***** !! NOTE !! *****

CTS treats D-pins and I/O pins as non-synchronous pins by default.
If you want to change the behavior, you need to use the SetDPinAsSync
or SetIoPinAsSync statement in the clock tree specification file,
or use the setCTSMode -traceDPinAsLeaf {true|false} command,
or use the setCTSMode -traceIoPinAsLeaf {true|false} command
before specifyClockTree command.

*** End specifyClockTree (cpu=0:00:00.0, real=0:00:00.0, mem=557.1M) ***
*** End createClockTreeSpec (cpu=0:00:00.1, real=0:00:00.0, mem=557.1M) ***
<CMD> specifyClockTree -clkfile encounter.cts
Redoing specifyClockTree ...
Checking spec file integrity...
**WARN: (ENCCK-3217):	'specifyClockTree -clkfile' is obsolete. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use 'specifyClockTree -file'.

Reading clock tree spec file 'encounter.cts' ...

**WARN: (ENCCK-661):	Clock clks.clk has multiple definitions in the clock tree specification file.

****** AutoClockRootPin ******
AutoClockRootPin 1: clks.clk
# NoGating         NO
# SetDPinAsSync    NO
# SetIoPinAsSync   NO
# SetAsyncSRPinAsSync   NO
# SetTriStEnPinAsSync   NO
# SetBBoxPinAsSync   NO
# RouteClkNet      YES
# PostOpt          YES
# RouteType        FE_CTS_DEFAULT
# LeafRouteType    FE_CTS_DEFAULT_LEAF

***** !! NOTE !! *****

CTS treats D-pins and I/O pins as non-synchronous pins by default.
If you want to change the behavior, you need to use the SetDPinAsSync
or SetIoPinAsSync statement in the clock tree specification file,
or use the setCTSMode -traceDPinAsLeaf {true|false} command,
or use the setCTSMode -traceIoPinAsLeaf {true|false} command
before specifyClockTree command.

*** End specifyClockTree (cpu=0:00:00.0, real=0:00:00.0, mem=557.1M) ***
<CMD> ckSynthesis -rguide cts.rguide -report report.ctsrpt -macromodel report.ctsmdl -fix_added_buffers
Redoing specifyClockTree ...
Checking spec file integrity...


ckSynthesis Option :  -rguide cts.rguide -report report.ctsrpt -macromodel report.ctsmdl -fix_added_buffers 
***** Allocate Placement Memory Finished (MEM: 557.070M)

Start to trace clock trees ...
*** Begin Tracer (mem=557.1M) ***
**WARN: (ENCCK-767):	Find clock buffer FECTS_clks_clk___L1_I0 in the clock tree.
**WARN: (ENCCK-209):	Clock clks.clk has been synthesized.
*** End Tracer (mem=557.1M) ***
**WARN: (ENCCK-719):	No clock tree has been synthesized.
*** End ckSynthesis (cpu=0:00:00.5, real=0:00:01.0, mem=557.1M) ***
<CMD> trialRoute -highEffort -guide cts.rguide
*** Starting trialRoute (mem=557.1M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -highEffort -handlePreroute -keepMarkedOptRoutes -guide cts.rguide -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1448645 1438780)
coreBox:    (40280 40280) (1408645 1398780)
There are 85 prerouted nets with extraSpace.

Phase 0 route (using Routing Guide) (0:00:00.0 557.1M):
Number of multi-gpin terms=1276, multi-gpins=3532, moved blk term=0/0

Phase 1a route (0:00:00.2 557.1M):
Est net length = 1.185e+06um = 5.594e+05H + 6.254e+05V
Usage: (12.2%H 12.8%V) = (6.392e+05um 9.295e+05um) = (666946 377501)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1b route (0:00:00.2 557.1M):
Usage: (12.2%H 12.8%V) = (6.383e+05um 9.296e+05um) = (665979 377501)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1c route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665437 377505)
Overflow: 14 = 0 (0.00% H) + 14 (0.01% V)

Phase 1d route (0:00:00.2 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665438 377505)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1e route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665438 377507)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1f route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665446 377510)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Phase 1g route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665446 377510)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665446 377510)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	20	 0.01%
  2:	0	 0.00%	38	 0.02%
  3:	0	 0.00%	655	 0.30%
  4:	0	 0.00%	1373	 0.62%
  5:	0	 0.00%	1427	 0.65%
  6:	0	 0.00%	3059	 1.39%
  7:	1	 0.00%	5294	 2.41%
  8:	1	 0.00%	9350	 4.25%
  9:	15	 0.01%	16217	 7.38%
 10:	17	 0.01%	25173	11.45%
 11:	55	 0.03%	34828	15.85%
 12:	3810	 1.73%	44298	20.16%
 13:	4024	 1.83%	33778	15.37%
 14:	672	 0.31%	19922	 9.06%
 15:	2732	 1.24%	14316	 6.51%
 16:	3211	 1.46%	7306	 3.32%
 17:	4783	 2.18%	75	 0.03%
 18:	9472	 4.31%	0	 0.00%
 19:	11373	 5.17%	0	 0.00%
 20:	179614	81.72%	2628	 1.20%

Global route (cpu=1.1s real=1.0s 557.1M)
Phase 1l route (0:00:01.5 557.1M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (12.2%H 12.9%V) = (6.423e+05um 9.408e+05um) = (670043 382093)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	23	 0.01%
  2:	0	 0.00%	64	 0.03%
  3:	0	 0.00%	721	 0.33%
  4:	0	 0.00%	1488	 0.68%
  5:	0	 0.00%	1638	 0.75%
  6:	0	 0.00%	3260	 1.48%
  7:	1	 0.00%	5383	 2.45%
  8:	1	 0.00%	9344	 4.25%
  9:	18	 0.01%	16098	 7.32%
 10:	23	 0.01%	25021	11.38%
 11:	60	 0.03%	34667	15.77%
 12:	3823	 1.74%	44201	20.11%
 13:	4043	 1.84%	33680	15.32%
 14:	724	 0.33%	19874	 9.04%
 15:	2792	 1.27%	14303	 6.51%
 16:	3251	 1.48%	7290	 3.32%
 17:	4909	 2.23%	74	 0.03%
 18:	9498	 4.32%	0	 0.00%
 19:	11506	 5.24%	0	 0.00%
 20:	179131	81.50%	2628	 1.20%



*** Completed Phase 1 route (0:00:03.0 557.1M) ***


Total length: 1.237e+06um, number of vias: 208837
M1(H) length: 5.963e+03um, number of vias: 101661
M2(V) length: 4.739e+05um, number of vias: 92553
M3(H) length: 5.615e+05um, number of vias: 13153
M4(V) length: 1.633e+05um, number of vias: 756
M5(H) length: 8.048e+03um, number of vias: 543
M6(V) length: 2.371e+04um, number of vias: 78
M7(H) length: 2.417e+01um, number of vias: 47
M8(V) length: 1.810e+01um, number of vias: 27
M9(H) length: 2.860e+00um, number of vias: 19
M10(V) length: 2.080e+01um
*** Completed Phase 2 route (0:00:01.6 557.1M) ***

*** Finished all Phases (cpu=0:00:04.7 mem=557.1M) ***
Peak Memory Usage was 557.1M 
*** Finished trialRoute (cpu=0:00:05.1 mem=557.1M) ***

<CMD> extractRC
Extraction called for design 'eth_core' of instances=215663 and nets=34847 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.3  Real Time: 0:00:00.0  MEM: 557.070M)
<CMD> reportClockTree -postRoute -localSkew -report skew.post_troute_local.ctsrpt
Redoing specifyClockTree ...
Checking spec file integrity...


reportClockTree Option :  -postRoute -localSkew -report skew.post_troute_local.ctsrpt 
*** Look For Reconvergent Clock Component ***
The clock tree clks.clk has no reconvergent cell.

Searching for sequentially adjacent registers for clock tree 'clks.clk' ...
..........|..........|..........|........
Total number of adjacent register pair is 383144.

#
# Mode                : Setup
# Library Name        : gscl45nm
# Operating Condition : typical
# Process             : 1
# Voltage             : 1.1
# Temperature         : 27
#
********** Clock clks.clk Post-Route Timing Analysis **********
Nr. of Subtrees                : 1
Nr. of Sinks                   : 3566
Nr. of Buffer                  : 84
Nr. of Level (including gates) : 4
Root Rise Input Tran           : 120(ps)
Root Fall Input Tran           : 120(ps)
Max trig. edge delay at sink(R): tx_core/tx_crc/crcpkt1/data48_d_reg[42]/CLK 666.1(ps)
Min trig. edge delay at sink(R): tx_core/axi_master/link_datain_2_d_reg[23]/CLK 489.5(ps)


                                 (Actual)               (Required)          
Rise Phase Delay               : 489.5~666.1(ps)        0~10(ps)            
Fall Phase Delay               : 474.1~650.6(ps)        0~10(ps)            
Trig. Edge Skew                : 176.6(ps)              108(ps)             
Rise Skew                      : 176.6(ps)              
Fall Skew                      : 176.5(ps)              
Max. Rise Buffer Tran.         : 326.8(ps)              200(ps)             
Max. Fall Buffer Tran.         : 275.9(ps)              200(ps)             
Max. Rise Sink Tran.           : 345.3(ps)              200(ps)             
Max. Fall Sink Tran.           : 292.1(ps)              200(ps)             
Min. Rise Buffer Tran.         : 93.7(ps)               0(ps)               
Min. Fall Buffer Tran.         : 87.2(ps)               0(ps)               
Min. Rise Sink Tran.           : 180.2(ps)              0(ps)               
Min. Fall Sink Tran.           : 174.3(ps)              0(ps)               


**** Local Skew Report ****
Total number of adjacent register pair : 383144                 

Max. Local Skew                : 166.2(ps)              
  tx_core/tx_crc/crcpkt1/data56_d_reg[15]/CLK(R)->
  tx_core/tx_crc/crcpkt1/crcin40_d_reg[15]/CLK(R)


Generating Clock Analysis Report skew.post_troute_local.ctsrpt ....
Clock Analysis (CPU Time 0:00:01.3)


*** End reportClockTree (cpu=0:00:01.3, real=0:00:03.0, mem=557.1M) ***
<CMD> reportClockTree -postRoute -report report.post_troute.ctsrpt
Redoing specifyClockTree ...
Checking spec file integrity...


reportClockTree Option :  -postRoute -report report.post_troute.ctsrpt 
*** Look For Reconvergent Clock Component ***
The clock tree clks.clk has no reconvergent cell.

#
# Mode                : Setup
# Library Name        : gscl45nm
# Operating Condition : typical
# Process             : 1
# Voltage             : 1.1
# Temperature         : 27
#
********** Clock clks.clk Post-Route Timing Analysis **********
Nr. of Subtrees                : 1
Nr. of Sinks                   : 3566
Nr. of Buffer                  : 84
Nr. of Level (including gates) : 4
Root Rise Input Tran           : 120(ps)
Root Fall Input Tran           : 120(ps)
Max trig. edge delay at sink(R): tx_core/tx_crc/crcpkt1/data48_d_reg[42]/CLK 666.1(ps)
Min trig. edge delay at sink(R): tx_core/axi_master/link_datain_2_d_reg[23]/CLK 489.5(ps)


                                 (Actual)               (Required)          
Rise Phase Delay               : 489.5~666.1(ps)        0~10(ps)            
Fall Phase Delay               : 474.1~650.6(ps)        0~10(ps)            
Trig. Edge Skew                : 176.6(ps)              108(ps)             
Rise Skew                      : 176.6(ps)              
Fall Skew                      : 176.5(ps)              
Max. Rise Buffer Tran.         : 326.8(ps)              200(ps)             
Max. Fall Buffer Tran.         : 275.9(ps)              200(ps)             
Max. Rise Sink Tran.           : 345.3(ps)              200(ps)             
Max. Fall Sink Tran.           : 292.1(ps)              200(ps)             
Min. Rise Buffer Tran.         : 93.7(ps)               0(ps)               
Min. Fall Buffer Tran.         : 87.2(ps)               0(ps)               
Min. Rise Sink Tran.           : 180.2(ps)              0(ps)               
Min. Fall Sink Tran.           : 174.3(ps)              0(ps)               


Generating Clock Analysis Report report.post_troute.ctsrpt ....
Clock Analysis (CPU Time 0:00:00.2)


*** End reportClockTree (cpu=0:00:00.2, real=0:00:00.0, mem=557.1M) ***
<CMD> setAnalysisMode -setup -async -skew -autoDetectClockTree
**WARN: (ENCTCM-70):	Option "-setup" for command setAnalysisMode is obsolete and has been replaced by "-checkType setup". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-checkType setup".
**WARN: (ENCTCM-70):	Option "-async" for command setAnalysisMode is obsolete and has been replaced by "-asyncChecks async". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-asyncChecks async".
**WARN: (ENCTCM-70):	Option "-skew" for command setAnalysisMode is obsolete and has been replaced by "-skew true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-skew true".
**WARN: (ENCTCM-70):	Option "-autoDetectClockTree" for command setAnalysisMode is obsolete and has been replaced by "-clockPropagation autoDetectClockTree". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-clockPropagation autoDetectClockTree".
**WARN: (ENCSYC-1870):	setAnalysisMode -clockPropagation autoDetectClockTree not supported in CTE timing mode, mapping it to setAnalysisMode -clockPropagation sdcControl
{DETAILMESSAGE}<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.3.cts
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 557.1M, InitMEM = 557.1M)
Number of Loop : 0
Start delay calculation (mem=557.070M)...
Delay calculation completed. (cpu=0:00:01.5 real=0:00:01.0 mem=557.070M 0)
*** CDM Built up (cpu=0:00:02.1  real=0:00:02.0  mem= 557.1M) ***
<CMD> setOptMode -highEffort -fixDrc -addPortAsNeeded -incrTrialRoute -restruct -topomap
**WARN: (ENCTCM-70):	Option "-fixDrc" for command setOptMode is obsolete and has been replaced by "-fixDrc true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-fixDrc true".
**WARN: (ENCTCM-70):	Option "-addPortAsNeeded" for command setOptMode is obsolete and has been replaced by "-addPortAsNeeded true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-addPortAsNeeded true".
**WARN: (ENCTCM-70):	Option "-restruct" for command setOptMode is obsolete and has been replaced by "-restruct true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-restruct true".
**WARN: (ENCTCM-70):	Option "-topomap" for command setOptMode is obsolete and has been replaced by "-topoMap true". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-topoMap true".
**WARN: (ENCTCM-70):	Option "-highEffort" for command setOptMode is obsolete and has been replaced by "-effort high". The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script to use "-effort high".
<CMD> optDesign -postCTS -drv
*info: Enabling Trial Route flow for DRV Fixing.
**optDesign ... cpu = 0:00:00, real = 0:00:00, mem = 557.1M **
*** optDesign -postCTS ***
DRC Margin: user margin 0.0; extra margin 0.2
Hold Target Slack: user slack 0.0
Setup Target Slack: user slack 0.0; extra slack 0.1
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath true
*info: Setting setup target slack to 0.100
*info: Hold target slack is 0.000
*** CTE mode ***
*** Starting trialRoute (mem=557.1M) ***

There are 0 pin guide points passed to trialRoute.
Start to check current routing status for nets...
All nets are already routed correctly.
*** Finishing trialRoute (mem=557.1M) ***


------------------------------------------------------------
             Initial Summary                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -11.256 |
|           TNS (ns):|-17820.0 |
|    Violating Paths:|  5811   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.183   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.286%
------------------------------------------------------------
**optDesign ... cpu = 0:00:04, real = 0:00:04, mem = 557.1M **
*** Starting optimizing excluded clock nets MEM= 557.1M) ***
*info: No excluded clock nets to be optimized.
*** Completed optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 557.1M) ***
*** Starting optimizing excluded clock nets MEM= 557.1M) ***
*info: No excluded clock nets to be optimized.
*** Completed optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 557.1M) ***
*info: Start fixing DRV (Mem = 557.07M) ...
*info: Options = -maxCap -maxTran -noMaxFanout -noSensitivity -backward -reduceBuffer -maxIter 2
*info: Start fixing DRV iteration 1 ...
*** Starting dpFixDRCViolation (557.1M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=557.1M) ***
*info: There are 2 candidate Buffer cells
*info: There are 4 candidate Inverter cells
Initializing placement sections/sites ...
Density before buffering = 0.602855
Start fixing design rules ... (0:00:00.8 557.1M)
Done fixing design rule (0:00:01.0 557.1M)

Summary:
1 buffer added on 1 net (with 0 driver resized)

Density after buffering = 0.602859
Design contains fractional 20 cells.
default core: bins with density >  0.75 =    0 % ( 0 / 784 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:11.4, Real Time = 0:00:12.0
move report: preRPlace moves 2 insts, mean move: 0.38 um, max move: 0.38 um
	max move on inst (tx_core/tx_crc/crcpkt2/FE_OFC1526_n2696): (592.80, 294.31) --> (593.18, 294.31)
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 2 insts, mean move: 0.38 um, max move: 0.38 um
	max move on inst (tx_core/tx_crc/crcpkt2/FE_OFC1526_n2696): (592.80, 294.31) --> (593.18, 294.31)
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.38 um
  inst (tx_core/tx_crc/crcpkt2/FE_OFC1526_n2696) with max move: (592.8, 294.31) -> (593.18, 294.31)
  mean    (X+Y) =         0.38 um
Total instances moved : 2
*** cpu=0:00:11.6   mem=557.1M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:13.8 557.1M)

*** Starting trialRoute (mem=557.1M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1448645 1438780)
coreBox:    (40280 40280) (1408645 1398780)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1276, multi-gpins=3532, moved blk term=0/0

Phase 1a route (0:00:00.2 557.1M):
Est net length = 1.185e+06um = 5.594e+05H + 6.254e+05V
Usage: (12.2%H 12.8%V) = (6.392e+05um 9.296e+05um) = (666949 377502)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1b route (0:00:00.2 557.1M):
Usage: (12.2%H 12.8%V) = (6.383e+05um 9.296e+05um) = (665982 377502)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1c route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665440 377506)
Overflow: 14 = 0 (0.00% H) + 14 (0.01% V)

Phase 1d route (0:00:00.2 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665441 377506)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1e route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665441 377508)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1f route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665449 377511)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	20	 0.01%
  2:	0	 0.00%	38	 0.02%
  3:	0	 0.00%	655	 0.30%
  4:	0	 0.00%	1373	 0.62%
  5:	0	 0.00%	1427	 0.65%
  6:	0	 0.00%	3061	 1.39%
  7:	1	 0.00%	5295	 2.41%
  8:	1	 0.00%	9353	 4.26%
  9:	15	 0.01%	16216	 7.38%
 10:	17	 0.01%	25171	11.45%
 11:	55	 0.03%	34824	15.84%
 12:	3810	 1.73%	44294	20.15%
 13:	4024	 1.83%	33776	15.37%
 14:	672	 0.31%	19924	 9.07%
 15:	2732	 1.24%	14321	 6.52%
 16:	3211	 1.46%	7306	 3.32%
 17:	4784	 2.18%	75	 0.03%
 18:	9471	 4.31%	0	 0.00%
 19:	11375	 5.18%	0	 0.00%
 20:	179612	81.72%	2628	 1.20%


Global route (cpu=1.0s real=1.0s 557.1M)
Phase 1l route (0:00:01.4 557.1M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (12.2%H 12.9%V) = (6.424e+05um 9.408e+05um) = (670049 382098)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	23	 0.01%
  2:	0	 0.00%	64	 0.03%
  3:	0	 0.00%	721	 0.33%
  4:	0	 0.00%	1488	 0.68%
  5:	0	 0.00%	1638	 0.75%
  6:	0	 0.00%	3262	 1.48%
  7:	1	 0.00%	5385	 2.45%
  8:	1	 0.00%	9348	 4.25%
  9:	18	 0.01%	16095	 7.32%
 10:	23	 0.01%	25020	11.38%
 11:	60	 0.03%	34662	15.77%
 12:	3823	 1.74%	44197	20.11%
 13:	4043	 1.84%	33677	15.32%
 14:	724	 0.33%	19878	 9.04%
 15:	2792	 1.27%	14307	 6.51%
 16:	3251	 1.48%	7290	 3.32%
 17:	4911	 2.23%	74	 0.03%
 18:	9497	 4.32%	0	 0.00%
 19:	11507	 5.24%	0	 0.00%
 20:	179129	81.50%	2628	 1.20%



*** Completed Phase 1 route (0:00:02.9 557.1M) ***


Total length: 1.236e+06um, number of vias: 208847
M1(H) length: 5.964e+03um, number of vias: 101663
M2(V) length: 4.739e+05um, number of vias: 92555
M3(H) length: 5.615e+05um, number of vias: 13159
M4(V) length: 1.633e+05um, number of vias: 756
M5(H) length: 8.047e+03um, number of vias: 543
M6(V) length: 2.371e+04um, number of vias: 78
M7(H) length: 2.417e+01um, number of vias: 47
M8(V) length: 1.810e+01um, number of vias: 27
M9(H) length: 2.860e+00um, number of vias: 19
M10(V) length: 2.080e+01um
*** Completed Phase 2 route (0:00:01.6 557.1M) ***

*** Finished all Phases (cpu=0:00:04.6 mem=557.1M) ***
Peak Memory Usage was 557.1M 
*** Finished trialRoute (cpu=0:00:05.0 mem=557.1M) ***

Extraction called for design 'eth_core' of instances=215664 and nets=34848 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 557.070M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 557.1M, InitMEM = 557.1M)
Number of Loop : 0
Start delay calculation (mem=557.070M)...
Delay calculation completed. (cpu=0:00:01.5 real=0:00:02.0 mem=557.070M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 557.1M) ***
*info: DRV Fixing Iteration 1.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info: early stop due to unchanged DRVs
*info: Start fixing DRV while maintaining existing placement ...
*** Starting dpFixDRCViolation (557.1M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*** Starting multi-driver net buffering ***
*summary: 0 non-ignored multi-driver nets.
*** Finished buffering multi-driver nets (CPU=0:00:00.0, MEM=557.1M) ***
Start fixing design rules ... (0:00:00.7 557.1M)
Done fixing design rule (0:00:01.4 557.1M)

Summary:
2 buffers added on 2 nets (with 0 driver resized)

Density after buffering = 0.602871
Design contains fractional 20 cells.
default core: bins with density >  0.75 =    0 % ( 0 / 784 )
Design contains fractional 20 cells.
Starting refinePlace ...
move report: placeLevelShifters moves 0 insts, mean move: 0.00 um, max move: 0.00 um
  Spread Effort: high, pre-route mode.
Finished Phase I. CPU Time = 0:00:10.7, Real Time = 0:00:11.0
move report: preRPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: rPlace moves 0 insts, mean move: 0.00 um, max move: 0.00 um
move report: overall moves 0 insts, mean move: 0.00 um, max move: 0.00 um
Statistics of distance of Instance movement in detailed placement:
  maximum (X+Y) =         0.00 um
  mean    (X+Y) =         0.00 um
Total instances moved : 0
*** cpu=0:00:11.0   mem=557.1M  mem(used)=0.0M***
*** Completed dpFixDRCViolation (0:00:13.4 557.1M)

*** Starting trialRoute (mem=557.1M) ***

There are 0 pin guide points passed to trialRoute.
Options:  -handlePreroute -keepMarkedOptRoutes -noPinGuide

Nr of prerouted/Fixed nets = 85
There are 85 nets with 1 extra space.
routingBox: (0 0) (1448645 1438780)
coreBox:    (40280 40280) (1408645 1398780)
There are 85 prerouted nets with extraSpace.
Number of multi-gpin terms=1276, multi-gpins=3532, moved blk term=0/0

Phase 1a route (0:00:00.2 557.1M):
Est net length = 1.185e+06um = 5.594e+05H + 6.254e+05V
Usage: (12.2%H 12.8%V) = (6.392e+05um 9.296e+05um) = (666951 377508)
Obstruct: 0 = 0 (0.0%H) + 0 (0.0%V)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1b route (0:00:00.2 557.1M):
Usage: (12.2%H 12.8%V) = (6.383e+05um 9.296e+05um) = (665984 377508)
Overflow: 15 = 0 (0.00% H) + 15 (0.01% V)

Phase 1c route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665442 377512)
Overflow: 14 = 0 (0.00% H) + 14 (0.01% V)

Phase 1d route (0:00:00.2 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665443 377512)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1e route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665443 377514)
Overflow: 13 = 0 (0.00% H) + 13 (0.01% V)

Phase 1f route (0:00:00.1 557.1M):
Usage: (12.1%H 12.8%V) = (6.378e+05um 9.296e+05um) = (665451 377517)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	20	 0.01%
  2:	0	 0.00%	38	 0.02%
  3:	0	 0.00%	655	 0.30%
  4:	0	 0.00%	1373	 0.62%
  5:	0	 0.00%	1428	 0.65%
  6:	0	 0.00%	3060	 1.39%
  7:	1	 0.00%	5295	 2.41%
  8:	1	 0.00%	9354	 4.26%
  9:	15	 0.01%	16216	 7.38%
 10:	17	 0.01%	25171	11.45%
 11:	55	 0.03%	34823	15.84%
 12:	3810	 1.73%	44294	20.15%
 13:	4024	 1.83%	33776	15.37%
 14:	672	 0.31%	19926	 9.07%
 15:	2732	 1.24%	14319	 6.52%
 16:	3211	 1.46%	7306	 3.32%
 17:	4784	 2.18%	75	 0.03%
 18:	9471	 4.31%	0	 0.00%
 19:	11376	 5.18%	0	 0.00%
 20:	179611	81.72%	2628	 1.20%


Global route (cpu=1.0s real=1.0s 557.1M)
Phase 1l route (0:00:01.4 557.1M):
There are 85 prerouted nets with extraSpace.


*** After '-updateRemainTrks' operation: 

Usage: (12.2%H 12.9%V) = (6.424e+05um 9.408e+05um) = (670052 382105)
Overflow: 9 = 0 (0.00% H) + 9 (0.00% V)

Congestion distribution:

Remain	cntH		cntV
--------------------------------------
 -4:	0	 0.00%	1	 0.00%
 -3:	0	 0.00%	1	 0.00%
 -2:	0	 0.00%	3	 0.00%
 -1:	0	 0.00%	1	 0.00%
--------------------------------------
  0:	0	 0.00%	17	 0.01%
  1:	0	 0.00%	23	 0.01%
  2:	0	 0.00%	64	 0.03%
  3:	0	 0.00%	721	 0.33%
  4:	0	 0.00%	1488	 0.68%
  5:	0	 0.00%	1639	 0.75%
  6:	0	 0.00%	3261	 1.48%
  7:	1	 0.00%	5385	 2.45%
  8:	1	 0.00%	9349	 4.25%
  9:	18	 0.01%	16095	 7.32%
 10:	23	 0.01%	25021	11.38%
 11:	60	 0.03%	34660	15.77%
 12:	3823	 1.74%	44197	20.11%
 13:	4043	 1.84%	33677	15.32%
 14:	724	 0.33%	19880	 9.05%
 15:	2792	 1.27%	14305	 6.51%
 16:	3251	 1.48%	7290	 3.32%
 17:	4911	 2.23%	74	 0.03%
 18:	9496	 4.32%	0	 0.00%
 19:	11509	 5.24%	0	 0.00%
 20:	179128	81.50%	2628	 1.20%



*** Completed Phase 1 route (0:00:02.9 557.1M) ***


Total length: 1.237e+06um, number of vias: 208856
M1(H) length: 5.964e+03um, number of vias: 101667
M2(V) length: 4.739e+05um, number of vias: 92559
M3(H) length: 5.615e+05um, number of vias: 13160
M4(V) length: 1.634e+05um, number of vias: 756
M5(H) length: 8.047e+03um, number of vias: 543
M6(V) length: 2.371e+04um, number of vias: 78
M7(H) length: 2.417e+01um, number of vias: 47
M8(V) length: 1.810e+01um, number of vias: 27
M9(H) length: 2.860e+00um, number of vias: 19
M10(V) length: 2.080e+01um
*** Completed Phase 2 route (0:00:01.6 557.1M) ***

*** Finished all Phases (cpu=0:00:04.6 mem=557.1M) ***
Peak Memory Usage was 557.1M 
*** Finished trialRoute (cpu=0:00:05.0 mem=557.1M) ***

Extraction called for design 'eth_core' of instances=215666 and nets=34850 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:01.0  MEM: 557.070M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 557.1M, InitMEM = 557.1M)
Number of Loop : 0
Start delay calculation (mem=557.070M)...
Delay calculation completed. (cpu=0:00:01.5 real=0:00:02.0 mem=557.070M 0)
*** CDM Built up (cpu=0:00:02.0  real=0:00:02.0  mem= 557.1M) ***
*info: DRV Fixing Iteration 2.
*info: Remaining violations:
*info:   Max cap violations:    7858
*info:   Max tran violations:   0
*info:   Prev Max cap violations:    7858
*info:   Prev Max tran violations:   0
*info:
*info: Completed fixing DRV (CPU Time = 0:00:43, Mem = 557.07M).

------------------------------------------------------------
     Summary (cpu=0.71min real=0.72min mem=557.1M)                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -11.256 |
|           TNS (ns):|-17818.6 |
|    Violating Paths:|  5811   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.183   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.287%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:48, real = 0:00:48, mem = 557.1M **
Reported timing to dir ./timingReports
**optDesign ... cpu = 0:00:48, real = 0:00:48, mem = 557.1M **

------------------------------------------------------------
     optDesign Final Summary                             
------------------------------------------------------------

+--------------------+---------+---------+---------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | in2reg  | reg2out | in2out  | clkgate |
+--------------------+---------+---------+---------+---------+---------+---------+
|           WNS (ns):| -11.256 | -10.242 | -11.256 | -2.593  | -3.035  |   N/A   |
|           TNS (ns):|-17818.6 | -9282.0 |-16791.4 |-409.375 |-383.008 |   N/A   |
|    Violating Paths:|  5811   |  3315   |  5059   |   294   |   258   |   N/A   |
|          All Paths:|  7370   |  3566   |  6377   |   522   |   341   |   N/A   |
+--------------------+---------+---------+---------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.183   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 60.287%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------
**optDesign ... cpu = 0:00:50, real = 0:00:51, mem = 557.1M **
**WARN: (ENCOPT-3195):	Changed analysis mode: setAnalysisMode -clkSrcPath true
*** Finished optDesign ***
<CMD_INTERNAL> initECO ipo2.txt
<CMD> setExtractRCMode -default -assumeMetFill
**WARN: (ENCEXT-1086):	Option '-default' is obsolete. Use '-engine preRoute' to set extraction engine. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script and configuration file to use recommended convention.
**WARN: (ENCEXT-3493):	Extraction mode changed by calling extraction setup command 'setExtractRCMode'. Therefore, parasitic data in the tool generated as per previous mode is deleted. Call of extractRC/spefIn will generate/bring parasitic data in the tool as per current mode.
<CMD> extractRC
Extraction called for design 'eth_core' of instances=215666 and nets=34850 using extraction engine 'preRoute' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Default RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
RCMode: Default, with Assume Metal Fill 1.00
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res Scaling Factor     : 1.00000
Shrink Factor                : 1.00000
Default RC extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Default RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:01.0  MEM: 557.070M)
**ERROR: (ENCOPT-513):	'fixSetupViolation' is obsolete. Use the 'optDesign' command instead
<CMD> setExtractRCMode -detail -assumeMetFill
**WARN: (ENCEXT-1082):	Option '-detail' is obsolete. Use '-engine postRoute [-effortLevel low]' to set extraction engine, which is based on recommended convention '-engine postRoute [-effortLevel <low|medium|high|signoff>]'. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script and configuration file to use recommended convention.
**WARN: (ENCEXT-3493):	Extraction mode changed by calling extraction setup command 'setExtractRCMode'. Therefore, parasitic data in the tool generated as per previous mode is deleted. Call of extractRC/spefIn will generate/bring parasitic data in the tool as per current mode.
**WARN: (ENCEXT-3410):	Option -assumeMetalFill is recommended only in default extraction mode. It will use the basic cap table instead of extnded cap table in detail or TQRC/IQRC mode.
<CMD> extractRC
Extraction called for design 'eth_core' of instances=215666 and nets=34850 using extraction engine 'postRoute' at effort level 'low' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Detail RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
**WARN: (ENCEXT-3032):	Since cap. table file was not provided, it will be created internally with the following process info:
* Layer Id             : 1 - M1
      Thickness        : 0.6
      Min Width        : 0.065
      Layer Dielectric : 4.1
* Layer Id             : 2 - M2
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 3 - M3
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 4 - M4
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 5 - M5
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 6 - M6
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 7 - M7
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 8 - M8
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 9 - M9
      Thickness        : 0.6
      Min Width        : 0.8
      Layer Dielectric : 4.1
* Layer Id             : 10 - M10
      Thickness        : 1
      Min Width        : 0.8
      Layer Dielectric : 4.1
extractDetailRC Option : -outfile ./eth_core_xWcbHR_24199.rcdb.d -maxResLength 200  -basic -newAssumeMetFill
Assumed metal fill uses the following parameters:
              Active Spacing      Min. Width
                [microns]         [microns]
**WARN: (ENCEXT-3087):	Fill active spacing for layer M1 is not specified, it will use  0.600 microns.
  Layer M1        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M2 is not specified, it will use  0.600 microns.
  Layer M2        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M3 is not specified, it will use  0.600 microns.
  Layer M3        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M4 is not specified, it will use  0.600 microns.
  Layer M4        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M5 is not specified, it will use  0.600 microns.
  Layer M5        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M6 is not specified, it will use  0.600 microns.
  Layer M6        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M7 is not specified, it will use  0.600 microns.
  Layer M7        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M8 is not specified, it will use  0.600 microns.
  Layer M8        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M9 is not specified, it will use  0.600 microns.
  Layer M9        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M10 is not specified, it will use  0.600 microns.
  Layer M10        0.600             0.400 
RC Mode: Detail [Assume Metal Fill, LEF Resistances]
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Coupling Cap. Scaling Factor : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res. Scaling Factor    : 1.00000
Shrink Factor                : 1.00000
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 557.1M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for storing RC.
Extracted 10.0006% (CPU Time= 0:00:00.5  MEM= 557.1M)
Extracted 20.0005% (CPU Time= 0:00:00.6  MEM= 557.1M)
Extracted 30.0004% (CPU Time= 0:00:00.8  MEM= 557.1M)
Extracted 40.0006% (CPU Time= 0:00:01.0  MEM= 557.1M)
Extracted 50.0005% (CPU Time= 0:00:01.4  MEM= 557.1M)
Extracted 60.0004% (CPU Time= 0:00:02.3  MEM= 557.1M)
Extracted 70.0007% (CPU Time= 0:00:02.4  MEM= 557.1M)
Extracted 80.0006% (CPU Time= 0:00:02.5  MEM= 557.1M)
Extracted 90.0005% (CPU Time= 0:00:02.8  MEM= 557.1M)
Extracted 100% (CPU Time= 0:00:03.6  MEM= 557.1M)
Nr. Extracted Resistors     : 490288
Nr. Extracted Ground Cap.   : 524286
Nr. Extracted Coupling Cap. : 1309196
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Filtering XCap in 'relativeOnly' mode using values relative_c_threshold=0.03 and total_c_threshold=5fF.
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 557.1M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb_Filter.rcdb.d/header.seq' for storing RC.
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 34056 times net's RC data read were performed.
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Detail RC Extraction DONE (CPU Time: 0:00:04.9  Real Time: 0:00:09.0  MEM: 557.070M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 557.1M, InitMEM = 557.1M)
Number of Loop : 0
Start delay calculation (mem=557.070M)...
delayCal using detail RC...
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
RC Database In Completed (CPU Time= 0:00:00.3  MEM= 557.1M)
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 34056 times net's RC data read were performed.
Delay calculation completed. (cpu=0:00:01.6 real=0:00:02.0 mem=557.070M 0)
*** CDM Built up (cpu=0:00:02.2  real=0:00:02.0  mem= 557.1M) ***
<CMD_INTERNAL> endECO
<CMD_INTERNAL> cleanupECO
<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.4.ipo2
<CMD> addFiller -cell FILL -prefix FILL -fillBoundary
Design contains fractional 20 cells.
*INFO: Adding fillers to top-module.
*INFO:   Added 190759 filler insts (cell FILL / prefix FILL).
*INFO: Total 190759 filler insts added - prefix FILL (CPU: 0:00:00.9).
*** Applied 6 GNC rules (cpu = 0:00:00.0)
*INFO: Checking for DRC violations on added fillers.
*INFO: Iteration 0-#1, Found 0 DRC violation  (real: 0:00:05.0).
*INFO: Adding fillers to top-module.
*INFO:   Added 0 filler inst of any cell-type.
*** Applied 6 GNC rules (cpu = 0:00:00.0)
*INFO: End DRC Checks. (real: 0:00:05.0 ).
<CMD> globalNetConnect vdd -type tiehi
<CMD> globalNetConnect vdd -type net -net 1'b1
**ERROR: (ENCDB-1225):	Cannot find net '1'b1' in the design.
<CMD> globalNetConnect vdd -type pgpin -pin vdd -override
<CMD> globalNetConnect gnd -type tielo
<CMD> globalNetConnect gnd -type net -net 1'b0
**ERROR: (ENCDB-1225):	Cannot find net '1'b0' in the design.
<CMD> globalNetConnect gnd -type pgpin -pin gnd -override
<CMD> setNanoRouteMode -envNumberFailLimit 11
<CMD> globalDetailRoute

globalDetailRoute

#Start globalDetailRoute on Sun Nov 13 17:44:54 2016
#
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 627.00 (Mb)
#WARNING (NRDB-976) The step 0.280000 for preferred direction tracks is smaller than the pitch 0.285000 for LAYER metal4. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 0.280000 for preferred direction tracks is smaller than the pitch 0.285000 for LAYER metal6. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 0.840000 for preferred direction tracks is smaller than the pitch 0.855000 for LAYER metal8. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 1.680000 for preferred direction tracks is smaller than the pitch 1.710000 for LAYER metal10. This will cause routability problems for NanoRoute.
#NanoRoute Version v09.14-s029 NR110207-1105/USR65-UB
#WARNING (NREX-28) The height of the first routing layer metal1 is 0.000000. It should be larger than 0.000000
#WARNING (NREX-29) The metal thickness of routing layer metal1 is 0.000000. It should be larger than 0.0. Add this to the technology information for better accuracy.
#WARNING (NREX-30) Please also check the height and metal thickness values for the routing layers heigher than routing layer metal1
#WARNING (NREX-4) No Extended Cap Table was imported. Not enough process information was provided either and default Extended Cap Table database will be used.
#Merging special wires...
#Number of eco nets is 0
#
#Start data preparation...
#WARNING (NRGR-149) The Ggrids in congestion map do not match with the Ggrids saved in FE DB. This problem is often caused by loading the FE DB generated by older (< 5.2) version Encounter into a newer version FE DB. The Ggrids will be automatically regenerated, and the congestion map will be re-calculated.
#Auto generating G-grids with size=15 tracks, using layer metal2's pitch = 0.145.
#Using automatically generated G-grids.
#
#Data preparation is done on Sun Nov 13 17:44:58 2016
#
#Analyzing routing resource...
#Routing resource analysis is done on Sun Nov 13 17:44:59 2016
#
#  Resource Analysis:
#
#               Routing  #Total     %Gcell
#  Layer      Direction   Gcell     Blocked
#  ------------------------------------------
#  Metal 1        H      110223      24.81%
#  Metal 2        V      110223       0.80%
#  Metal 3        H      110223       0.00%
#  Metal 4        V      110223       0.93%
#  Metal 5        H      110223       2.07%
#  Metal 6        V      110223       2.06%
#  Metal 7        H      110223       0.00%
#  Metal 8        V      110223       0.00%
#  Metal 9        H      110223       0.00%
#  Metal 10       V      110223       0.02%
#  ------------------------------------------
#  Total                1102230       3.07%
#
#  85 nets (0.24%) with 1 preferred extra spacing.
#
#
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 627.00 (Mb)
#
#start global routing iteration 1...
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 627.00 (Mb)
#
#start global routing iteration 2...
#cpu time = 00:00:07, elapsed time = 00:00:07, memory = 648.00 (Mb)
#
#start global routing iteration 3...
#cpu time = 00:00:09, elapsed time = 00:00:09, memory = 651.00 (Mb)
#
#start global routing iteration 4...
#cpu time = 00:00:08, elapsed time = 00:00:08, memory = 651.00 (Mb)
#
#
#  Congestion Analysis: (blocked Gcells are excluded)
#
#                 OverCon          
#                  #Gcell    %Gcell
#     Layer           (1)   OverCon
#  --------------------------------
#   Metal 1      0(0.00%)   (0.00%)
#   Metal 2      1(0.00%)   (0.00%)
#   Metal 3      0(0.00%)   (0.00%)
#   Metal 4      0(0.00%)   (0.00%)
#   Metal 5      0(0.00%)   (0.00%)
#   Metal 6      0(0.00%)   (0.00%)
#   Metal 7      0(0.00%)   (0.00%)
#   Metal 8      0(0.00%)   (0.00%)
#   Metal 9      0(0.00%)   (0.00%)
#  Metal 10      0(0.00%)   (0.00%)
#  --------------------------------
#     Total      1(0.00%)   (0.00%)
#
#  The worst congested Gcell overcon (routing demand over resource in number of tracks) = 1
#
#Complete Global Routing.
#Total number of nets with non-default rule or having extra spacing = 85
#Total wire length = 1221232 um.
#Total half perimeter of net bounding box = 1139895 um.
#Total wire length on LAYER metal1 = 10527 um.
#Total wire length on LAYER metal2 = 462464 um.
#Total wire length on LAYER metal3 = 545524 um.
#Total wire length on LAYER metal4 = 189184 um.
#Total wire length on LAYER metal5 = 11829 um.
#Total wire length on LAYER metal6 = 527 um.
#Total wire length on LAYER metal7 = 905 um.
#Total wire length on LAYER metal8 = 38 um.
#Total wire length on LAYER metal9 = 220 um.
#Total wire length on LAYER metal10 = 13 um.
#Total number of vias = 184645
#Up-Via Summary (total 184645):
#           
#-----------------------
#  Metal 1       100974
#  Metal 2        74048
#  Metal 3         8989
#  Metal 4          355
#  Metal 5          108
#  Metal 6           78
#  Metal 7           47
#  Metal 8           27
#  Metal 9           19
#-----------------------
#                184645 
#
#Max overcon = 1 tracks.
#Total overcon = 0.00%.
#Worst layer Gcell overcon rate = 0.00%.
#Cpu time = 00:00:28
#Elapsed time = 00:00:29
#Increased memory = -1.00 (Mb)
#Total memory = 626.00 (Mb)
#Peak memory = 731.00 (Mb)
#
#Start Detail Routing.
#start initial detail routing ...
#    completing 10% with 1114 violations
#    cpu time = 00:00:07, elapsed time = 00:00:07, memory = 626.00 (Mb)
#    completing 20% with 2664 violations
#    cpu time = 00:00:18, elapsed time = 00:00:18, memory = 626.00 (Mb)
#    completing 30% with 4168 violations
#    cpu time = 00:00:28, elapsed time = 00:00:28, memory = 626.00 (Mb)
#    completing 40% with 5657 violations
#    cpu time = 00:00:39, elapsed time = 00:00:39, memory = 626.00 (Mb)
#    completing 50% with 7134 violations
#    cpu time = 00:00:50, elapsed time = 00:00:50, memory = 626.00 (Mb)
#    completing 60% with 8184 violations
#    cpu time = 00:01:00, elapsed time = 00:01:00, memory = 626.00 (Mb)
#    completing 70% with 9237 violations
#    cpu time = 00:01:10, elapsed time = 00:01:10, memory = 626.00 (Mb)
#    completing 80% with 10425 violations
#    cpu time = 00:01:20, elapsed time = 00:01:21, memory = 626.00 (Mb)
#    completing 90% with 11645 violations
#    cpu time = 00:01:31, elapsed time = 00:01:31, memory = 626.00 (Mb)
#    completing 100% with 12383 violations
#    cpu time = 00:01:38, elapsed time = 00:01:39, memory = 626.00 (Mb)
#    number of violations = 12383
#cpu time = 00:01:39, elapsed time = 00:01:39, memory = 626.00 (Mb)
#start 1st optimization iteration ...
#    completing 10% with 11200 violations
#    cpu time = 00:00:04, elapsed time = 00:00:04, memory = 626.00 (Mb)
#    completing 20% with 9973 violations
#    cpu time = 00:00:08, elapsed time = 00:00:08, memory = 626.00 (Mb)
#    completing 30% with 8746 violations
#    cpu time = 00:00:12, elapsed time = 00:00:12, memory = 626.00 (Mb)
#    completing 40% with 7585 violations
#    cpu time = 00:00:17, elapsed time = 00:00:17, memory = 626.00 (Mb)
#    completing 50% with 6397 violations
#    cpu time = 00:00:21, elapsed time = 00:00:21, memory = 626.00 (Mb)
#    completing 60% with 5189 violations
#    cpu time = 00:00:25, elapsed time = 00:00:25, memory = 626.00 (Mb)
#    completing 70% with 3993 violations
#    cpu time = 00:00:30, elapsed time = 00:00:30, memory = 626.00 (Mb)
#    completing 80% with 2761 violations
#    cpu time = 00:00:35, elapsed time = 00:00:35, memory = 626.00 (Mb)
#    completing 90% with 1584 violations
#    cpu time = 00:00:41, elapsed time = 00:00:41, memory = 626.00 (Mb)
#    completing 100% with 366 violations
#    cpu time = 00:00:46, elapsed time = 00:00:46, memory = 626.00 (Mb)
#    number of violations = 366
#cpu time = 00:00:46, elapsed time = 00:00:46, memory = 626.00 (Mb)
#start 2nd optimization iteration ...
#    number of violations = 193
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 626.00 (Mb)
#start 3rd optimization iteration ...
#    number of violations = 165
#cpu time = 00:00:01, elapsed time = 00:00:02, memory = 626.00 (Mb)
#start 4th optimization iteration ...
#    number of violations = 162
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 626.00 (Mb)
#start 5th optimization iteration ...
#    number of violations = 165
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 626.00 (Mb)
#start 6th optimization iteration ...
#    number of violations = 155
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 626.00 (Mb)
#start 7th optimization iteration ...
#    number of violations = 156
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 626.00 (Mb)
#start 8th optimization iteration ...
#    number of violations = 154
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 626.00 (Mb)
#start 9th optimization iteration ...
#    number of violations = 154
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 626.00 (Mb)
#start 10th optimization iteration ...
#    number of violations = 154
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 626.00 (Mb)
#start 11th optimization iteration ...
#    number of violations = 152
#cpu time = 00:00:04, elapsed time = 00:00:04, memory = 626.00 (Mb)
#start 12th optimization iteration ...
#    number of violations = 136
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 626.00 (Mb)
#start 13th optimization iteration ...
#    number of violations = 126
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 626.00 (Mb)
#start 14th optimization iteration ...
#    number of violations = 127
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 626.00 (Mb)
#start 15th optimization iteration ...
#    number of violations = 153
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 626.00 (Mb)
#start 16th optimization iteration ...
#    number of violations = 145
#cpu time = 00:00:05, elapsed time = 00:00:05, memory = 628.00 (Mb)
#start 17th optimization iteration ...
#    number of violations = 143
#cpu time = 00:00:05, elapsed time = 00:00:05, memory = 628.00 (Mb)
#start 18th optimization iteration ...
#    number of violations = 138
#cpu time = 00:00:04, elapsed time = 00:00:04, memory = 628.00 (Mb)
#start 19th optimization iteration ...
#    number of violations = 139
#cpu time = 00:00:05, elapsed time = 00:00:05, memory = 628.00 (Mb)
#start 20th optimization iteration ...
#    number of violations = 140
#cpu time = 00:00:04, elapsed time = 00:00:04, memory = 628.00 (Mb)
#Complete Detail Routing.
#Total number of nets with non-default rule or having extra spacing = 85
#Total wire length = 1236326 um.
#Total half perimeter of net bounding box = 1139895 um.
#Total wire length on LAYER metal1 = 39814 um.
#Total wire length on LAYER metal2 = 422187 um.
#Total wire length on LAYER metal3 = 523031 um.
#Total wire length on LAYER metal4 = 232893 um.
#Total wire length on LAYER metal5 = 16829 um.
#Total wire length on LAYER metal6 = 583 um.
#Total wire length on LAYER metal7 = 732 um.
#Total wire length on LAYER metal8 = 45 um.
#Total wire length on LAYER metal9 = 197 um.
#Total wire length on LAYER metal10 = 15 um.
#Total number of vias = 267715
#Up-Via Summary (total 267715):
#           
#-----------------------
#  Metal 1       121553
#  Metal 2       112203
#  Metal 3        32073
#  Metal 4         1566
#  Metal 5          149
#  Metal 6           78
#  Metal 7           47
#  Metal 8           27
#  Metal 9           19
#-----------------------
#                267715 
#
#Total number of DRC violations = 140
#Total number of violations on LAYER metal1 = 130
#Total number of violations on LAYER metal2 = 10
#Total number of violations on LAYER metal3 = 0
#Total number of violations on LAYER metal4 = 0
#Total number of violations on LAYER metal5 = 0
#Total number of violations on LAYER metal6 = 0
#Total number of violations on LAYER metal7 = 0
#Total number of violations on LAYER metal8 = 0
#Total number of violations on LAYER metal9 = 0
#Total number of violations on LAYER metal10 = 0
#Cpu time = 00:03:18
#Elapsed time = 00:03:21
#Increased memory = 0.00 (Mb)
#Total memory = 626.00 (Mb)
#Peak memory = 731.00 (Mb)
#
#Start Post Routing Optimization.
#start 1st post routing optimization iteration ...
#    number of DRC violations = 117
#cpu time = 00:00:30, elapsed time = 00:00:33, memory = 626.00 (Mb)
#start 2nd post routing optimization iteration ...
#    number of DRC violations = 117
#cpu time = 00:00:24, elapsed time = 00:00:25, memory = 626.00 (Mb)
#start 3rd post routing optimization iteration ...
#    number of DRC violations = 117
#cpu time = 00:00:31, elapsed time = 00:00:32, memory = 626.00 (Mb)
#start 4th post routing optimization iteration ...
#    number of DRC violations = 117
#cpu time = 00:00:25, elapsed time = 00:00:25, memory = 626.00 (Mb)
#Complete Post Routing Optimization.
#Cpu time = 00:01:50
#Elapsed time = 00:01:55
#Increased memory = 0.00 (Mb)
#Total memory = 626.00 (Mb)
#Peak memory = 731.00 (Mb)
#Total number of nets with non-default rule or having extra spacing = 85
#Total wire length = 1236261 um.
#Total half perimeter of net bounding box = 1139895 um.
#Total wire length on LAYER metal1 = 39875 um.
#Total wire length on LAYER metal2 = 422338 um.
#Total wire length on LAYER metal3 = 522920 um.
#Total wire length on LAYER metal4 = 232694 um.
#Total wire length on LAYER metal5 = 16845 um.
#Total wire length on LAYER metal6 = 599 um.
#Total wire length on LAYER metal7 = 732 um.
#Total wire length on LAYER metal8 = 45 um.
#Total wire length on LAYER metal9 = 197 um.
#Total wire length on LAYER metal10 = 15 um.
#Total number of vias = 267361
#Up-Via Summary (total 267361):
#           
#-----------------------
#  Metal 1       121551
#  Metal 2       111981
#  Metal 3        31940
#  Metal 4         1565
#  Metal 5          153
#  Metal 6           78
#  Metal 7           47
#  Metal 8           27
#  Metal 9           19
#-----------------------
#                267361 
#
#Total number of DRC violations = 117
#Total number of violations on LAYER metal1 = 113
#Total number of violations on LAYER metal2 = 4
#Total number of violations on LAYER metal3 = 0
#Total number of violations on LAYER metal4 = 0
#Total number of violations on LAYER metal5 = 0
#Total number of violations on LAYER metal6 = 0
#Total number of violations on LAYER metal7 = 0
#Total number of violations on LAYER metal8 = 0
#Total number of violations on LAYER metal9 = 0
#Total number of violations on LAYER metal10 = 0
#detailRoute Statistics:
#Cpu time = 00:05:08
#Elapsed time = 00:05:15
#Increased memory = 0.00 (Mb)
#Total memory = 626.00 (Mb)
#Peak memory = 731.00 (Mb)
#
#globalDetailRoute statistics:
#Cpu time = 00:05:38
#Elapsed time = 00:05:46
#Increased memory = -1.00 (Mb)
#Total memory = 626.00 (Mb)
#Peak memory = 731.00 (Mb)
#Number of warnings = 9
#Total number of warnings = 64
#Number of fails = 0
#Total number of fails = 1
#Complete globalDetailRoute on Sun Nov 13 17:50:40 2016
#
<CMD> optDesign -postRoute -drv
Disable merging buffers from different footprints for postRoute code for non-MSV designs
**optDesign ... cpu = 0:00:00, real = 0:00:00, mem = 626.9M **
#Created 34 library cell signatures
#Created 34850 NETS and 0 SPECIALNETS signatures
#Created 406426 instance signatures
Design contains fractional 20 cells.
Begin checking placement ... (start mem=635.9M, init mem=635.9M)
*info: Placed = 402775
*info: Unplaced = 0
Placement Density:98.83%(459121/464568)
Finished checkPlace (cpu: total=0:00:00.7, vio checks=0:00:00.1; mem=634.9M)
setExtractRCMode -coupled false
*** optDesign -postRoute ***
DRC Margin: user margin 0.0; extra margin 0
Setup Target Slack: user slack 0.0
Hold Target Slack: user slack 0.0
*info: Setting setup target slack to 0.000
*info: Hold target slack is 0.000
*** CTE mode ***
Deleting the dont_use list
Extraction called for design 'eth_core' of instances=406425 and nets=34850 using extraction engine 'postRoute' at effort level 'low' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Detail RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
**WARN: (ENCEXT-3032):	Since cap. table file was not provided, it will be created internally with the following process info:
* Layer Id             : 1 - M1
      Thickness        : 0.6
      Min Width        : 0.065
      Layer Dielectric : 4.1
* Layer Id             : 2 - M2
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 3 - M3
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 4 - M4
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 5 - M5
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 6 - M6
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 7 - M7
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 8 - M8
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 9 - M9
      Thickness        : 0.6
      Min Width        : 0.8
      Layer Dielectric : 4.1
* Layer Id             : 10 - M10
      Thickness        : 1
      Min Width        : 0.8
      Layer Dielectric : 4.1
extractDetailRC Option : -outfile ./eth_core_xWcbHR_24199.rcdb.d -maxResLength 200  -basic -newAssumeMetFill
Assumed metal fill uses the following parameters:
              Active Spacing      Min. Width
                [microns]         [microns]
**WARN: (ENCEXT-3087):	Fill active spacing for layer M1 is not specified, it will use  0.600 microns.
  Layer M1        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M2 is not specified, it will use  0.600 microns.
  Layer M2        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M3 is not specified, it will use  0.600 microns.
  Layer M3        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M4 is not specified, it will use  0.600 microns.
  Layer M4        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M5 is not specified, it will use  0.600 microns.
  Layer M5        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M6 is not specified, it will use  0.600 microns.
  Layer M6        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M7 is not specified, it will use  0.600 microns.
  Layer M7        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M8 is not specified, it will use  0.600 microns.
  Layer M8        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M9 is not specified, it will use  0.600 microns.
  Layer M9        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M10 is not specified, it will use  0.600 microns.
  Layer M10        0.600             0.400 
RC Mode: Detail [Assume Metal Fill, LEF Resistances]
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Coupling Cap. Scaling Factor : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res. Scaling Factor    : 1.00000
Shrink Factor                : 1.00000
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 634.9M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for storing RC.
Extracted 10.0003% (CPU Time= 0:00:00.4  MEM= 634.9M)
Extracted 20.0004% (CPU Time= 0:00:00.5  MEM= 634.9M)
Extracted 30.0004% (CPU Time= 0:00:00.7  MEM= 634.9M)
Extracted 40.0004% (CPU Time= 0:00:00.9  MEM= 634.9M)
Extracted 50.0005% (CPU Time= 0:00:01.1  MEM= 634.9M)
Extracted 60.0005% (CPU Time= 0:00:01.5  MEM= 634.9M)
Extracted 70.0005% (CPU Time= 0:00:01.6  MEM= 634.9M)
Extracted 80.0006% (CPU Time= 0:00:01.8  MEM= 634.9M)
Extracted 90.0006% (CPU Time= 0:00:02.1  MEM= 634.9M)
Extracted 100% (CPU Time= 0:00:02.4  MEM= 634.9M)
Nr. Extracted Resistors     : 581280
Nr. Extracted Ground Cap.   : 614827
Nr. Extracted Coupling Cap. : 0
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Detail RC Extraction DONE (CPU Time: 0:00:02.9  Real Time: 0:00:04.0  MEM: 634.938M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 634.9M, InitMEM = 634.9M)
Number of Loop : 0
Start delay calculation (mem=634.938M)...
delayCal using detail RC...
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
RC Database In Completed (CPU Time= 0:00:00.2  MEM= 634.9M)
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 34056 times net's RC data read were performed.
Delay calculation completed. (cpu=0:00:01.7 real=0:00:01.0 mem=634.938M 0)
*** CDM Built up (cpu=0:00:02.4  real=0:00:02.0  mem= 634.9M) ***
-holdSdfFile {}                            # string, default=""
-holdSdfScript {}                          # string, default="", private

------------------------------------------------------------
             Initial Summary                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -5.125  |
|           TNS (ns):| -4219.3 |
|    Violating Paths:|  3812   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.080   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 98.828%
------------------------------------------------------------
**optDesign ... cpu = 0:00:09, real = 0:00:10, mem = 634.9M **
*info: Start fixing DRV (Mem = 634.94M) ...
*info: Options = -postRoute -maxCap -maxTran -noMaxFanout -noSensitivity -backward -maxIter 1
*info: Start fixing DRV iteration 1 ...
*** Starting dpFixDRCViolation (634.9M)
*info: 85 clock nets excluded
*info: 2 special nets excluded.
*info: 739 no-driver nets excluded.
*info: 85 nets with fixed/cover wires excluded.
*info: There are 2 candidate Buffer cells
*info: There are 4 candidate Inverter cells
Initializing placement sections/sites ...
Density before buffering = 0.988276
Start fixing design rules ... (0:00:01.1 634.9M)
Done fixing design rule (0:00:01.8 634.9M)

Summary:
0 buffer added on 0 net (with 0 driver resized)

Density after buffering = 0.988276 (> 0.950000); stop prematurally!
*** Completed dpFixDRCViolation (0:00:01.9 634.9M)

*info:
*info: Completed fixing DRV (CPU Time = 0:00:02, Mem = 634.94M).

------------------------------------------------------------
     Summary (cpu=0.03min real=0.05min mem=634.9M)                             
------------------------------------------------------------

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -5.125  |
|           TNS (ns):| -4219.3 |
|    Violating Paths:|  3812   |
|          All Paths:|  7370   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.080   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 98.828%
------------------------------------------------------------
**optDesign ... cpu = 0:00:12, real = 0:00:14, mem = 634.9M **
-routeWithEco false                      # bool, default=false
-routeWithEco true                       # bool, default=false, user setting
-routeSelectedNetOnly false              # bool, default=false
-routeWithTimingDriven false             # bool, default=false
-routeWithSiDriven false                 # bool, default=false
-drouteStartIteration 0                  # int, default=0, user setting
-drouteStartIteration 0                  # int, default=0

globalDetailRoute

#Start globalDetailRoute on Sun Nov 13 17:50:55 2016
#
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N69 has logical connectivity at (405.175 66.025 M1) that is not on pin geometry(643.985 93.328 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N69 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N68 has logical connectivity at (384.180 82.935 M1) that is not on pin geometry(609.520 122.504 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N68 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N67 has logical connectivity at (402.040 137.275 M1) that is not on pin geometry(638.780 211.424 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N67 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N66 has logical connectivity at (428.640 179.645 M1) that is not on pin geometry(681.720 278.396 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N66 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N65 has logical connectivity at (437.760 92.815 M1) that is not on pin geometry(696.540 137.323 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N65 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N64 has logical connectivity at (411.920 66.025 M1) that is not on pin geometry(654.740 92.864 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N64 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N63 has logical connectivity at (338.960 115.425 M1) that is not on pin geometry(536.180 171.904 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N63 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N62 has logical connectivity at (305.900 92.910 M1) that is not on pin geometry(482.980 137.323 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N62 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N61 has logical connectivity at (33.440 147.250 M1) that is not on pin geometry(41.420 226.244 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N61 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N60 has logical connectivity at (109.915 120.365 M1) that is not on pin geometry(165.565 182.248 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N60 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N59 has logical connectivity at (113.240 87.875 M1) that is not on pin geometry(170.240 127.444 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N59 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N58 has logical connectivity at (55.100 95.665 M1) that is not on pin geometry(76.380 142.263 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N58 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N57 has logical connectivity at (127.680 70.965 M1) that is not on pin geometry(194.180 100.556 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N57 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N56 has logical connectivity at (68.780 229.045 M1) that is not on pin geometry(98.420 359.624 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N56 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N55 has logical connectivity at (104.500 164.825 M1) that is not on pin geometry(156.180 255.883 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N55 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N54 has logical connectivity at (137.940 166.915 M1) that is not on pin geometry(210.520 258.636 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N54 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N53 has logical connectivity at (47.215 35.245 M1) that is not on pin geometry(62.205 45.752 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N53 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N52 has logical connectivity at (213.560 110.485 M1) that is not on pin geometry(333.640 166.964 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N52 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682) NET FECTS_clks_clk___L4_N51 has logical connectivity at (227.620 70.965 M1) that is not on pin geometry(356.060 100.556 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44) imported NET FECTS_clks_clk___L4_N51 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (NRDB-682 Repeated 20 times. Will be suppressed.) NET FECTS_clks_clk___L4_N50 has logical connectivity at (140.600 63.175 M1) that is not on pin geometry(215.080 90.676 M0). This could be due to edited wires or imported data problem. Please check the layout in this location for FIXED or misaligned routing connections.
#WARNING (NRIG-44 Repeated 20 times. Will be suppressed.) imported NET FECTS_clks_clk___L4_N50 has LVS problem. The integrity of the wires will be checked. NanoRoute will continue. Check the net for FIXED or misaligned routing connections. If necessary, skip this net or delete the net routing.
#WARNING (EMS-27) Message (NRDB-682) has exceeded the current message display limit of 20.
#To increase the message display limit, refer to the product command reference manual.
#WARNING (EMS-27) Message (NRIG-44) has exceeded the current message display limit of 20.
#To increase the message display limit, refer to the product command reference manual.
#WARNING (NRDB-976) The step 0.280000 for preferred direction tracks is smaller than the pitch 0.285000 for LAYER metal4. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 0.280000 for preferred direction tracks is smaller than the pitch 0.285000 for LAYER metal6. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 0.840000 for preferred direction tracks is smaller than the pitch 0.855000 for LAYER metal8. This will cause routability problems for NanoRoute.
#WARNING (NRDB-976) The step 1.680000 for preferred direction tracks is smaller than the pitch 1.710000 for LAYER metal10. This will cause routability problems for NanoRoute.
#NanoRoute Version v09.14-s029 NR110207-1105/USR65-UB
#Loading the last recorded routing design signature
#Created 30472 NETS and 0 SPECIALNETS new signatures
#No placement changes detected since last routing
#WARNING (NREX-28) The height of the first routing layer metal1 is 0.000000. It should be larger than 0.000000
#WARNING (NREX-29) The metal thickness of routing layer metal1 is 0.000000. It should be larger than 0.0. Add this to the technology information for better accuracy.
#WARNING (NREX-30) Please also check the height and metal thickness values for the routing layers heigher than routing layer metal1
#WARNING (NREX-4) No Extended Cap Table was imported. Not enough process information was provided either and default Extended Cap Table database will be used.
#Merging special wires...
#WARNING (NRDB-1005) Can not establish connection to PIN A at (348.205 349.757) on metal1 for NET FECTS_clks_clk___L1_N0. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (345.165 357.423) on metal1 for NET FECTS_clks_clk___L1_N0. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (352.385 357.423) on metal1 for NET FECTS_clks_clk___L1_N0. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (348.585 357.423) on metal1 for NET FECTS_clks_clk___L1_N0. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (353.145 359.637) on metal1 for NET FECTS_clks_clk___L1_N0. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN Y at (374.142 698.197) on metal1 for NET FECTS_clks_clk___L1_N0. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (564.045 586.878) on metal1 for NET FECTS_clks_clk___L2_N0. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN Y at (353.243 359.720) on metal1 for NET FECTS_clks_clk___L2_N0. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (534.025 379.397) on metal1 for NET FECTS_clks_clk___L2_N1. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (164.665 497.958) on metal1 for NET FECTS_clks_clk___L2_N1. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (338.325 357.423) on metal1 for NET FECTS_clks_clk___L2_N1. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN Y at (348.683 357.338) on metal1 for NET FECTS_clks_clk___L2_N1. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (339.085 564.903) on metal1 for NET FECTS_clks_clk___L2_N2. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN Y at (352.483 357.338) on metal1 for NET FECTS_clks_clk___L2_N2. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (115.265 189.463) on metal1 for NET FECTS_clks_clk___L2_N3. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (313.625 125.243) on metal1 for NET FECTS_clks_clk___L2_N3. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN Y at (345.262 357.338) on metal1 for NET FECTS_clks_clk___L2_N3. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN A at (578.865 154.882) on metal1 for NET FECTS_clks_clk___L2_N4. The NET is considered partially routed.
#WARNING (NRDB-1005) Can not establish connection to PIN Y at (348.303 349.840) on metal1 for NET FECTS_clks_clk___L2_N4. The NET is considered partially routed.
#WARNING (NRDB-1005 Repeated 20 times. Will be suppressed.) Can not establish connection to PIN A at (471.325 643.942) on metal1 for NET FECTS_clks_clk___L3_N0. The NET is considered partially routed.
#WARNING (EMS-27) Message (NRDB-1005) has exceeded the current message display limit of 20.
#To increase the message display limit, refer to the product command reference manual.
#30023 routed nets are extracted.
#    85 (0.24%) extracted nets are partially routed.
#4035 routed nets are imported.
#792 routed nets are fixed|skipped|trivial (not extracted).
#Total number of nets = 34850.
#Number of eco nets is 85
#
#Start data preparation...
#
#Data preparation is done on Sun Nov 13 17:51:02 2016
#
#Analyzing routing resource...
#Routing resource analysis is done on Sun Nov 13 17:51:02 2016
#
#  Resource Analysis:
#
#               Routing  #Total     %Gcell
#  Layer      Direction   Gcell     Blocked
#  ------------------------------------------
#  Metal 1        H      110223      24.80%
#  Metal 2        V      110223       0.80%
#  Metal 3        H      110223       0.00%
#  Metal 4        V      110223       0.93%
#  Metal 5        H      110223       2.07%
#  Metal 6        V      110223       2.06%
#  Metal 7        H      110223       0.00%
#  Metal 8        V      110223       0.00%
#  Metal 9        H      110223       0.00%
#  Metal 10       V      110223       0.02%
#  ------------------------------------------
#  Total                1102230       3.07%
#
#  85 nets (0.24%) with 1 preferred extra spacing.
#
#
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#
#start global routing iteration 1...
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 642.00 (Mb)
#
#
#  Congestion Analysis: (blocked Gcells are excluded)
#
#                 OverCon          
#                  #Gcell    %Gcell
#     Layer           (1)   OverCon
#  --------------------------------
#   Metal 1    799(0.79%)   (0.79%)
#   Metal 2     30(0.03%)   (0.03%)
#   Metal 3      1(0.00%)   (0.00%)
#   Metal 4      0(0.00%)   (0.00%)
#   Metal 5      0(0.00%)   (0.00%)
#   Metal 6      0(0.00%)   (0.00%)
#   Metal 7      0(0.00%)   (0.00%)
#   Metal 8      0(0.00%)   (0.00%)
#   Metal 9      0(0.00%)   (0.00%)
#  Metal 10      0(0.00%)   (0.00%)
#  --------------------------------
#     Total    830(0.08%)   (0.08%)
#
#  The worst congested Gcell overcon (routing demand over resource in number of tracks) = 1
#
#Complete Global Routing.
#Total number of nets with non-default rule or having extra spacing = 85
#Total wire length = 1290083 um.
#Total half perimeter of net bounding box = 1139895 um.
#Total wire length on LAYER metal1 = 39875 um.
#Total wire length on LAYER metal2 = 422423 um.
#Total wire length on LAYER metal3 = 552205 um.
#Total wire length on LAYER metal4 = 257147 um.
#Total wire length on LAYER metal5 = 16845 um.
#Total wire length on LAYER metal6 = 599 um.
#Total wire length on LAYER metal7 = 732 um.
#Total wire length on LAYER metal8 = 45 um.
#Total wire length on LAYER metal9 = 197 um.
#Total wire length on LAYER metal10 = 15 um.
#Total number of vias = 278260
#Up-Via Summary (total 278260):
#           
#-----------------------
#  Metal 1       124925
#  Metal 2       115694
#  Metal 3        35752
#  Metal 4         1565
#  Metal 5          153
#  Metal 6           78
#  Metal 7           47
#  Metal 8           27
#  Metal 9           19
#-----------------------
#                278260 
#
#Max overcon = 1 tracks.
#Total overcon = 0.08%.
#Worst layer Gcell overcon rate = 0.00%.
#Cpu time = 00:00:08
#Elapsed time = 00:00:08
#Increased memory = 8.00 (Mb)
#Total memory = 642.00 (Mb)
#Peak memory = 731.00 (Mb)
#
#Start Detail Routing.
#start initial detail routing ...
#    completing 10% with 342 violations
#    cpu time = 00:00:02, elapsed time = 00:00:02, memory = 642.00 (Mb)
#    completing 20% with 630 violations
#    cpu time = 00:00:05, elapsed time = 00:00:05, memory = 642.00 (Mb)
#    completing 30% with 968 violations
#    cpu time = 00:00:08, elapsed time = 00:00:08, memory = 642.00 (Mb)
#    completing 40% with 1251 violations
#    cpu time = 00:00:11, elapsed time = 00:00:11, memory = 642.00 (Mb)
#    completing 50% with 1487 violations
#    cpu time = 00:00:13, elapsed time = 00:00:13, memory = 642.00 (Mb)
#    completing 60% with 1769 violations
#    cpu time = 00:00:16, elapsed time = 00:00:16, memory = 642.00 (Mb)
#    completing 70% with 2174 violations
#    cpu time = 00:00:19, elapsed time = 00:00:19, memory = 642.00 (Mb)
#    completing 80% with 2448 violations
#    cpu time = 00:00:22, elapsed time = 00:00:22, memory = 642.00 (Mb)
#    completing 90% with 2770 violations
#    cpu time = 00:00:25, elapsed time = 00:00:25, memory = 642.00 (Mb)
#    completing 100% with 3045 violations
#    cpu time = 00:00:26, elapsed time = 00:00:27, memory = 642.00 (Mb)
# ECO: 0.0% of the total area was rechecked for DRC, and 79.5% required routing.
#    number of violations = 3045
#cpu time = 00:00:27, elapsed time = 00:00:27, memory = 642.00 (Mb)
#start 1st optimization iteration ...
#    completing 10% with 3045 violations
#    cpu time = 00:00:00, elapsed time = 00:00:00, memory = 642.00 (Mb)
#    completing 20% with 3045 violations
#    cpu time = 00:00:00, elapsed time = 00:00:00, memory = 642.00 (Mb)
#    completing 30% with 3045 violations
#    cpu time = 00:00:00, elapsed time = 00:00:00, memory = 642.00 (Mb)
#    completing 40% with 3045 violations
#    cpu time = 00:00:00, elapsed time = 00:00:00, memory = 642.00 (Mb)
#    completing 50% with 3046 violations
#    cpu time = 00:00:00, elapsed time = 00:00:00, memory = 642.00 (Mb)
#    completing 60% with 3046 violations
#    cpu time = 00:00:00, elapsed time = 00:00:00, memory = 642.00 (Mb)
#    completing 70% with 3045 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 80% with 3046 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 90% with 3046 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 100% with 3046 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    number of violations = 3046
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#start 2nd optimization iteration ...
#    completing 10% with 3045 violations
#    cpu time = 00:00:00, elapsed time = 00:00:00, memory = 642.00 (Mb)
#    completing 20% with 3045 violations
#    cpu time = 00:00:00, elapsed time = 00:00:00, memory = 642.00 (Mb)
#    completing 30% with 3045 violations
#    cpu time = 00:00:00, elapsed time = 00:00:00, memory = 642.00 (Mb)
#    completing 40% with 3045 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 50% with 3046 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 60% with 3046 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 70% with 3046 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 80% with 3046 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 90% with 3046 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 100% with 3046 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    number of violations = 3046
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#start 3rd optimization iteration ...
#    completing 10% with 2746 violations
#    cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#    completing 20% with 2442 violations
#    cpu time = 00:00:02, elapsed time = 00:00:02, memory = 642.00 (Mb)
#    completing 30% with 2160 violations
#    cpu time = 00:00:04, elapsed time = 00:00:04, memory = 642.00 (Mb)
#    completing 40% with 1865 violations
#    cpu time = 00:00:05, elapsed time = 00:00:05, memory = 642.00 (Mb)
#    completing 50% with 1606 violations
#    cpu time = 00:00:06, elapsed time = 00:00:06, memory = 642.00 (Mb)
#    completing 60% with 1334 violations
#    cpu time = 00:00:08, elapsed time = 00:00:08, memory = 642.00 (Mb)
#    completing 70% with 1087 violations
#    cpu time = 00:00:09, elapsed time = 00:00:09, memory = 642.00 (Mb)
#    completing 80% with 812 violations
#    cpu time = 00:00:11, elapsed time = 00:00:11, memory = 642.00 (Mb)
#    completing 90% with 542 violations
#    cpu time = 00:00:12, elapsed time = 00:00:12, memory = 642.00 (Mb)
#    completing 100% with 288 violations
#    cpu time = 00:00:13, elapsed time = 00:00:13, memory = 642.00 (Mb)
#    number of violations = 288
#cpu time = 00:00:13, elapsed time = 00:00:13, memory = 642.00 (Mb)
#start 4th optimization iteration ...
#    number of violations = 209
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#start 5th optimization iteration ...
#    number of violations = 189
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 642.00 (Mb)
#start 6th optimization iteration ...
#    number of violations = 210
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 642.00 (Mb)
#start 7th optimization iteration ...
#    number of violations = 194
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 642.00 (Mb)
#start 8th optimization iteration ...
#    number of violations = 202
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 642.00 (Mb)
#start 9th optimization iteration ...
#    number of violations = 196
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 642.00 (Mb)
#start 10th optimization iteration ...
#    number of violations = 207
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 642.00 (Mb)
#start 11th optimization iteration ...
#    number of violations = 194
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 642.00 (Mb)
#start 12th optimization iteration ...
#    number of violations = 175
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 642.00 (Mb)
#start 13th optimization iteration ...
#    number of violations = 189
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 642.00 (Mb)
#start 14th optimization iteration ...
#    number of violations = 174
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 642.00 (Mb)
#start 15th optimization iteration ...
#    number of violations = 142
#cpu time = 00:00:04, elapsed time = 00:00:04, memory = 642.00 (Mb)
#start 16th optimization iteration ...
#    number of violations = 153
#cpu time = 00:00:05, elapsed time = 00:00:05, memory = 642.00 (Mb)
#start 17th optimization iteration ...
#    number of violations = 144
#cpu time = 00:00:05, elapsed time = 00:00:05, memory = 642.00 (Mb)
#start 18th optimization iteration ...
#    number of violations = 168
#cpu time = 00:00:05, elapsed time = 00:00:06, memory = 642.00 (Mb)
#start 19th optimization iteration ...
#    number of violations = 146
#cpu time = 00:00:06, elapsed time = 00:00:06, memory = 642.00 (Mb)
#start 20th optimization iteration ...
#    number of violations = 145
#cpu time = 00:00:05, elapsed time = 00:00:05, memory = 642.00 (Mb)
#Complete Detail Routing.
#Total number of nets with non-default rule or having extra spacing = 85
#Total wire length = 1291456 um.
#Total half perimeter of net bounding box = 1139895 um.
#Total wire length on LAYER metal1 = 40093 um.
#Total wire length on LAYER metal2 = 423301 um.
#Total wire length on LAYER metal3 = 550671 um.
#Total wire length on LAYER metal4 = 258895 um.
#Total wire length on LAYER metal5 = 16895 um.
#Total wire length on LAYER metal6 = 613 um.
#Total wire length on LAYER metal7 = 731 um.
#Total wire length on LAYER metal8 = 45 um.
#Total wire length on LAYER metal9 = 197 um.
#Total wire length on LAYER metal10 = 15 um.
#Total number of vias = 282515
#Up-Via Summary (total 282515):
#           
#-----------------------
#  Metal 1       125687
#  Metal 2       115404
#  Metal 3        39496
#  Metal 4         1596
#  Metal 5          161
#  Metal 6           78
#  Metal 7           47
#  Metal 8           27
#  Metal 9           19
#-----------------------
#                282515 
#
#Total number of DRC violations = 145
#Total number of violations on LAYER metal1 = 103
#Total number of violations on LAYER metal2 = 42
#Total number of violations on LAYER metal3 = 0
#Total number of violations on LAYER metal4 = 0
#Total number of violations on LAYER metal5 = 0
#Total number of violations on LAYER metal6 = 0
#Total number of violations on LAYER metal7 = 0
#Total number of violations on LAYER metal8 = 0
#Total number of violations on LAYER metal9 = 0
#Total number of violations on LAYER metal10 = 0
#Cpu time = 00:01:35
#Elapsed time = 00:01:36
#Increased memory = 0.00 (Mb)
#Total memory = 642.00 (Mb)
#Peak memory = 731.00 (Mb)
#
#Start Post Routing Optimization.
#start 1st post routing optimization iteration ...
#    number of DRC violations = 141
#cpu time = 00:00:36, elapsed time = 00:00:39, memory = 642.00 (Mb)
#start 2nd post routing optimization iteration ...
#    number of DRC violations = 141
#cpu time = 00:00:32, elapsed time = 00:00:33, memory = 642.00 (Mb)
#start 3rd post routing optimization iteration ...
#    number of DRC violations = 141
#cpu time = 00:00:33, elapsed time = 00:00:34, memory = 642.00 (Mb)
#Complete Post Routing Optimization.
#Cpu time = 00:01:41
#Elapsed time = 00:01:46
#Increased memory = 0.00 (Mb)
#Total memory = 642.00 (Mb)
#Peak memory = 731.00 (Mb)
#Total number of nets with non-default rule or having extra spacing = 85
#Total wire length = 1291462 um.
#Total half perimeter of net bounding box = 1139895 um.
#Total wire length on LAYER metal1 = 40115 um.
#Total wire length on LAYER metal2 = 423313 um.
#Total wire length on LAYER metal3 = 550656 um.
#Total wire length on LAYER metal4 = 258877 um.
#Total wire length on LAYER metal5 = 16897 um.
#Total wire length on LAYER metal6 = 614 um.
#Total wire length on LAYER metal7 = 731 um.
#Total wire length on LAYER metal8 = 45 um.
#Total wire length on LAYER metal9 = 197 um.
#Total wire length on LAYER metal10 = 15 um.
#Total number of vias = 282464
#Up-Via Summary (total 282464):
#           
#-----------------------
#  Metal 1       125704
#  Metal 2       115359
#  Metal 3        39473
#  Metal 4         1596
#  Metal 5          161
#  Metal 6           78
#  Metal 7           47
#  Metal 8           27
#  Metal 9           19
#-----------------------
#                282464 
#
#Total number of DRC violations = 141
#Total number of violations on LAYER metal1 = 116
#Total number of violations on LAYER metal2 = 25
#Total number of violations on LAYER metal3 = 0
#Total number of violations on LAYER metal4 = 0
#Total number of violations on LAYER metal5 = 0
#Total number of violations on LAYER metal6 = 0
#Total number of violations on LAYER metal7 = 0
#Total number of violations on LAYER metal8 = 0
#Total number of violations on LAYER metal9 = 0
#Total number of violations on LAYER metal10 = 0
#detailRoute Statistics:
#Cpu time = 00:03:16
#Elapsed time = 00:03:22
#Increased memory = 0.00 (Mb)
#Total memory = 642.00 (Mb)
#Peak memory = 731.00 (Mb)
#Updating routing design signature
#Created 34 library cell signatures
#Created 34850 NETS and 0 SPECIALNETS signatures
#Created 406426 instance signatures
#
#globalDetailRoute statistics:
#Cpu time = 00:03:28
#Elapsed time = 00:03:34
#Increased memory = 17.00 (Mb)
#Total memory = 651.00 (Mb)
#Peak memory = 731.00 (Mb)
#Number of warnings = 71
#Total number of warnings = 135
#Number of fails = 0
#Total number of fails = 1
#Complete globalDetailRoute on Sun Nov 13 17:54:29 2016
#
**optDesign ... cpu = 0:03:40, real = 0:03:48, mem = 651.9M **
-routeWithEco false                      # bool, default=false
-routeSelectedNetOnly false              # bool, default=false
-routeWithTimingDriven false             # bool, default=false
-routeWithSiDriven false                 # bool, default=false
-drouteStartIteration 0                  # int, default=0, user setting
Extraction called for design 'eth_core' of instances=406425 and nets=34850 using extraction engine 'postRoute' at effort level 'low' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Detail RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
**WARN: (ENCEXT-3032):	Since cap. table file was not provided, it will be created internally with the following process info:
* Layer Id             : 1 - M1
      Thickness        : 0.6
      Min Width        : 0.065
      Layer Dielectric : 4.1
* Layer Id             : 2 - M2
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 3 - M3
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 4 - M4
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 5 - M5
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 6 - M6
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 7 - M7
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 8 - M8
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 9 - M9
      Thickness        : 0.6
      Min Width        : 0.8
      Layer Dielectric : 4.1
* Layer Id             : 10 - M10
      Thickness        : 1
      Min Width        : 0.8
      Layer Dielectric : 4.1
extractDetailRC Option : -outfile ./eth_core_xWcbHR_24199.rcdb.d -maxResLength 200  -basic -newAssumeMetFill
Assumed metal fill uses the following parameters:
              Active Spacing      Min. Width
                [microns]         [microns]
**WARN: (ENCEXT-3087):	Fill active spacing for layer M1 is not specified, it will use  0.600 microns.
  Layer M1        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M2 is not specified, it will use  0.600 microns.
  Layer M2        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M3 is not specified, it will use  0.600 microns.
  Layer M3        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M4 is not specified, it will use  0.600 microns.
  Layer M4        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M5 is not specified, it will use  0.600 microns.
  Layer M5        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M6 is not specified, it will use  0.600 microns.
  Layer M6        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M7 is not specified, it will use  0.600 microns.
  Layer M7        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M8 is not specified, it will use  0.600 microns.
  Layer M8        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M9 is not specified, it will use  0.600 microns.
  Layer M9        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M10 is not specified, it will use  0.600 microns.
  Layer M10        0.600             0.400 
RC Mode: Detail [Assume Metal Fill, LEF Resistances]
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Coupling Cap. Scaling Factor : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res. Scaling Factor    : 1.00000
Shrink Factor                : 1.00000
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 651.9M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for storing RC.
Extracted 10.0004% (CPU Time= 0:00:00.4  MEM= 650.9M)
Extracted 20.0006% (CPU Time= 0:00:00.6  MEM= 650.9M)
Extracted 30.0004% (CPU Time= 0:00:00.8  MEM= 650.9M)
Extracted 40.0006% (CPU Time= 0:00:01.0  MEM= 650.9M)
Extracted 50.0004% (CPU Time= 0:00:01.3  MEM= 650.9M)
Extracted 60.0006% (CPU Time= 0:00:01.7  MEM= 650.9M)
Extracted 70.0004% (CPU Time= 0:00:01.8  MEM= 650.9M)
Extracted 80.0006% (CPU Time= 0:00:02.1  MEM= 650.9M)
Extracted 90.0004% (CPU Time= 0:00:02.4  MEM= 650.9M)
Extracted 100% (CPU Time= 0:00:02.8  MEM= 650.9M)
Nr. Extracted Resistors     : 612839
Nr. Extracted Ground Cap.   : 646395
Nr. Extracted Coupling Cap. : 0
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Detail RC Extraction DONE (CPU Time: 0:00:03.2  Real Time: 0:00:04.0  MEM: 650.938M)
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 650.9M, InitMEM = 650.9M)
Number of Loop : 0
Start delay calculation (mem=650.938M)...
delayCal using detail RC...
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
RC Database In Completed (CPU Time= 0:00:00.3  MEM= 650.9M)
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 34056 times net's RC data read were performed.
Delay calculation completed. (cpu=0:00:01.9 real=0:00:02.0 mem=650.938M 0)
*** CDM Built up (cpu=0:00:02.5  real=0:00:03.0  mem= 650.9M) ***
Reported timing to dir ./timingReports
**optDesign ... cpu = 0:03:46, real = 0:03:55, mem = 650.9M **

------------------------------------------------------------
     optDesign Final Summary                             
------------------------------------------------------------

+--------------------+---------+---------+---------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | in2reg  | reg2out | in2out  | clkgate |
+--------------------+---------+---------+---------+---------+---------+---------+
|           WNS (ns):| -9.054  | -9.030  | -9.054  | -1.127  | -0.839  |   N/A   |
|           TNS (ns):| -7029.3 | -4003.6 | -6596.2 |-153.842 | -77.886 |   N/A   |
|    Violating Paths:|  4898   |  2683   |  4436   |   277   |   190   |   N/A   |
|          All Paths:|  7370   |  3566   |  6377   |   522   |   341   |   N/A   |
+--------------------+---------+---------+---------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |   7858 (7858)    |   -0.081   |   7858 (7858)    |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 98.828%
------------------------------------------------------------
**optDesign ... cpu = 0:03:48, real = 0:03:57, mem = 650.9M **
*** Finished optDesign ***
**WARN: (ENCEXT-3493):	Extraction mode changed by calling extraction setup command 'setExtractRCMode'. Therefore, parasitic data in the tool generated as per previous mode is deleted. Call of extractRC/spefIn will generate/bring parasitic data in the tool as per current mode.
<CMD> setExtractRCMode -detail -noReduce
**WARN: (ENCEXT-1082):	Option '-detail' is obsolete. Use '-engine postRoute [-effortLevel low]' to set extraction engine, which is based on recommended convention '-engine postRoute [-effortLevel <low|medium|high|signoff>]'. The obsolete option still works in this release, but to avoid this warning and to ensure compatibility with future releases, update your script and configuration file to use recommended convention.
**WARN: (ENCEXT-3400):	Option '-noReduce' is obsolete. Use option '-reduce 0.0' instead.
<CMD> extractRC
Extraction called for design 'eth_core' of instances=406425 and nets=34850 using extraction engine 'postRoute' at effort level 'low' .
**WARN: (ENCEXT-3530):	Use of command 'setDesignMode -process <process_node>' prior to extraction is recommended for maximum accuracy and optimal automatic threshold setting.
Detail RC Extraction called for design eth_core.
**WARN: (ENCEXT-6166):	Using capacitance table file without EXTENDED section is not recommended and will result in lower accuracy for clock nets in preRoute extraction and for all nets when using postRoute extraction -effortLevel low. Regeneration of full capacitance table is recommended.
**WARN: (ENCEXT-3032):	Since cap. table file was not provided, it will be created internally with the following process info:
* Layer Id             : 1 - M1
      Thickness        : 0.6
      Min Width        : 0.065
      Layer Dielectric : 4.1
* Layer Id             : 2 - M2
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 3 - M3
      Thickness        : 0.6
      Min Width        : 0.07
      Layer Dielectric : 4.1
* Layer Id             : 4 - M4
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 5 - M5
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 6 - M6
      Thickness        : 0.6
      Min Width        : 0.14
      Layer Dielectric : 4.1
* Layer Id             : 7 - M7
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 8 - M8
      Thickness        : 0.6
      Min Width        : 0.4
      Layer Dielectric : 4.1
* Layer Id             : 9 - M9
      Thickness        : 0.6
      Min Width        : 0.8
      Layer Dielectric : 4.1
* Layer Id             : 10 - M10
      Thickness        : 1
      Min Width        : 0.8
      Layer Dielectric : 4.1
extractDetailRC Option : -outfile ./eth_core_xWcbHR_24199.rcdb.d -maxResLength 200  -basic -newAssumeMetFill
Assumed metal fill uses the following parameters:
              Active Spacing      Min. Width
                [microns]         [microns]
**WARN: (ENCEXT-3087):	Fill active spacing for layer M1 is not specified, it will use  0.600 microns.
  Layer M1        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M2 is not specified, it will use  0.600 microns.
  Layer M2        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M3 is not specified, it will use  0.600 microns.
  Layer M3        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M4 is not specified, it will use  0.600 microns.
  Layer M4        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M5 is not specified, it will use  0.600 microns.
  Layer M5        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M6 is not specified, it will use  0.600 microns.
  Layer M6        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M7 is not specified, it will use  0.600 microns.
  Layer M7        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M8 is not specified, it will use  0.600 microns.
  Layer M8        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M9 is not specified, it will use  0.600 microns.
  Layer M9        0.600             0.400 
**WARN: (ENCEXT-3087):	Fill active spacing for layer M10 is not specified, it will use  0.600 microns.
  Layer M10        0.600             0.400 
RC Mode: Detail [Assume Metal Fill, LEF Resistances]
Capacitance Scaling Factor   : 1.00000
Resistance Scaling Factor    : 1.00000
Coupling Cap. Scaling Factor : 1.00000
Clock Cap. Scaling Factor    : 1.00000
Clock Res. Scaling Factor    : 1.00000
Shrink Factor                : 1.00000
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 650.9M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for storing RC.
Extracted 10.0004% (CPU Time= 0:00:00.4  MEM= 650.9M)
Extracted 20.0006% (CPU Time= 0:00:00.5  MEM= 650.9M)
Extracted 30.0004% (CPU Time= 0:00:00.8  MEM= 650.9M)
Extracted 40.0006% (CPU Time= 0:00:01.1  MEM= 650.9M)
Extracted 50.0004% (CPU Time= 0:00:01.3  MEM= 650.9M)
Extracted 60.0006% (CPU Time= 0:00:01.9  MEM= 650.9M)
Extracted 70.0004% (CPU Time= 0:00:02.0  MEM= 650.9M)
Extracted 80.0006% (CPU Time= 0:00:02.3  MEM= 650.9M)
Extracted 90.0004% (CPU Time= 0:00:02.6  MEM= 650.9M)
Extracted 100% (CPU Time= 0:00:03.2  MEM= 650.9M)
Nr. Extracted Resistors     : 612839
Nr. Extracted Ground Cap.   : 646395
Nr. Extracted Coupling Cap. : 1686644
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Filtering XCap in 'relativeOnly' mode using values relative_c_threshold=0.03 and total_c_threshold=5fF.
Checking LVS Completed (CPU Time= 0:00:00.1  MEM= 650.9M)
Creating parasitic data file './eth_core_xWcbHR_24199.rcdb_Filter.rcdb.d/header.seq' for storing RC.
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 34056 times net's RC data read were performed.
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
Detail RC Extraction DONE (CPU Time: 0:00:04.3  Real Time: 0:00:08.0  MEM: 650.938M)
<CMD> buildTimingGraph
<CMD_INTERNAL> setCteReport
<CMD> report_timing -nworst  10 -net > timing.rep.5.final
Calculate delays in Single mode...
Topological Sorting (CPU = 0:00:00.1, MEM = 650.9M, InitMEM = 650.9M)
Number of Loop : 0
Start delay calculation (mem=650.938M)...
delayCal using detail RC...
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
RC Database In Completed (CPU Time= 0:00:00.3  MEM= 650.9M)
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 34056 times net's RC data read were performed.
Delay calculation completed. (cpu=0:00:02.0 real=0:00:02.0 mem=650.938M 0)
*** CDM Built up (cpu=0:00:02.6  real=0:00:02.0  mem= 650.9M) ***
<CMD> streamOut final.gds2 -mapFile gds2_encounter.map -stripes 1 -units 1000 -mode ALL
Parse map file...
Writing GDSII file ...
	****** db unit per micron = 2000 ******
	****** output gds2 file unit per micron = 1000 ******
	****** unit scaling factor = 0.5 ******
**WARN: (ENCOGDS-250):	specified units is smaller than the one in db - you may have rounding problems
Output for instance
Output for bump
Output for tile
Output for physical terminals
Output for logical terminals
Output for regular nets
Output for special nets and metal fills
Output for via structure generation
Statistics for GDS generated (version 3)
----------------------------------------
Stream Out Layer Mapping Information:
GDS Layer Number          GDS Layer Name
----------------------------------------
    49                            metal1
    51                            metal2
    61                              via2
    62                            metal3
    30                              via3
    31                            metal4
    32                              via4
    33                            metal5
    36                              via5
    37                            metal6
    38                              via6
    39                            metal7
    40                              via7
    41                            metal8
    42                              via8
    43                            metal9
    44                              via9
    45                           metal10
    50                               via
    49                            metal1
    51                            metal2
    62                            metal3
    31                            metal4
    39                            metal4
    33                            metal5
    41                            metal5
    37                            metal6
    45                            metal6


Stream Out Information Processed for GDS version 3:
Units: 1000 DBU

Object                             Count
----------------------------------------
Instances                         406425

Ports/Pins                          1264
    metal layer metal2               429
    metal layer metal3               445
    metal layer metal4               108
    metal layer metal5               123
    metal layer metal6                49
    metal layer metal7                31
    metal layer metal8                36
    metal layer metal9                 8
    metal layer metal10               35

Nets                              339726
    metal layer metal1             34997
    metal layer metal2            185633
    metal layer metal3             94658
    metal layer metal4             23307
    metal layer metal5               886
    metal layer metal6               128
    metal layer metal7                50
    metal layer metal8                26
    metal layer metal9                21
    metal layer metal10               20

    Via Instances                 282464

Special Nets                         836
    metal layer metal1               828
    metal layer metal5                 4
    metal layer metal6                 4

    Via Instances                   2768

Metal Fills                            0

    Via Instances                      0

Metal FillOPCs                         0

    Via Instances                      0

Text                                1436
    metal layer metal1                 2
    metal layer metal2               429
    metal layer metal3               445
    metal layer metal4               216
    metal layer metal5               246
    metal layer metal6                98


Blockages                              0


Custom Text                            0


Custom Box                             0

######Streamout is finished!
<CMD> saveNetlist -excludeLeafCell final.v
Writing Netlist "final.v" ...
<CMD> rcOut -spf final.dspf
Opening parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq' for reading.
RC Out has the following PVT Info:
   RC-typical 
Printing *|NET...
Detail RC Out Completed (CPU Time= 0:00:03.3  MEM= 650.9M)
Closing parasitic data file './eth_core_xWcbHR_24199.rcdb.d/header.seq'. 34056 times net's RC data read were performed.
<CMD> verifyGeometry
 *** Starting Verify Geometry (MEM: 650.9) ***

  VERIFY GEOMETRY ...... Starting Verification
  VERIFY GEOMETRY ...... Initializing
  VERIFY GEOMETRY ...... Deleting Existing Violations
  VERIFY GEOMETRY ...... Creating Sub-Areas
                  ...... bin size: 2080
  VERIFY GEOMETRY ...... SubArea : 1 of 9
  VERIFY GEOMETRY ...... Cells          :  0 Viols.
  VERIFY GEOMETRY ...... SameNet        :  191 Viols.
  VERIFY GEOMETRY ...... Wiring         :  345 Viols.
  VERIFY GEOMETRY ...... Antenna        :  0 Viols.
  VERIFY GEOMETRY ...... Sub-Area : 1 complete 536 Viols. 0 Wrngs.
  VERIFY GEOMETRY ...... SubArea : 2 of 9
  VERIFY GEOMETRY ...... Cells          :  0 Viols.
  VERIFY GEOMETRY ...... SameNet        :  60 Viols.
  VERIFY GEOMETRY ...... Wiring         :  185 Viols.
  VERIFY GEOMETRY ...... Antenna        :  0 Viols.
  VERIFY GEOMETRY ...... Sub-Area : 2 complete 245 Viols. 0 Wrngs.
  VERIFY GEOMETRY ...... SubArea : 3 of 9
  VERIFY GEOMETRY ...... Cells          :  0 Viols.
  VERIFY GEOMETRY ...... SameNet        :  0 Viols.
  VERIFY GEOMETRY ...... Wiring         :  0 Viols.
  VERIFY GEOMETRY ...... Antenna        :  0 Viols.
  VERIFY GEOMETRY ...... Sub-Area : 3 complete 0 Viols. 0 Wrngs.
  VERIFY GEOMETRY ...... SubArea : 4 of 9
**WARN: (ENCVFG-103):	VERIFY GEOMETRY did not complete: Number of violations exceeds the Error Limit [1000]
VG: elapsed time: 4.00
Begin Summary ...
  Cells       : 0
  SameNet     : 251
  Wiring      : 99
  Antenna     : 0
  Short       : 650
  Overlap     : 0
End Summary

  Verification Complete : 1000 Viols.  0 Wrngs.

**********End: VERIFY GEOMETRY**********
 *** verify geometry (CPU: 0:00:03.8  MEM: 41.5M)

<CMD> verifyConnectivity -type all

******** Start: VERIFY CONNECTIVITY ********
Start Time: Sun Nov 13 17:55:06 2016

Design Name: eth_core
Database Units: 2000
Design Boundary: (0.0000, 0.0000) (724.3225, 719.3900)
Error Limit = 1000; Warning Limit = 50
Check all nets
Net FECTS_clks_clk___L4_N69: dangling Wire.
Net FECTS_clks_clk___L4_N68: dangling Wire.
Net FECTS_clks_clk___L4_N67: dangling Wire.
Net FECTS_clks_clk___L4_N66: dangling Wire.
Net FECTS_clks_clk___L4_N65: dangling Wire.
Net FECTS_clks_clk___L4_N64: dangling Wire.
Net FECTS_clks_clk___L4_N63: dangling Wire.
Net FECTS_clks_clk___L4_N62: dangling Wire.
Net FECTS_clks_clk___L4_N61: dangling Wire.
Net FECTS_clks_clk___L4_N60: dangling Wire.
Net FECTS_clks_clk___L4_N59: dangling Wire.
Net FECTS_clks_clk___L4_N58: dangling Wire.
Net FECTS_clks_clk___L4_N57: dangling Wire.
Net FECTS_clks_clk___L4_N56: dangling Wire.
Net FECTS_clks_clk___L4_N55: dangling Wire.
Net FECTS_clks_clk___L4_N54: dangling Wire.
Net FECTS_clks_clk___L4_N53: dangling Wire.
Net FECTS_clks_clk___L4_N52: dangling Wire.
**WARN: (ENCVFC-3):	Verify Connectivity stopped: Number of errors exceeds the limit 1000
Net FECTS_clks_clk___L4_N51: dangling Wire.

VC Elapsed Time: 0:00:01.0

Begin Summary 
    1000 Problem(s) (ENCVFC-94): The net has dangling wire(s).
    1000 total info(s) created.
End Summary

End Time: Sun Nov 13 17:55:07 2016
******** End: VERIFY CONNECTIVITY ********
  Verification Complete : 1000 Viols.  0 Wrngs.
  (CPU Time: 0:00:00.3  MEM: 0.000M)

<CMD> saveDesign eth_core.enc
Redoing specifyClockTree ...
Checking spec file integrity...
Writing Netlist "eth_core.enc.dat/eth_core.v.gz" ...
**WARN: (ENCSYC-6105):	Option '-pt' is obsolete. The option is ignored in this release, but to avoid this warning, and to ensure compatibility with future releases, donot use this option.
**WARN: (ENCSYC-6108):	Option '-filePrefix' is obsolete. This option still works in this release, but to avoid this warning, and to ensure compatibility with future releases, donot use this option. Use '<filename>' option instead.
Saving clock tree spec file 'eth_core.enc.dat/eth_core.ctstch' ...
Saving configuration ...
Saving preference file eth_core.enc.dat/enc.pref.tcl ...
Saving floorplan ...
Saving Drc markers ...
... 2000 Drc markers are saved ...
Saving placement ...
*** Completed savePlace (cpu=0:00:00.3 real=0:00:01.0 mem=651.2M) ***
Saving route ...
*** Completed saveRoute (cpu=0:00:00.6 real=0:00:02.0 mem=651.2M) ***
*** Completed saveYieldMap (cpu=: 0:00:00.0 real=0:00:00.0 mem=: 0.000M) ***
Creating constraint file...
<CMD> set_power_analysis_mode -reset
<CMD> set_power_analysis_mode -method static -corner max -create_binary_db true -write_static_currents true -honor_negative_energy true -ignore_control_signals true
<CMD> set_power_output_dir -reset
<CMD> set_power_output_dir ./
<CMD> set_default_switching_activity -reset
<CMD> set_default_switching_activity -input_activity 0.2 -period 3.2
'set_default_switching_activity' finished successfully.
<CMD> read_activity_file -reset
<CMD> read_activity_file -format VCD -vcd_scope {} -start {} -end {} -vcd_block {} ../../../tb/mac_core.vcd
'read_activity_file' finished successfully.
<CMD> set_power -reset
<CMD> set_powerup_analysis -reset
<CMD> set_powerup_analysis -mode accurate -ultrasim_simulation_mode ms
<CMD> set_dynamic_power_simulation -reset
<CMD> report_power -rail_analysis_format VS -outfile .//eth_core.rpt


Start force assigning power rail voltages for view default_view_setup
Finished assigning power rail voltages

CPE found ground net: gnd
CPE found power net: vdd  voltage: 1.1V
INFO (POWER-1606): Found clock 'clk' with frequency 370.37MHz from SDC file.


Parsing VCD file ../../../tb/mac_core.vcd


Starting Reading VCD variables
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT)

Finished Reading VCD variables
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT)
   
The vcd command required:
   		0.16 user, 0.00 system, and 0.16 real seconds

   Total number of value changes: 0.

   Total simulation time: 5.145e-06s.

   With this vcd command,  0 value changes and 5.145e-06 second simulation
time were counted for power consumption calculation.

  Filename (activity)          : ../../../tb/mac_core.vcd
  Found in design              : 0/56530
  Coverage for file            : 0/34118 = 0%

  56530 nets were found in the VCD file(s) but were not in
  the design.  These nets are not reported because
  'read_activity_file -report_missing_nets' is set to false (default).

Propagating signal activity...


Starting Levelizing
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT)
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 5%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 10%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 15%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 20%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 25%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 30%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 35%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 40%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 45%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 50%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 55%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 60%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 65%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 70%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 75%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 80%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 85%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 90%
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT): 95%

Finished Levelizing
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT)

Starting Activity Propagation
2016-Nov-13 18:03:28 (2016-Nov-14 02:03:28 GMT)
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 5%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 10%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 15%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 20%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 25%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 30%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 35%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 40%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 45%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 50%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 55%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 60%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 65%

Finished Activity Propagation
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT)

Starting Calculating power
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT)

Calculating power dissipation...

 ... Calculating switching power
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 5%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 10%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 15%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 20%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 25%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 30%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 35%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 40%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 45%
2016-Nov-13 18:03:29 (2016-Nov-14 02:03:29 GMT): 50%
 ... Calculating internal and leakage power
2016-Nov-13 18:03:30 (2016-Nov-14 02:03:30 GMT): 55%
2016-Nov-13 18:03:30 (2016-Nov-14 02:03:30 GMT): 60%
2016-Nov-13 18:03:30 (2016-Nov-14 02:03:30 GMT): 65%
2016-Nov-13 18:03:30 (2016-Nov-14 02:03:30 GMT): 70%
2016-Nov-13 18:03:30 (2016-Nov-14 02:03:30 GMT): 75%
2016-Nov-13 18:03:30 (2016-Nov-14 02:03:30 GMT): 80%
2016-Nov-13 18:03:30 (2016-Nov-14 02:03:30 GMT): 85%
2016-Nov-13 18:03:31 (2016-Nov-14 02:03:31 GMT): 90%
2016-Nov-13 18:03:31 (2016-Nov-14 02:03:31 GMT): 95%

Finished Calculating power
2016-Nov-13 18:03:31 (2016-Nov-14 02:03:31 GMT)
*



Total Power
-----------------------------------------------------------------------------------------
Total Internal Power:       57.35       65.9%
Total Switching Power:       28.92      33.24%
Total Leakage Power:      0.7501      0.862%
Total Power:       87.02
-----------------------------------------------------------------------------------------
report_power consumed time (real time) 00:00:05 : increased peak memory
(785M) by 0
Output file is .//eth_core.rpt.

*** Memory Usage v0.159.2.9 (Current mem = 667.199M, initial mem = 50.625M) ***
--- Ending "Encounter" (totcpu=0:19:55, real=0:38:37, mem=667.2M) ---
